{
  "boards": [
    {
      "board": {
        "id": "a1b2c3d4-e5f6-47a8-b9c0-d1e2f3a4b5c6",
        "name": "Web Application Rewrite",
        "description": "Migrate legacy PHP application to Rust backend with React frontend",
        "created_at": "2025-09-15T09:00:00Z",
        "updated_at": "2025-10-10T14:30:00Z"
      },
      "columns": [
        {
          "id": "c0111111-1111-1111-1111-111111111111",
          "board_id": "a1b2c3d4-e5f6-47a8-b9c0-d1e2f3a4b5c6",
          "name": "Todo",
          "position": 0,
          "wip_limit": null,
          "created_at": "2025-09-15T09:00:00Z",
          "updated_at": "2025-09-15T09:00:00Z"
        }
      ],
      "cards": [
        {
          "id": "00000001-0001-0001-0001-000100100100",
          "column_id": "c0111111-1111-1111-1111-111111111111",
          "title": "Set up Rust backend project structure",
          "description": "Initialize Cargo workspace with axum web framework, implement basic routing and middleware setup",
          "priority": "High",
          "status": "Done",
          "position": 0,
          "due_date": "2025-09-20T17:00:00Z",
          "points": 5,
          "created_at": "2025-09-15T09:30:00Z",
          "updated_at": "2025-09-18T16:45:00Z"
        },
        {
          "id": "00000002-0002-0002-0002-000200200200",
          "column_id": "c0111111-1111-1111-1111-111111111111",
          "title": "Design database schema for user authentication",
          "description": "Create PostgreSQL schema with users, sessions, and permissions tables. Include migration scripts.",
          "priority": "High",
          "status": "Done",
          "position": 1,
          "due_date": "2025-09-25T17:00:00Z",
          "points": 3,
          "created_at": "2025-09-15T10:00:00Z",
          "updated_at": "2025-09-22T14:20:00Z"
        },
        {
          "id": "00000003-0003-0003-0003-000300300300",
          "column_id": "c0111111-1111-1111-1111-111111111111",
          "title": "Implement JWT authentication middleware",
          "description": "Add token-based auth with refresh tokens, secure cookie handling, and rate limiting",
          "priority": "Critical",
          "status": "InProgress",
          "position": 2,
          "due_date": "2025-10-15T17:00:00Z",
          "points": 5,
          "created_at": "2025-09-20T11:00:00Z",
          "updated_at": "2025-10-10T09:15:00Z"
        },
        {
          "id": "00000004-0004-0004-0004-000400400400",
          "column_id": "c0111111-1111-1111-1111-111111111111",
          "title": "Build React component library",
          "description": "Create reusable UI components with TypeScript, Tailwind CSS, and Storybook documentation",
          "priority": "Medium",
          "status": "Todo",
          "position": 3,
          "due_date": "2025-10-20T17:00:00Z",
          "points": 4,
          "created_at": "2025-09-25T13:00:00Z",
          "updated_at": "2025-09-25T13:00:00Z"
        },
        {
          "id": "00000005-0005-0005-0005-000500500500",
          "column_id": "c0111111-1111-1111-1111-111111111111",
          "title": "Set up CI/CD pipeline with GitHub Actions",
          "description": "Automated testing, linting, building, and deployment to staging environment",
          "priority": "High",
          "status": "Todo",
          "position": 4,
          "due_date": "2025-10-25T17:00:00Z",
          "points": 3,
          "created_at": "2025-09-28T10:30:00Z",
          "updated_at": "2025-09-28T10:30:00Z"
        },
        {
          "id": "00000006-0006-0006-0006-000600600600",
          "column_id": "c0111111-1111-1111-1111-111111111111",
          "title": "Write API documentation with OpenAPI spec",
          "description": "Document all REST endpoints with request/response examples and error codes",
          "priority": "Medium",
          "status": "Todo",
          "position": 5,
          "due_date": "2025-11-01T17:00:00Z",
          "points": 2,
          "created_at": "2025-10-01T14:00:00Z",
          "updated_at": "2025-10-01T14:00:00Z"
        },
        {
          "id": "00000007-0007-0007-0007-000700700700",
          "column_id": "c0111111-1111-1111-1111-111111111111",
          "title": "Performance testing and optimization",
          "description": "Load testing with k6, database query optimization, caching strategy implementation",
          "priority": "Low",
          "status": "Todo",
          "position": 6,
          "due_date": "2025-11-10T17:00:00Z",
          "points": 4,
          "created_at": "2025-10-05T11:00:00Z",
          "updated_at": "2025-10-05T11:00:00Z"
        }
      ]
    },
    {
      "board": {
        "id": "b2c3d4e5-f6a7-48b9-c0d1-e2f3a4b5c6d7",
        "name": "Personal Goals 2025",
        "description": "Track personal development and learning objectives",
        "created_at": "2025-01-01T00:00:00Z",
        "updated_at": "2025-10-10T08:00:00Z"
      },
      "columns": [
        {
          "id": "c0222222-2222-2222-2222-222222222222",
          "board_id": "b2c3d4e5-f6a7-48b9-c0d1-e2f3a4b5c6d7",
          "name": "Todo",
          "position": 0,
          "wip_limit": null,
          "created_at": "2025-01-01T00:00:00Z",
          "updated_at": "2025-01-01T00:00:00Z"
        }
      ],
      "cards": [
        {
          "id": "00000011-0011-0011-0011-001100110011",
          "column_id": "c0222222-2222-2222-2222-222222222222",
          "title": "Learn Rust programming language",
          "description": "Complete The Rust Programming Language book and build 3 CLI projects",
          "priority": "High",
          "status": "InProgress",
          "position": 0,
          "due_date": "2025-03-31T23:59:59Z",
          "points": 5,
          "created_at": "2025-01-01T10:00:00Z",
          "updated_at": "2025-10-10T07:30:00Z"
        },
        {
          "id": "00000012-0012-0012-0012-001200120012",
          "column_id": "c0222222-2222-2222-2222-222222222222",
          "title": "Read 24 technical books",
          "description": "2 books per month on software architecture, systems design, and programming",
          "priority": "Medium",
          "status": "InProgress",
          "position": 1,
          "due_date": "2025-12-31T23:59:59Z",
          "points": 3,
          "created_at": "2025-01-01T10:30:00Z",
          "updated_at": "2025-10-01T18:00:00Z"
        },
        {
          "id": "00000013-0013-0013-0013-001300130013",
          "column_id": "c0222222-2222-2222-2222-222222222222",
          "title": "Contribute to 5 open source projects",
          "description": "Submit meaningful PRs to projects in Rust, Go, or TypeScript ecosystems",
          "priority": "Medium",
          "status": "Todo",
          "position": 2,
          "due_date": "2025-12-31T23:59:59Z",
          "points": 4,
          "created_at": "2025-01-01T11:00:00Z",
          "updated_at": "2025-01-01T11:00:00Z"
        },
        {
          "id": "00000014-0014-0014-0014-001400140014",
          "column_id": "c0222222-2222-2222-2222-222222222222",
          "title": "Run a half marathon",
          "description": "Follow 12-week training plan, complete 21.1km race",
          "priority": "Low",
          "status": "Done",
          "position": 3,
          "due_date": "2025-06-15T09:00:00Z",
          "points": 5,
          "created_at": "2025-01-05T08:00:00Z",
          "updated_at": "2025-06-15T12:30:00Z"
        },
        {
          "id": "00000015-0015-0015-0015-001500150015",
          "column_id": "c0222222-2222-2222-2222-222222222222",
          "title": "Build personal website and blog",
          "description": "Static site with Hugo or Zola, host on Cloudflare Pages, write monthly posts",
          "priority": "Medium",
          "status": "Todo",
          "position": 4,
          "due_date": "2025-11-30T23:59:59Z",
          "points": 3,
          "created_at": "2025-02-01T10:00:00Z",
          "updated_at": "2025-02-01T10:00:00Z"
        }
      ]
    },
    {
      "board": {
        "id": "e119c091-e1fa-4596-9bc7-038ceab6adec",
        "name": "Kanban",
        "description": null,
        "created_at": "2025-10-10T08:47:44.779097Z",
        "updated_at": "2025-10-10T08:47:44.779097Z"
      },
      "columns": [
        {
          "id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "board_id": "e119c091-e1fa-4596-9bc7-038ceab6adec",
          "name": "Todo",
          "position": 0,
          "wip_limit": null,
          "created_at": "2025-10-10T08:47:57.834219Z",
          "updated_at": "2025-10-10T08:47:57.834219Z"
        }
      ],
      "cards": [
        {
          "id": "143615fe-fbcd-4d80-a88d-8173ec4b9573",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Unify import and export",
          "description": "The application is exporting boards using two different formats.\n\n```JSON\n{ board: { ... } }\n```\n\nand\n\n```JSON\n{ boards: [{ ... }] }\n```\n\nLet us make import and export only expect the latter.\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 0,
          "due_date": null,
          "points": 1,
          "created_at": "2025-10-10T08:47:57.834239Z",
          "updated_at": "2025-10-10T08:49:51.095368Z"
        }
      ]
    }
  ]
}