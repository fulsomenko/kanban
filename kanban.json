{
  "boards": [
    {
      "board": {
        "id": "e119c091-e1fa-4596-9bc7-038ceab6adec",
        "name": "Kanban",
        "description": null,
        "branch_prefix": null,
        "next_card_number": 31,
        "task_sort_field": "Points",
        "task_sort_order": "Descending",
        "created_at": "2025-10-10T08:47:44.779097Z",
        "updated_at": "2025-10-11T22:00:10.028574Z"
      },
      "columns": [
        {
          "id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "board_id": "e119c091-e1fa-4596-9bc7-038ceab6adec",
          "name": "Todo",
          "position": 0,
          "wip_limit": null,
          "created_at": "2025-10-10T08:47:57.834219Z",
          "updated_at": "2025-10-10T08:47:57.834219Z"
        }
      ],
      "cards": [
        {
          "id": "143615fe-fbcd-4d80-a88d-8173ec4b9573",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Unify import and export",
          "description": "The application is exporting boards using two different formats.\n\n```JSON\n{ board: { ... } }\n```\n\nand\n\n```JSON\n{ boards: [{ ... }] }\n```\n\nLet us make import and export only expect the latter.\n",
          "priority": "Medium",
          "status": "Done",
          "position": 0,
          "due_date": null,
          "points": 1,
          "card_number": 4,
          "created_at": "2025-10-10T08:47:57.834239Z",
          "updated_at": "2025-10-11T20:30:23.290462Z"
        },
        {
          "id": "959a092f-61de-41de-ac4a-729d6e1fcadf",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Rename tasks of exports to cards",
          "description": "To better align with the kanban domain let us change the export field `tasks` into `cards`\n",
          "priority": "Medium",
          "status": "Done",
          "position": 1,
          "due_date": null,
          "points": 1,
          "card_number": 5,
          "created_at": "2025-10-10T09:08:28.861766Z",
          "updated_at": "2025-10-11T20:30:20.829017Z"
        },
        {
          "id": "292e3f49-089b-40fb-8ea7-c693603904b2",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Add git branches to card meta data",
          "description": "We want to be able to create git branches and tie them to specific tasks so that we can trace the history.\n\nBe able to specify a prefix for use in the project\n\n- Set prefix in Board settings\n- Assign prefix + autoincremented number to card\n- From a card. Copy branch name\n- From a card. Copy `git checkout -b prefix+id`\n\nShould the id be autoincrement or uuid?\n\nReadability says it should be autoincremented. So we go with that for now.\n\n- If no prefix fallback to a default.\n- Customize default. Requires application configuration file feature?\n\n╭────────────────────────────────────────────────────────────────╮\n│ Git Branch Integration Implementation Plan                     │\n│                                                                │\n│ Core Design Decisions                                          │\n│                                                                │\n│ - Branch ID: Auto-incremented u32 per board (decided:          │\n│ readability over UUIDs)                                        │\n│ - Prefix Hierarchy: Board prefix → App config default → \"task\" │\n│  fallback                                                      │\n│ - ID Assignment: Lazy (on first request) to avoid assigning    │\n│ IDs to cards that never need branches                          │\n│ - Branch Format: {prefix}-{id} (e.g., feature-42, task-17)     │\n│                                                                │\n│ ---                                                            │\n│ 1. Domain Layer (kanban-domain)                                │\n│                                                                │\n│ Board model (board.rs):                                        │\n│ - Add branch_prefix: Option<String> field                      │\n│ - Add next_card_id: u32 field (default: 1)                   │\n│ - Add update_branch_prefix(&mut self, prefix: Option<String>)  │\n│ method                                                         │\n│ - Add allocate_card_id(&mut self) -> u32 method              │\n│                                                                │\n│ Card model (card.rs):                                          │\n│ - Add card_id: Option<u32> field                             │\n│ - Add ensure_card_id(&mut self, board: &mut Board) method    │\n│ - Add branch_name(&self, board: &Board, default_prefix: &str)  │\n│ -> Option<String> method                                       │\n│ - Add git_checkout_command(&self, board: &Board,               │\n│ default_prefix: &str) -> Option<String> method                 │\n│ - Add prefix validation (no spaces, git-safe characters)       │\n│                                                                │\n│ ---                                                            │\n│ 2. Application Configuration (kanban-core)                     │\n│                                                                │\n│ Create new config.rs module:                                   │\n│ - Define AppConfig struct with default_branch_prefix:          │\n│ Option<String>                                                 │\n│ - Use config crate or simple TOML parsing                      │\n│ - Config file location: ~/.config/kanban/config.toml           │\n│ - Load config on app startup in kanban-cli                     │\n│ - Thread through to TUI via App struct                         │\n│                                                                │\n│ ---                                                            │\n│ 3. Clipboard Integration (kanban-tui)                          │\n│                                                                │\n│ Add dependencies to kanban-tui/Cargo.toml:                     │\n│ - arboard = \"3.4\" (cross-platform clipboard)                   │\n│                                                                │\n│ Create new clipboard.rs module:                                │\n│ - copy_to_clipboard(text: &str) -> io::Result<()>              │\n│ - Handle errors gracefully (e.g., headless environments)       │\n│                                                                │\n│ ---                                                            │\n│ 4. TUI Layer (kanban-tui)                                      │\n│                                                                │\n│ App struct (app.rs):                                           │\n│ - Add app_config: AppConfig field                              │\n│ - Add clipboard operations to card detail mode                 │\n│                                                                │\n│ Board settings (new mode AppMode::BoardSettings):              │\n│ - Add focus state for navigating board settings                │\n│ - Edit branch prefix with external editor or inline input      │\n│ - Show current prefix, effective prefix (with fallback chain)  │\n│                                                                │\n│ Card detail view (ui.rs):                                      │\n│ - Show branch ID (if assigned)                                 │\n│ - Show computed branch name                                    │\n│ - Show git checkout command                                    │\n│                                                                │\n│ Key bindings (in CardDetail mode):                             │\n│ - b - Assign branch ID (if not already assigned)               │\n│ - y - Copy branch name to clipboard                            │\n│ - Y - Copy git checkout -b {branch} to clipboard               │\n│ - Add to help text                                             │\n│                                                                │\n│ New AppMode variants:                                          │\n│ - BoardSettings - for editing board-level settings             │\n│ - SetBranchPrefix - dialog for setting prefix                  │\n│                                                                │\n│ ---                                                            │\n│ 5. Persistence                                                 │\n│                                                                │\n│ Update serialization/deserialization:                          │\n│ - Board export/import already uses serde                       │\n│ - New fields automatically included                            │\n│ - Migration: existing boards get branch_prefix: None,          │\n│ next_card_id: 1                                              │\n│ - Existing cards get card_id: None                           │\n│                                                                │\n│ ---                                                            │\n│ 6. Testing Strategy                                            │\n│                                                                │\n│ Unit tests:                                                    │\n│ - Branch ID allocation (sequential, no gaps)                   │\n│ - Branch name generation with different prefix scenarios       │\n│ - Prefix validation (reject invalid git characters)            │\n│ - Clipboard operations (mock if needed)                        │\n│                                                                │\n│ Integration tests:                                             │\n│ - Round-trip serialization with new fields                     │\n│ - Multiple cards getting sequential IDs                        │\n│                                                                │\n│ ---                                                            │\n│ 7. Implementation Order                                        │\n│                                                                │\n│ 1. Add AppConfig in kanban-core                                │\n│ 2. Update Board domain model with prefix + next_card_id      │\n│ 3. Update Card domain model with card_id + methods           │\n│ 4. Add clipboard module to kanban-tui                          │\n│ 5. Update App struct to hold config                            │\n│ 6. Add board settings mode in TUI                              │\n│ 7. Add card detail branch operations                           │\n│ 8. Update help text and key bindings                           │\n│ 9. Add tests                                                   │\n│ 10. Update CLAUDE.md with new features                         │\n│                                                                │\n│ ---                                                            │\n│ 8. Edge Cases & Validation                                     │\n│                                                                │\n│ - Validate prefix: alphanumeric + hyphens only, no             │\n│ leading/trailing hyphens                                       │\n│ - Max branch name length: git supports ~255 chars, warn if     │\n│ prefix + ID exceeds reasonable length                          │\n│ - Clipboard unavailable: show friendly error, fallback to      │\n│ displaying text                                                │\n│ - Board without prefix: use app config default or \"task\"       │\n│ - Cards created before feature: assign IDs on demand           │\n│                                                                │\n│ ---                                                            │\n│ Example Usage Flow                                             │\n│                                                                │\n│ 1. User opens board settings (s in projects view)              │\n│ 2. Sets prefix to \"feat\"                                       │\n│ 3. Navigates to card, presses b to assign branch ID → card     │\n│ gets card_id=1                                               │\n│ 4. Board's next_card_id increments to 2                      │\n│ 5. User presses y → copies \"feat-1\" to clipboard               │\n│ 6. User presses Y → copies \"git checkout -b feat-1\" to         │\n│ clipboard                                                      │\n│ 7. Next card gets card_id=2, branch name \"feat-2\"            │\n│                                                                │\n│ ---                                                            │\n│ Dependencies to add:                                           │\n│ - arboard = \"3.4\" (clipboard)                                  │\n│ - config = \"0.14\" (optional, for TOML config parsing)          │\n│ - OR use simple std::fs::read_to_string + toml = \"0.8\" for     │\n│ lightweight config     \n",
          "priority": "Medium",
          "status": "Done",
          "position": 2,
          "due_date": null,
          "points": 5,
          "card_number": 1,
          "created_at": "2025-10-10T21:58:56.145240Z",
          "updated_at": "2025-10-11T20:30:19.498471Z"
        },
        {
          "id": "f1a80abd-338c-4593-92d6-20c2db7dc093",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Links to cards",
          "description": "Be able to have references to other cards.\n\n[like this](DEV-0001) Should be able to follow that link and open the card in Task Description interface.\n\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 3,
          "due_date": null,
          "points": 4,
          "card_number": 2,
          "created_at": "2025-10-10T22:03:42.988557Z",
          "updated_at": "2025-10-11T20:33:59.906332Z"
        },
        {
          "id": "e96684a5-4645-443e-8e2c-6bb646e248c6",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Card dependencies",
          "description": "Introduce two features\n\n# Block\n\n- Add blocked by card\n- Add create blocker. Creating the new card that would be the blocker.\n\n# Grouping of cards under one card\n\nI would like to keep things flat but I would like card meta data where I can group cards by a top level card.\n\nThe interface would present the grouping as nested to begin with and we see how it behaves?\n\nExample\n\n```\nImplement Card Grouping ...\n```\n\nWhich would when hit enter or space on expand into\n\n```\nImplement Card Grouping\n  Create ui\n  Add metadata\n```\n\n# Duplicate cards\n\nWhen two cards propose changes that are two sides of the same coin. Be able to add them as siblings. \n\nBut when two cards propose changes that are the same side of the same coin, we want to merge them together. Creating a new card by editing the description and title in a git conflict type way\n\nThe merging will ofcourse be handled by opening EDITOR and injecting the content into their respective section.\n\nExample\n---\n\nTitle\n\n```\n<<<<<<< KAN-0001\nCard Background\n=======\nCard Background Color\n>>>>>>> KAN-0002\n```\n\nDescription\n\n```\nWe want to introduce a new feature that\n<<<<<<< KAN-0001\nMakes card background purple\n=======\nMakes card background green\n>>>>>>> KAN-0002\n```\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 4,
          "due_date": null,
          "points": 4,
          "card_number": 6,
          "created_at": "2025-10-10T22:05:04.607714Z",
          "updated_at": "2025-10-10T22:44:01.235679Z"
        },
        {
          "id": "90f8121a-045f-47fd-b8fe-bb0e5b7662b1",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Add column definitions",
          "description": "At the project level. Be able to define columns\n\nMinimum and default.\n\n- TODO\n- Complete\n\nBe able to change the name of columns\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 5,
          "due_date": null,
          "points": 2,
          "card_number": 7,
          "created_at": "2025-10-10T22:11:25.809290Z",
          "updated_at": "2025-10-11T20:40:58.659416Z"
        },
        {
          "id": "86c1b649-03bc-4da8-87c3-e20a2c56a640",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Test the application with another editor",
          "description": "Need to try the application to see how it behaves with different editors\n\n- VSCode\n- vim\n- vi\n- emacs\n\nWindows\n\n- notepad\n- notepad++\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 6,
          "due_date": null,
          "points": 1,
          "card_number": 8,
          "created_at": "2025-10-10T22:13:04.048521Z",
          "updated_at": "2025-10-10T22:14:15.622866Z"
        },
        {
          "id": "eceed2ce-de5e-4166-95e7-7fb9c7e65b20",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Change priority",
          "description": "- Be able to change the priority of a task\n\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 7,
          "due_date": null,
          "points": 1,
          "card_number": 9,
          "created_at": "2025-10-10T22:14:31.293267Z",
          "updated_at": "2025-10-11T20:41:09.462182Z"
        },
        {
          "id": "7cd165b0-6671-46d6-b837-4e73ada26333",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Add or update priorities",
          "description": "On the board level. \n\nBe able to configure priorities and change their names. \n\nWe should start with only medium?\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 8,
          "due_date": null,
          "points": 1,
          "card_number": 10,
          "created_at": "2025-10-10T22:15:09.199792Z",
          "updated_at": "2025-10-10T22:16:05.956954Z"
        },
        {
          "id": "454144d2-27ac-4abf-8632-407908fa8f80",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Be able to scroll in the card description",
          "description": "Should be pretty self explantory. For cards with a loger description.\n\nWe want to be able to scroll so see more.\n\nPriority low as we can open `$EDITOR`\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 9,
          "due_date": null,
          "points": 1,
          "card_number": 11,
          "created_at": "2025-10-10T22:53:19.579898Z",
          "updated_at": "2025-10-10T22:54:22.387591Z"
        },
        {
          "id": "d48f9085-57ff-42c5-9f42-3cbb3cafde93",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Publish on nixpkgs",
          "description": "# Steps to Add Your Project to Nixpkgs\n\n## 1. Add Yourself as a Maintainer\n\nFirst, you'll need to add yourself to the maintainer list in maintainers/maintainer-list.nix with a separate commit titled \"maintainers: add <your-handle>\".\n\n## 2. Create the Package Expression\n\nSince your Kanban is a Rust project, you'll use buildRustPackage from rustPlatform nixpkgs/doc/languages-frameworks/rust.section.md at master · NixOS/nixpkgs\n\n[default.nix](./default.nix) \n\n## 3. Determine Package Location\n\nDecide which pkgs/ subfolder your expression should live in, then add your expression under a directory like pkgs/applications/misc/kanban/default.nix or similar\n\n## 4. Add to Package Index\n\nAdd an entry in pkgs/top-level/all-packages.nix so nixpkgs can find your package \n\n## 5. Fork and Test\n\nFork the nixpkgs repository, make your changes in a local branch, then build from the root of nixpkgs with nix-build -A kanban Nixpkgs/Contributing - NixOS Wiki\n\n## 6. Handle the Hash Values\n\nFor the cargoHash, you can initially use an empty string or fake hash, and Nix will tell you the correct hash when you try to build nixpkgs/doc/languages-frameworks/rust.section.md at master · NixOS/nixpkgs\n\n## 7. Submit a Pull Request\n\nOnce your package builds successfully, format your code with a Nix formatter like alejandra, then open a PR on GitHub with the title format \"kanban: init at <version>\" \n\n## 8. Wait for Review\n\nBe patient - it's normal for PRs to sit for weeks. If you need help, you can reach out on NixOS Discourse or the Matrix channels\n\n## Important Considerations\n\nRead the commit conventions specific to pkgs and include relevant information in your commit messages so others can understand why changes were made \n\nThe maintainers field is for you as the Nix expression maintainer, not the project maintainer. By submitting this package, you're taking responsibility for ongoing maintenance like version bumps \n\n\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 10,
          "due_date": null,
          "points": 5,
          "card_number": 12,
          "created_at": "2025-10-10T22:56:04.200355Z",
          "updated_at": "2025-10-11T20:41:24.403599Z"
        },
        {
          "id": "6a0cbe1e-a05e-4aca-bd53-f0057215d671",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Add order tasks lists by",
          "description": "Order tasks by\n\n- Points\n- Priority\n- Date created\n- Date due\n- Date updated\n- Status\n\nMVP\n---\n\nI think in the tasks panel. hit o (for order or organize) and then are presented with a dialogue where can choose one of the above options.\n\nThe dialogue should use the same selection mechanism as the projects and tasks lists do.\n\nAfter one of the options have been selected. The task list should be ordered according to the chosen option.\n\nFor now we leave out Date due from selection as we have not added this feature yet.\n\nOrder can be descending or ascending. a for ascending and d for descending after selecting an item. Taking suggestions on UX here..\n\n---\n\nFor the future. Keep in mind that I would also like to order the projects panel in the same way as the tasks panel but along a shorter list of options\n\n- Name\n- Date created\n- Date updated\n",
          "priority": "Medium",
          "status": "Done",
          "position": 11,
          "due_date": null,
          "points": 2,
          "card_number": 13,
          "created_at": "2025-10-10T23:01:18.553586Z",
          "updated_at": "2025-10-11T22:26:20.802010Z"
        },
        {
          "id": "9e8f918f-3fde-4847-aca8-0ab7646256a8",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Record demo",
          "description": "Using VHS record a demo so that we can post a gif of the tui to our github.\n\n```\n Complete Demo Script: Building a Web API Project\n\n  Scene 1: Launch & Create Board (0-15s)\n\n  $ cargo run\n  [TUI loads]\n  Press 'n'\n  Type: \"Web API Project\"\n  Press Enter\n  Narration: \"Creating a new project for our web API development\"\n\n  Scene 2: Add Cards with Different Priorities (15-50s)\n\n  Press '2' (switch to Tasks panel)\n  Press 'n'\n  Type: \"Setup development environment\"\n  Press Enter\n\n  Press 'n'\n  Type: \"Design database schema\"\n  Press Enter\n\n  Press 'n'\n  Type: \"Implement authentication API\"\n  Press Enter\n\n  Press 'n'\n  Type: \"Write integration tests\"\n  Press Enter\n  Narration: \"Adding tasks to our backlog\"\n\n  Scene 3: Edit Card Details - Full Metadata (50-90s)\n\n  Press 'k' (move up to first card)\n  Press Enter (open card detail)\n\n  [Show Title panel highlighted]\n  Press 'e'\n  [External editor opens]\n  Type: \"Setup development environment\\nInstall Rust, PostgreSQL, Docker\"\n  Save & exit\n\n  Press '2' (switch to Metadata panel)\n  Press 'e'\n  Type: \"3\" (for 3 story points - Yellow badge)\n  Press Enter\n\n  Press 's' (change status)\n  Type: \"InProgress\"\n  Press Enter\n\n  Press 'p' (change priority)\n  Type: \"High\"\n  Press Enter\n\n  Press '3' (switch to Description panel)\n  Press 'e'\n  [External editor opens]\n  Type: \"Dependencies:\\n- Rust 1.70+\\n- PostgreSQL 15\\n- Docker & docker-compose\\n\\nSetup steps:\\n1. Install Rust toolchain\\n2.\n  Configure database\\n3. Run initial migrations\"\n  Save & exit\n\n  Press Escape (back to main view)\n  Narration: \"Setting story points, priority, status, and detailed description\"\n\n  Scene 4: Mark Card Complete & Copy Branch Name (90-110s)\n\n  Press 'c' (toggle completion)\n  [Card shows checkmark ✓]\n\n  Press 'j' (move down)\n  Press Enter (open second card)\n  Press 'b' (copy branch name to clipboard)\n  [Shows: \"Copied branch name to clipboard\"]\n\n  Press 'y' (copy card ID)\n  [Shows: \"Copied card ID to clipboard\"]\n\n  Press Escape\n  Narration: \"Marking tasks complete and copying branch names for git workflow\"\n\n  Scene 5: Board Settings with Branch Prefix (110-130s)\n\n  Press '1' (switch to Projects)\n  Press 's' (open board settings)\n  Press 'p' (set branch prefix)\n  Type: \"feat\"\n  Press Enter\n  [Shows: \"Branch prefix set to: feat\"]\n  Press Escape\n  Narration: \"Configuring git branch prefixes for consistent naming\"\n\n  Scene 6: Edit Board Details (130-150s)\n\n  Press 'e' (edit board)\n  [BoardDetail view opens]\n  Press '2' (Description panel)\n  Press 'e'\n  [External editor]\n  Type: \"RESTful API for user management\\n\\nTech Stack:\\n- Rust + Actix-web\\n- PostgreSQL\\n- JWT authentication\"\n  Save & exit\n  Press Escape\n  Narration: \"Adding project documentation\"\n\n  Scene 7: Export Board (150-165s)\n\n  Press 'x' (export current board)\n  Type: \"web-api-project.json\"\n  Press Enter\n  [Shows: \"Board exported successfully\"]\n  Narration: \"Exporting project data to JSON\"\n\n  Scene 8: Complete More Tasks (165-185s)\n\n  Press '2' (Tasks panel)\n  Press 'j' (move down to third card)\n  Press Enter\n  Press '2' (Metadata)\n  Press 'e'\n  Type: \"5\" (5 story points - Red badge for critical)\n  Press Enter\n  Press 's'\n  Type: \"Blocked\"\n  Press Enter\n  Press Escape\n\n  Press 'j' (fourth card)\n  Press 'c' (mark complete)\n  Narration: \"Managing task progress - marking some blocked, others complete\"\n\n  Scene 9: Import Demo (185-205s)\n\n  Press 'i' (import)\n  [File list shows: web-api-project.json, example.json]\n  Press 'j'\n  Press Enter\n  [Shows: \"1 board(s) imported successfully\"]\n  Narration: \"Importing previously exported projects\"\n\n  Scene 10: Final Overview & Quit (205-215s)\n\n  Press '1' (Projects)\n  [Show list of boards]\n  Press '2' (Tasks)\n  [Show cards with different colors for story points, completion marks]\n\n  Press 'q'\n  [Auto-save message]\n  [Exit to shell]\n  Narration: \"All changes are auto-saved on exit\"\n\n  ---\n  Key Features Showcased:\n\n  ✅ Board creation (n)✅ Card creation (n)✅ External editor integration (title & description with e)✅ Story points with color coding\n  (1-5: e in Metadata)✅ Status management (s: Todo/InProgress/Blocked/Done)✅ Priority levels (p: Low/Medium/High/Critical)✅ Task\n  completion (c)✅ Branch name copying (b)✅ Card ID copying (y)✅ Board settings (s)✅ Branch prefix configuration (p)✅ Board details\n  editing (e from Projects)✅ Export single board (x)✅ Import boards (i)✅ Auto-save on quit✅ Panel navigation (1/2/3)✅ Vim-style\n  navigation (j/k)\n\n  Total runtime: ~3:35 minutes\n  ```\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 12,
          "due_date": null,
          "points": 5,
          "card_number": 14,
          "created_at": "2025-10-11T18:27:29.674825Z",
          "updated_at": "2025-10-11T20:30:26.827479Z"
        },
        {
          "id": "1e257c13-f9ee-40e4-86b5-704a9649ea4e",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Progressive saving / Detect changes to current json",
          "description": "If for whatever reason two instances of Kanban are editing the same JSON.\n\nImplement a procedure to listen for changes \n\nProgressive saving and not all at the end?\n\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 13,
          "due_date": null,
          "points": 3,
          "card_number": 15,
          "created_at": "2025-10-11T18:29:10.434614Z",
          "updated_at": "2025-10-11T22:26:03.008952Z"
        },
        {
          "id": "9273b022-f7f8-4975-b9c5-7a57c55eba30",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "add -v flag",
          "description": "It would be nice to be able to view the version of the program\n\nAlso add the version to the `--help` output\n",
          "priority": "Medium",
          "status": "Done",
          "position": 14,
          "due_date": null,
          "points": 1,
          "card_number": 3,
          "created_at": "2025-10-11T18:36:43.972262Z",
          "updated_at": "2025-10-11T19:03:44.948745Z"
        },
        {
          "id": "a189ef1a-903c-4c43-924e-2194562237f6",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "drop the Header in the UI",
          "description": "The \"Kanban Board\" header of the interface can go away.\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 15,
          "due_date": null,
          "points": 1,
          "card_number": 16,
          "created_at": "2025-10-11T18:38:07.855746Z",
          "updated_at": "2025-10-11T18:38:31.637758Z"
        },
        {
          "id": "ed0ead2b-6da9-4889-83b7-e4c60ab11032",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Give cards ID from the beginning",
          "description": "No need to explicitly generate IDS for cards.\n\nWe just give them IDs immediately\n",
          "priority": "Medium",
          "status": "Done",
          "position": 16,
          "due_date": null,
          "points": 1,
          "card_number": 17,
          "created_at": "2025-10-11T18:39:14.248330Z",
          "updated_at": "2025-10-11T19:43:05.716699Z"
        },
        {
          "id": "1c0b1752-53f1-4240-be75-0706662156df",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Add sprints",
          "description": "Be able to group cards by sprints. \nSet sprint duration and automatic starting of new sprints\n\nMVP\n\nBoard level defines sprint duration.\n\nIf duration is set, sprint init is possible.\n\nAdd Sprint, set start date, assign cards to it.\n\n---\n\nThere should be a UI for sprints. On Project / Board edit\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 17,
          "due_date": null,
          "points": 4,
          "card_number": 18,
          "created_at": "2025-10-11T18:42:39.943129Z",
          "updated_at": "2025-10-11T19:52:50.287355Z"
        },
        {
          "id": "f4c31d5d-7f78-451c-b7db-f26e4931fae4",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Link to pull request",
          "description": "If a pull request is open for a card. Open a link to that pull\n\nshow if a card has a pull request open (or in draft in the task list)\n\nExamples\n\nPR opem\n```\nA task name - [PR] (green)\n```\n\nDraft\n```\nA task name - [PR] (greyed out)\n```\n---\n\nI am getting the feeling that this would depend on having configuration for collaborative version control per board\n\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 18,
          "due_date": null,
          "points": 3,
          "card_number": 19,
          "created_at": "2025-10-11T18:45:47.488818Z",
          "updated_at": "2025-10-11T19:01:45.403042Z"
        },
        {
          "id": "8ecc1849-bde7-4f97-99f7-44b7d9158bbf",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Remove a card",
          "description": "Be able to drop a card \n",
          "priority": "Medium",
          "status": "Todo",
          "position": 19,
          "due_date": null,
          "points": 2,
          "card_number": 20,
          "created_at": "2025-10-11T19:23:32.612472Z",
          "updated_at": "2025-10-11T19:25:31.337766Z"
        },
        {
          "id": "6c1e0ca7-22bb-49e5-86bc-8d1e2a55c9ee",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Archive a card",
          "description": "Be able to archive a card.\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 20,
          "due_date": null,
          "points": 2,
          "card_number": 21,
          "created_at": "2025-10-11T19:25:07.465576Z",
          "updated_at": "2025-10-11T21:19:20.961218Z"
        },
        {
          "id": "27717d15-3e41-4558-8e6b-3bbdc7fe3762",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Hitting e on an item in the task list should open $EDITOR with that tasks description",
          "description": "It would feel natural to me if the card description was opened when hitting the e button on an element in the cards list\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 21,
          "due_date": null,
          "points": 3,
          "card_number": 22,
          "created_at": "2025-10-11T19:50:58.400403Z",
          "updated_at": "2025-10-11T21:44:24.678181Z"
        },
        {
          "id": "76411161-8bcf-47a3-b917-cadc706c6079",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "When inputting in the dialogues. Text is cut when going out of bounds for the iput box",
          "description": null,
          "priority": "Medium",
          "status": "Todo",
          "position": 22,
          "due_date": null,
          "points": 3,
          "card_number": 23,
          "created_at": "2025-10-11T19:51:35.009507Z",
          "updated_at": "2025-10-11T21:44:48.544417Z"
        },
        {
          "id": "1c2f3096-823b-4eb7-9345-b80a4c5d8693",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Add github ci",
          "description": "In the stash somewhere there is a draft of CI\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 23,
          "due_date": null,
          "points": 4,
          "card_number": 24,
          "created_at": "2025-10-11T20:30:09.214394Z",
          "updated_at": "2025-10-11T21:45:19.144896Z"
        },
        {
          "id": "e3482cf7-c53a-4ce8-8c33-11e2cca3d87a",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Add completed when time to task",
          "description": "Add the date and time for when a task was marked as completed\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 24,
          "due_date": null,
          "points": 1,
          "card_number": 25,
          "created_at": "2025-10-11T20:53:06.269232Z",
          "updated_at": "2025-10-11T21:45:30.599476Z"
        },
        {
          "id": "5e247e41-efdf-43cc-aa0f-daf25830fd1c",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "When titles are too long. they don't fit the tasks list",
          "description": "So for now we just cut them with ... at the in before they hit the wall\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 25,
          "due_date": null,
          "points": 2,
          "card_number": 26,
          "created_at": "2025-10-11T20:54:41.898524Z",
          "updated_at": "2025-10-11T21:46:49.938657Z"
        },
        {
          "id": "4cdf603d-2ba8-4bc0-9c19-a2a4531ccff6",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Refactor, hunt for abstractions",
          "description": null,
          "priority": "Medium",
          "status": "Todo",
          "position": 26,
          "due_date": null,
          "points": 4,
          "card_number": 27,
          "created_at": "2025-10-11T21:42:14.741535Z",
          "updated_at": "2025-10-11T21:46:56.750936Z"
        },
        {
          "id": "ed48cbd0-7488-4b61-afe5-71851ed565c0",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "When setting the priority, the card details are closed and the lists are shown",
          "description": "This is apparently wrong\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 27,
          "due_date": null,
          "points": 4,
          "card_number": 28,
          "created_at": "2025-10-11T21:43:08.519830Z",
          "updated_at": "2025-10-11T21:43:21.894906Z"
        },
        {
          "id": "00a80b5e-f7c8-47e7-ba51-312a16a1618e",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Search in cards list",
          "description": "Mvp, search by title use `/` to search\n\nLater for boards list also\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 28,
          "due_date": null,
          "points": 4,
          "card_number": 29,
          "created_at": "2025-10-11T21:45:54.321945Z",
          "updated_at": "2025-10-11T21:47:04.856744Z"
        },
        {
          "id": "72ffc5f8-df27-4dd5-bc13-36e5c105f367",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Vim Motions",
          "description": null,
          "priority": "Medium",
          "status": "Todo",
          "position": 29,
          "due_date": null,
          "points": 2,
          "card_number": 30,
          "created_at": "2025-10-11T21:56:16.454189Z",
          "updated_at": "2025-10-11T22:25:21.168733Z"
        }
      ]
    }
  ]
}