{
  "boards": [
    {
      "board": {
        "id": "e119c091-e1fa-4596-9bc7-038ceab6adec",
        "name": "Kanban",
        "description": "Management of the **Kanban** project\n",
        "branch_prefix": "KAN",
        "next_card_number": 44,
        "task_sort_field": "Points",
        "task_sort_order": "Descending",
        "sprint_duration_days": 7,
        "sprint_prefix": "MVP",
        "sprint_names": [
          "an-eventful-october"
        ],
        "sprint_name_used_count": 1,
        "next_sprint_number": 6,
        "active_sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
        "created_at": "2025-10-10T08:47:44.779097Z",
        "updated_at": "2025-10-12T16:45:41.135177Z"
      },
      "columns": [
        {
          "id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "board_id": "e119c091-e1fa-4596-9bc7-038ceab6adec",
          "name": "Todo",
          "position": 0,
          "wip_limit": null,
          "created_at": "2025-10-10T08:47:57.834219Z",
          "updated_at": "2025-10-10T08:47:57.834219Z"
        }
      ],
      "cards": [
        {
          "id": "143615fe-fbcd-4d80-a88d-8173ec4b9573",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Unify import and export",
          "description": "The application is exporting boards using two different formats.\n\n```JSON\n{ board: { ... } }\n```\n\nand\n\n```JSON\n{ boards: [{ ... }] }\n```\n\nLet us make import and export only expect the latter.\n",
          "priority": "Medium",
          "status": "Done",
          "position": 0,
          "due_date": null,
          "points": 1,
          "card_number": 4,
          "sprint_id": null,
          "created_at": "2025-10-10T08:47:57.834239Z",
          "updated_at": "2025-10-11T20:30:23.290462Z",
          "completed_at": null
        },
        {
          "id": "959a092f-61de-41de-ac4a-729d6e1fcadf",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Rename tasks of exports to cards",
          "description": "To better align with the kanban domain let us change the export field `tasks` into `cards`\n",
          "priority": "Medium",
          "status": "Done",
          "position": 1,
          "due_date": null,
          "points": 1,
          "card_number": 5,
          "sprint_id": null,
          "created_at": "2025-10-10T09:08:28.861766Z",
          "updated_at": "2025-10-11T20:30:20.829017Z",
          "completed_at": null
        },
        {
          "id": "292e3f49-089b-40fb-8ea7-c693603904b2",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Add git branches to card meta data",
          "description": "We want to be able to create git branches and tie them to specific tasks so that we can trace the history.\n\nBe able to specify a prefix for use in the project\n\n- Set prefix in Board settings\n- Assign prefix + autoincremented number to card\n- From a card. Copy branch name\n- From a card. Copy `git checkout -b prefix+id`\n\nShould the id be autoincrement or uuid?\n\nReadability says it should be autoincremented. So we go with that for now.\n\n- If no prefix fallback to a default.\n- Customize default. Requires application configuration file feature?\n\n╭────────────────────────────────────────────────────────────────╮\n│ Git Branch Integration Implementation Plan                     │\n│                                                                │\n│ Core Design Decisions                                          │\n│                                                                │\n│ - Branch ID: Auto-incremented u32 per board (decided:          │\n│ readability over UUIDs)                                        │\n│ - Prefix Hierarchy: Board prefix → App config default → \"task\" │\n│  fallback                                                      │\n│ - ID Assignment: Lazy (on first request) to avoid assigning    │\n│ IDs to cards that never need branches                          │\n│ - Branch Format: {prefix}-{id} (e.g., feature-42, task-17)     │\n│                                                                │\n│ ---                                                            │\n│ 1. Domain Layer (kanban-domain)                                │\n│                                                                │\n│ Board model (board.rs):                                        │\n│ - Add branch_prefix: Option<String> field                      │\n│ - Add next_card_id: u32 field (default: 1)                   │\n│ - Add update_branch_prefix(&mut self, prefix: Option<String>)  │\n│ method                                                         │\n│ - Add allocate_card_id(&mut self) -> u32 method              │\n│                                                                │\n│ Card model (card.rs):                                          │\n│ - Add card_id: Option<u32> field                             │\n│ - Add ensure_card_id(&mut self, board: &mut Board) method    │\n│ - Add branch_name(&self, board: &Board, default_prefix: &str)  │\n│ -> Option<String> method                                       │\n│ - Add git_checkout_command(&self, board: &Board,               │\n│ default_prefix: &str) -> Option<String> method                 │\n│ - Add prefix validation (no spaces, git-safe characters)       │\n│                                                                │\n│ ---                                                            │\n│ 2. Application Configuration (kanban-core)                     │\n│                                                                │\n│ Create new config.rs module:                                   │\n│ - Define AppConfig struct with default_branch_prefix:          │\n│ Option<String>                                                 │\n│ - Use config crate or simple TOML parsing                      │\n│ - Config file location: ~/.config/kanban/config.toml           │\n│ - Load config on app startup in kanban-cli                     │\n│ - Thread through to TUI via App struct                         │\n│                                                                │\n│ ---                                                            │\n│ 3. Clipboard Integration (kanban-tui)                          │\n│                                                                │\n│ Add dependencies to kanban-tui/Cargo.toml:                     │\n│ - arboard = \"3.4\" (cross-platform clipboard)                   │\n│                                                                │\n│ Create new clipboard.rs module:                                │\n│ - copy_to_clipboard(text: &str) -> io::Result<()>              │\n│ - Handle errors gracefully (e.g., headless environments)       │\n│                                                                │\n│ ---                                                            │\n│ 4. TUI Layer (kanban-tui)                                      │\n│                                                                │\n│ App struct (app.rs):                                           │\n│ - Add app_config: AppConfig field                              │\n│ - Add clipboard operations to card detail mode                 │\n│                                                                │\n│ Board settings (new mode AppMode::BoardSettings):              │\n│ - Add focus state for navigating board settings                │\n│ - Edit branch prefix with external editor or inline input      │\n│ - Show current prefix, effective prefix (with fallback chain)  │\n│                                                                │\n│ Card detail view (ui.rs):                                      │\n│ - Show branch ID (if assigned)                                 │\n│ - Show computed branch name                                    │\n│ - Show git checkout command                                    │\n│                                                                │\n│ Key bindings (in CardDetail mode):                             │\n│ - b - Assign branch ID (if not already assigned)               │\n│ - y - Copy branch name to clipboard                            │\n│ - Y - Copy git checkout -b {branch} to clipboard               │\n│ - Add to help text                                             │\n│                                                                │\n│ New AppMode variants:                                          │\n│ - BoardSettings - for editing board-level settings             │\n│ - SetBranchPrefix - dialog for setting prefix                  │\n│                                                                │\n│ ---                                                            │\n│ 5. Persistence                                                 │\n│                                                                │\n│ Update serialization/deserialization:                          │\n│ - Board export/import already uses serde                       │\n│ - New fields automatically included                            │\n│ - Migration: existing boards get branch_prefix: None,          │\n│ next_card_id: 1                                              │\n│ - Existing cards get card_id: None                           │\n│                                                                │\n│ ---                                                            │\n│ 6. Testing Strategy                                            │\n│                                                                │\n│ Unit tests:                                                    │\n│ - Branch ID allocation (sequential, no gaps)                   │\n│ - Branch name generation with different prefix scenarios       │\n│ - Prefix validation (reject invalid git characters)            │\n│ - Clipboard operations (mock if needed)                        │\n│                                                                │\n│ Integration tests:                                             │\n│ - Round-trip serialization with new fields                     │\n│ - Multiple cards getting sequential IDs                        │\n│                                                                │\n│ ---                                                            │\n│ 7. Implementation Order                                        │\n│                                                                │\n│ 1. Add AppConfig in kanban-core                                │\n│ 2. Update Board domain model with prefix + next_card_id      │\n│ 3. Update Card domain model with card_id + methods           │\n│ 4. Add clipboard module to kanban-tui                          │\n│ 5. Update App struct to hold config                            │\n│ 6. Add board settings mode in TUI                              │\n│ 7. Add card detail branch operations                           │\n│ 8. Update help text and key bindings                           │\n│ 9. Add tests                                                   │\n│ 10. Update CLAUDE.md with new features                         │\n│                                                                │\n│ ---                                                            │\n│ 8. Edge Cases & Validation                                     │\n│                                                                │\n│ - Validate prefix: alphanumeric + hyphens only, no             │\n│ leading/trailing hyphens                                       │\n│ - Max branch name length: git supports ~255 chars, warn if     │\n│ prefix + ID exceeds reasonable length                          │\n│ - Clipboard unavailable: show friendly error, fallback to      │\n│ displaying text                                                │\n│ - Board without prefix: use app config default or \"task\"       │\n│ - Cards created before feature: assign IDs on demand           │\n│                                                                │\n│ ---                                                            │\n│ Example Usage Flow                                             │\n│                                                                │\n│ 1. User opens board settings (s in projects view)              │\n│ 2. Sets prefix to \"feat\"                                       │\n│ 3. Navigates to card, presses b to assign branch ID → card     │\n│ gets card_id=1                                               │\n│ 4. Board's next_card_id increments to 2                      │\n│ 5. User presses y → copies \"feat-1\" to clipboard               │\n│ 6. User presses Y → copies \"git checkout -b feat-1\" to         │\n│ clipboard                                                      │\n│ 7. Next card gets card_id=2, branch name \"feat-2\"            │\n│                                                                │\n│ ---                                                            │\n│ Dependencies to add:                                           │\n│ - arboard = \"3.4\" (clipboard)                                  │\n│ - config = \"0.14\" (optional, for TOML config parsing)          │\n│ - OR use simple std::fs::read_to_string + toml = \"0.8\" for     │\n│ lightweight config     \n",
          "priority": "Medium",
          "status": "Done",
          "position": 2,
          "due_date": null,
          "points": 5,
          "card_number": 1,
          "sprint_id": null,
          "created_at": "2025-10-10T21:58:56.145240Z",
          "updated_at": "2025-10-12T14:44:13.680351Z",
          "completed_at": null
        },
        {
          "id": "f1a80abd-338c-4593-92d6-20c2db7dc093",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Links to cards",
          "description": "Be able to have references to other cards.\n\n[like this](DEV-0001) Should be able to follow that link and open the card in Task Description interface.\n\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 3,
          "due_date": null,
          "points": 4,
          "card_number": 2,
          "sprint_id": null,
          "created_at": "2025-10-10T22:03:42.988557Z",
          "updated_at": "2025-10-12T15:09:11.118477Z",
          "completed_at": null
        },
        {
          "id": "e96684a5-4645-443e-8e2c-6bb646e248c6",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Card dependencies",
          "description": "Introduce two features\n\n# Block\n\n- Add blocked by card\n- Add create blocker. Creating the new card that would be the blocker.\n\n# Grouping of cards under one card\n\nI would like to keep things flat but I would like card meta data where I can group cards by a top level card.\n\nThe interface would present the grouping as nested to begin with and we see how it behaves?\n\nExample\n\n```\nImplement Card Grouping ...\n```\n\nWhich would when hit enter or space on expand into\n\n```\nImplement Card Grouping\n  Create ui\n  Add metadata\n```\n\n# Duplicate cards\n\nWhen two cards propose changes that are two sides of the same coin. Be able to add them as siblings. \n\nBut when two cards propose changes that are the same side of the same coin, we want to merge them together. Creating a new card by editing the description and title in a git conflict type way\n\nThe merging will ofcourse be handled by opening EDITOR and injecting the content into their respective section.\n\nExample\n---\n\nTitle\n\n```\n<<<<<<< KAN-0001\nCard Background\n=======\nCard Background Color\n>>>>>>> KAN-0002\n```\n\nDescription\n\n```\nWe want to introduce a new feature that\n<<<<<<< KAN-0001\nMakes card background purple\n=======\nMakes card background green\n>>>>>>> KAN-0002\n```\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 4,
          "due_date": null,
          "points": 4,
          "card_number": 6,
          "sprint_id": null,
          "created_at": "2025-10-10T22:05:04.607714Z",
          "updated_at": "2025-10-10T22:44:01.235679Z",
          "completed_at": null
        },
        {
          "id": "90f8121a-045f-47fd-b8fe-bb0e5b7662b1",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Add column definitions",
          "description": "At the project level. Be able to define columns\n\nMinimum and default.\n\n- TODO\n- Complete\n\nBe able to change the name of columns\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 5,
          "due_date": null,
          "points": 2,
          "card_number": 7,
          "sprint_id": null,
          "created_at": "2025-10-10T22:11:25.809290Z",
          "updated_at": "2025-10-11T20:40:58.659416Z",
          "completed_at": null
        },
        {
          "id": "86c1b649-03bc-4da8-87c3-e20a2c56a640",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Test the application with another editor",
          "description": "Need to try the application to see how it behaves with different editors\n\n- VSCode\n- vim\n- vi\n- emacs\n\nWindows\n\n- notepad\n- notepad++\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 6,
          "due_date": null,
          "points": 1,
          "card_number": 8,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-10T22:13:04.048521Z",
          "updated_at": "2025-10-10T22:14:15.622866Z",
          "completed_at": null
        },
        {
          "id": "eceed2ce-de5e-4166-95e7-7fb9c7e65b20",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Change priority",
          "description": "- Be able to change the priority of a task\n\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 7,
          "due_date": null,
          "points": 1,
          "card_number": 9,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-10T22:14:31.293267Z",
          "updated_at": "2025-10-11T20:41:09.462182Z",
          "completed_at": null
        },
        {
          "id": "7cd165b0-6671-46d6-b837-4e73ada26333",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Add or update priorities",
          "description": "On the board level. \n\nBe able to configure priorities and change their names. \n\nWe should start with only medium?\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 8,
          "due_date": null,
          "points": 1,
          "card_number": 10,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-10T22:15:09.199792Z",
          "updated_at": "2025-10-10T22:16:05.956954Z",
          "completed_at": null
        },
        {
          "id": "454144d2-27ac-4abf-8632-407908fa8f80",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Be able to scroll in the card description",
          "description": "Should be pretty self explantory. For cards with a loger description.\n\nWe want to be able to scroll so see more.\n\nPriority low as we can open `$EDITOR`\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 9,
          "due_date": null,
          "points": 1,
          "card_number": 11,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-10T22:53:19.579898Z",
          "updated_at": "2025-10-12T16:47:27.034553Z",
          "completed_at": null
        },
        {
          "id": "d48f9085-57ff-42c5-9f42-3cbb3cafde93",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Publish on nixpkgs",
          "description": "# Steps to Add Your Project to Nixpkgs\n\n## 1. Add Yourself as a Maintainer\n\nFirst, you'll need to add yourself to the maintainer list in maintainers/maintainer-list.nix with a separate commit titled \"maintainers: add <your-handle>\".\n\n## 2. Create the Package Expression\n\nSince your Kanban is a Rust project, you'll use buildRustPackage from rustPlatform nixpkgs/doc/languages-frameworks/rust.section.md at master · NixOS/nixpkgs\n\n[default.nix](./default.nix) \n\n## 3. Determine Package Location\n\nDecide which pkgs/ subfolder your expression should live in, then add your expression under a directory like pkgs/applications/misc/kanban/default.nix or similar\n\n## 4. Add to Package Index\n\nAdd an entry in pkgs/top-level/all-packages.nix so nixpkgs can find your package \n\n## 5. Fork and Test\n\nFork the nixpkgs repository, make your changes in a local branch, then build from the root of nixpkgs with nix-build -A kanban Nixpkgs/Contributing - NixOS Wiki\n\n## 6. Handle the Hash Values\n\nFor the cargoHash, you can initially use an empty string or fake hash, and Nix will tell you the correct hash when you try to build nixpkgs/doc/languages-frameworks/rust.section.md at master · NixOS/nixpkgs\n\n## 7. Submit a Pull Request\n\nOnce your package builds successfully, format your code with a Nix formatter like alejandra, then open a PR on GitHub with the title format \"kanban: init at <version>\" \n\n## 8. Wait for Review\n\nBe patient - it's normal for PRs to sit for weeks. If you need help, you can reach out on NixOS Discourse or the Matrix channels\n\n## Important Considerations\n\nRead the commit conventions specific to pkgs and include relevant information in your commit messages so others can understand why changes were made \n\nThe maintainers field is for you as the Nix expression maintainer, not the project maintainer. By submitting this package, you're taking responsibility for ongoing maintenance like version bumps \n\n\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 10,
          "due_date": null,
          "points": 5,
          "card_number": 12,
          "sprint_id": null,
          "created_at": "2025-10-10T22:56:04.200355Z",
          "updated_at": "2025-10-11T20:41:24.403599Z",
          "completed_at": null
        },
        {
          "id": "6a0cbe1e-a05e-4aca-bd53-f0057215d671",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Add order tasks lists by",
          "description": "Order tasks by\n\n- Points\n- Priority\n- Date created\n- Date due\n- Date updated\n- Status\n\nMVP\n---\n\nI think in the tasks panel. hit o (for order or organize) and then are presented with a dialogue where can choose one of the above options.\n\nThe dialogue should use the same selection mechanism as the projects and tasks lists do.\n\nAfter one of the options have been selected. The task list should be ordered according to the chosen option.\n\nFor now we leave out Date due from selection as we have not added this feature yet.\n\nOrder can be descending or ascending. a for ascending and d for descending after selecting an item. Taking suggestions on UX here..\n\n---\n\nFor the future. Keep in mind that I would also like to order the projects panel in the same way as the tasks panel but along a shorter list of options\n\n- Name\n- Date created\n- Date updated\n",
          "priority": "Medium",
          "status": "Done",
          "position": 11,
          "due_date": null,
          "points": 2,
          "card_number": 13,
          "sprint_id": null,
          "created_at": "2025-10-10T23:01:18.553586Z",
          "updated_at": "2025-10-11T22:26:20.802010Z",
          "completed_at": null
        },
        {
          "id": "9e8f918f-3fde-4847-aca8-0ab7646256a8",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Record demo",
          "description": "Using VHS record a demo so that we can post a gif of the tui to our github.\n\n```\n Complete Demo Script: Building a Web API Project\n\n  Scene 1: Launch & Create Board (0-15s)\n\n  $ cargo run\n  [TUI loads]\n  Press 'n'\n  Type: \"Web API Project\"\n  Press Enter\n  Narration: \"Creating a new project for our web API development\"\n\n  Scene 2: Add Cards with Different Priorities (15-50s)\n\n  Press '2' (switch to Tasks panel)\n  Press 'n'\n  Type: \"Setup development environment\"\n  Press Enter\n\n  Press 'n'\n  Type: \"Design database schema\"\n  Press Enter\n\n  Press 'n'\n  Type: \"Implement authentication API\"\n  Press Enter\n\n  Press 'n'\n  Type: \"Write integration tests\"\n  Press Enter\n  Narration: \"Adding tasks to our backlog\"\n\n  Scene 3: Edit Card Details - Full Metadata (50-90s)\n\n  Press 'k' (move up to first card)\n  Press Enter (open card detail)\n\n  [Show Title panel highlighted]\n  Press 'e'\n  [External editor opens]\n  Type: \"Setup development environment\\nInstall Rust, PostgreSQL, Docker\"\n  Save & exit\n\n  Press '2' (switch to Metadata panel)\n  Press 'e'\n  Type: \"3\" (for 3 story points - Yellow badge)\n  Press Enter\n\n  Press 's' (change status)\n  Type: \"InProgress\"\n  Press Enter\n\n  Press 'p' (change priority)\n  Type: \"High\"\n  Press Enter\n\n  Press '3' (switch to Description panel)\n  Press 'e'\n  [External editor opens]\n  Type: \"Dependencies:\\n- Rust 1.70+\\n- PostgreSQL 15\\n- Docker & docker-compose\\n\\nSetup steps:\\n1. Install Rust toolchain\\n2.\n  Configure database\\n3. Run initial migrations\"\n  Save & exit\n\n  Press Escape (back to main view)\n  Narration: \"Setting story points, priority, status, and detailed description\"\n\n  Scene 4: Mark Card Complete & Copy Branch Name (90-110s)\n\n  Press 'c' (toggle completion)\n  [Card shows checkmark ✓]\n\n  Press 'j' (move down)\n  Press Enter (open second card)\n  Press 'b' (copy branch name to clipboard)\n  [Shows: \"Copied branch name to clipboard\"]\n\n  Press 'y' (copy card ID)\n  [Shows: \"Copied card ID to clipboard\"]\n\n  Press Escape\n  Narration: \"Marking tasks complete and copying branch names for git workflow\"\n\n  Scene 5: Board Settings with Branch Prefix (110-130s)\n\n  Press '1' (switch to Projects)\n  Press 's' (open board settings)\n  Press 'p' (set branch prefix)\n  Type: \"feat\"\n  Press Enter\n  [Shows: \"Branch prefix set to: feat\"]\n  Press Escape\n  Narration: \"Configuring git branch prefixes for consistent naming\"\n\n  Scene 6: Edit Board Details (130-150s)\n\n  Press 'e' (edit board)\n  [BoardDetail view opens]\n  Press '2' (Description panel)\n  Press 'e'\n  [External editor]\n  Type: \"RESTful API for user management\\n\\nTech Stack:\\n- Rust + Actix-web\\n- PostgreSQL\\n- JWT authentication\"\n  Save & exit\n  Press Escape\n  Narration: \"Adding project documentation\"\n\n  Scene 7: Export Board (150-165s)\n\n  Press 'x' (export current board)\n  Type: \"web-api-project.json\"\n  Press Enter\n  [Shows: \"Board exported successfully\"]\n  Narration: \"Exporting project data to JSON\"\n\n  Scene 8: Complete More Tasks (165-185s)\n\n  Press '2' (Tasks panel)\n  Press 'j' (move down to third card)\n  Press Enter\n  Press '2' (Metadata)\n  Press 'e'\n  Type: \"5\" (5 story points - Red badge for critical)\n  Press Enter\n  Press 's'\n  Type: \"Blocked\"\n  Press Enter\n  Press Escape\n\n  Press 'j' (fourth card)\n  Press 'c' (mark complete)\n  Narration: \"Managing task progress - marking some blocked, others complete\"\n\n  Scene 9: Import Demo (185-205s)\n\n  Press 'i' (import)\n  [File list shows: web-api-project.json, example.json]\n  Press 'j'\n  Press Enter\n  [Shows: \"1 board(s) imported successfully\"]\n  Narration: \"Importing previously exported projects\"\n\n  Scene 10: Final Overview & Quit (205-215s)\n\n  Press '1' (Projects)\n  [Show list of boards]\n  Press '2' (Tasks)\n  [Show cards with different colors for story points, completion marks]\n\n  Press 'q'\n  [Auto-save message]\n  [Exit to shell]\n  Narration: \"All changes are auto-saved on exit\"\n\n  ---\n  Key Features Showcased:\n\n  ✅ Board creation (n)✅ Card creation (n)✅ External editor integration (title & description with e)✅ Story points with color coding\n  (1-5: e in Metadata)✅ Status management (s: Todo/InProgress/Blocked/Done)✅ Priority levels (p: Low/Medium/High/Critical)✅ Task\n  completion (c)✅ Branch name copying (b)✅ Card ID copying (y)✅ Board settings (s)✅ Branch prefix configuration (p)✅ Board details\n  editing (e from Projects)✅ Export single board (x)✅ Import boards (i)✅ Auto-save on quit✅ Panel navigation (1/2/3)✅ Vim-style\n  navigation (j/k)\n\n  Total runtime: ~3:35 minutes\n  ```\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 12,
          "due_date": null,
          "points": 5,
          "card_number": 14,
          "sprint_id": null,
          "created_at": "2025-10-11T18:27:29.674825Z",
          "updated_at": "2025-10-12T15:09:11.118477Z",
          "completed_at": null
        },
        {
          "id": "1e257c13-f9ee-40e4-86b5-704a9649ea4e",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Progressive saving / Detect changes to current json",
          "description": "If for whatever reason two instances of Kanban are editing the same JSON.\n\nImplement a procedure to listen for changes \n\nProgressive saving and not all at the end?\n\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 13,
          "due_date": null,
          "points": 3,
          "card_number": 15,
          "sprint_id": null,
          "created_at": "2025-10-11T18:29:10.434614Z",
          "updated_at": "2025-10-11T22:26:03.008952Z",
          "completed_at": null
        },
        {
          "id": "9273b022-f7f8-4975-b9c5-7a57c55eba30",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "add -v flag",
          "description": "It would be nice to be able to view the version of the program\n\nAlso add the version to the `--help` output\n",
          "priority": "Medium",
          "status": "Done",
          "position": 14,
          "due_date": null,
          "points": 1,
          "card_number": 3,
          "sprint_id": null,
          "created_at": "2025-10-11T18:36:43.972262Z",
          "updated_at": "2025-10-11T19:03:44.948745Z",
          "completed_at": null
        },
        {
          "id": "a189ef1a-903c-4c43-924e-2194562237f6",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "drop the Header in the UI",
          "description": "The \"Kanban Board\" header of the interface can go away.\n",
          "priority": "Medium",
          "status": "Done",
          "position": 15,
          "due_date": null,
          "points": 1,
          "card_number": 16,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-11T18:38:07.855746Z",
          "updated_at": "2025-10-12T16:45:07.630022Z",
          "completed_at": "2025-10-12T16:45:07.630022Z"
        },
        {
          "id": "ed0ead2b-6da9-4889-83b7-e4c60ab11032",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Give cards ID from the beginning",
          "description": "No need to explicitly generate IDS for cards.\n\nWe just give them IDs immediately\n",
          "priority": "Medium",
          "status": "Done",
          "position": 16,
          "due_date": null,
          "points": 1,
          "card_number": 17,
          "sprint_id": null,
          "created_at": "2025-10-11T18:39:14.248330Z",
          "updated_at": "2025-10-11T19:43:05.716699Z",
          "completed_at": null
        },
        {
          "id": "1c0b1752-53f1-4240-be75-0706662156df",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Add sprints",
          "description": "Be able to group cards by sprints. \nSet sprint duration and automatic starting of new sprints\n\nMVP\n\nBoard level settings defines sprint duration.\n\nIf duration is set, sprint init is possible.\n\nAdd Sprint, set start date, assign cards to it.\n\nWhen end date is passed. Start up a new sprint and uncompleted cards over.\n\nSprint will have sprint names the same way tasks do. `prefix-<auto-increment>/sprint-name`\n\nPrefix will be set by sprint settings.\n\nSprint names are derived from user supplied list or explicitly set per sprint (sprint details)\n\nIf a list of sprint names are supplied new sprint will consume each element in order\n\n---\n\nThere should be a UI panel for sprints. On selected Board hit 's' to see sprint details\n\nDiscussion\n---\n\nLooking at this feature comprehensively, here are the potential gaps and clarifications \n  needed:\n\n  🔴 Critical Issues\n\n  1. Keybinding conflict: 's' is already used for board settings. Need a different key for\n  sprint panel (maybe 't' for sPrinTs, or nested under settings?)\n  2. Sprint rollover trigger: When end date passes, what triggers the new sprint creation?\n    - On app startup check?\n    - On any board action?\n    - Background timer (would need tokio task)?\n    - Manual user action only?\n  3. Active sprint ambiguity:\n    - Can only one sprint be \"active\" at a time?\n    - Can you create future sprints in advance?\n    - What's the status model? (Planning, Active, Completed, Cancelled?)\n\n  🟡 Domain Model Gaps\n\n  4. Sprint entity needs:\n  struct Sprint {\n      id: Uuid,\n      board_id: Uuid,\n      sprint_number: u32,\n      name: String,  // format: prefix-<number>/sprint-name\n      start_date: DateTime<Utc>,\n      end_date: DateTime<Utc>,\n      status: SprintStatus,  // Active, Completed, Planned?\n      created_at: DateTime<Utc>,\n      updated_at: DateTime<Utc>,\n  }\n  5. Board additions:\n    - sprint_duration_days: Option<u32>\n    - sprint_prefix: Option<String>\n    - sprint_names: Vec<String>  // consumed in order\n    - next_sprint_number: u32\n    - current_sprint_id: Option<Uuid>  // which sprint is active?\n  6. Card additions:\n    - sprint_id: Option<Uuid>  // which sprint is this card in?\n\n  🟡 Unclear Behaviors\n\n  7. Sprint name list:\n    - Once consumed, is name removed from list or just marked as used?\n    - What happens when list is empty? Fall back to just sprint number?\n    - Can user replenish the list?\n  8. Card assignment:\n    - How do users assign cards to sprints? (UI interaction)\n    - Can cards exist without a sprint (backlog)?\n    - What defines \"uncompleted\" for rollover? (status != Done?)\n  9. Sprint settings UI:\n    - Where do users configure duration, prefix, name list?\n    - Part of board settings menu?\n    - Separate sprint settings panel?\n  10. Sprint completion:\n    - Is there a manual \"complete sprint early\" action?\n    - Or only automatic when end date passes?\n\n  🟢 Architecture Questions\n\n  11. UI Navigation:\n    - Is sprint panel a new Focus mode (like Boards/Cards)?\n    - Or a separate view that replaces card list?\n    - How to switch between sprint view and card view?\n  12. Sprint panel content:\n    - List all sprints for board?\n    - Show only current/active sprint?\n    - Show sprint stats (cards total, completed, remaining)?\n    - Burndown visualization?\n  13. Card filtering:\n    - Should main card list optionally filter by sprint?\n    - Show sprint name/info on cards in list?\n    - Visual indication of which cards are in which sprint?\n  14. Time zone handling:\n    - All dates in UTC internally?\n    - Display in local time?\n    - Sprint rollover happens at midnight in which timezone?\n\n  📋 Implementation Order Concerns\n\n  15. Data migration:\n    - Existing boards need default values for new sprint fields\n    - Existing cards get sprint_id: None (backlog)\n  16. MVP boundaries:\n    - MVP: Basic CRUD for sprints, card assignment, viewing\n    - Future: Burndown, velocity, sprint reports, analytics\n    - Which features are MVP vs future?\n\n  ❓ Questions for You\n\n  Before I can plan implementation:\n\n  1. Keybinding: What key should open sprint panel? (s is taken)\n  2. Rollover: Manual or automatic? If automatic, when checked?\n  3. Sprint status: Can multiple sprints exist? What are the states?\n  4. Card backlog: Can cards exist without sprint assignment?\n  5. MVP scope: Sprint stats/burndown in MVP or future?\n  6. Sprint panel: Separate focus mode or replaces card list?\n\n  Should I proceed with assumptions and note them in the plan, or do you want to clarify these\n  first?\n\n> 1. We move board settings into the edit project ui. \n> 2. alert the user on app start up with a dialogue that start new sprint (y/n). \n> 3. multiple sprints should be allowed in parallel to allow for focused work on distinct parts of a project. yes we want to be able to plan sprints. picking tasks from the card list. The card list will be filtered to the active sprint. Planning, Active, Completed, Cancelled - yes. \n> 6. I wonder if we would need the bi directional relationship between sprint and cards? \n> 7. marked as used. for now. no list leaves the user to have to manually input a name. until a name is available the sprint name is `prefix+<auto-increment>` when a name is available it is like specified before. Yes the users supplies the list and it can be topped off whenever. \n> 8. When a sprint is initially created it is marked as in planning. then we in the sprint details interface can choose from a list of non completed tasks to include in the sprint. Yes cards can exist without a sprint as the plain list they are currently. uncompleted is only if the user makes the explicit choice not to start a new sprint after the rollover date. in such case manual creation of the subsequent sprint must occur. The user defines uncompleted. \n> 9 having a board selected. we press e to open edit project. in there we will have moved the current s, project settings. in the project settings panel we configure. duration, name list and prefix. We will replace the s with sprint details where the sprint itself can provide per sprint overrides for name list and prefix but not duration. Yes there is manual complete action. in the sprint details UI. \n> 11. The cards for the sprint can be toggled to replace the task list. for now we will use the key `t` to toggle between active sprint and the main card list. \n> 12. Tasks list will be toggled to show sprint tasks or not. Sprint details ui will handle all the rest. show list of sprints, select active sprint. stats and burndown we leave for the next iteration. \n> 12 For now, if sprint tasks are toggled just show sprint name next to the Tasks header, like Tasks - <sprint-name>. in unfiltered task list show the sprint name next to the task name, greyed out. \n> 14. All dates are in UTC internally. Display in local time. rollover in UTC. \n> 15. Yes.\n> 16. MVP: Basic CRUD for sprints, card assignment, viewing and all specified. think hard and keep planning with me\n\n---\n\nExcellent clarifications! Let me think through the complete user flows and identify remaining\n  questions:\n\n  🤔 Critical Flows to Clarify\n\n  Flow 1: Sprint Lifecycle Timing\n\n  User creates sprint:\n  - Status starts as Planning\n  - Start date: set at creation OR when activating (Planning → Active)?\n  - End date: calculated when? (start_date + duration)\n\n  My assumption: Start date set when activating, not at creation. Makes sense for planning\n  sprints in advance.\n\n  Flow 2: Active Sprint Semantics\n\n  You said \"multiple sprints allowed in parallel\" but also mentioned active_sprint_id\n  (singular). I think I understand now:\n  - Multiple sprints can have status Active (parallel work streams)\n  - But ONE sprint is \"selected active\" for filtering with t key\n  - active_sprint_id = currently selected sprint for filtering\n  - Need action to \"switch active sprint\" in sprint details UI\n\n  Confirm?\n\n  Flow 3: Sprint Rollover Details\n\n  On startup dialog: \"Sprint X ended. Start new sprint? (y/n)\"\n  - If YES: Create new sprint with status Active (not Planning), auto-rollover cards where\n  status != Done\n  - If NO: Those cards stay in ended sprint, user must manually move later\n\n  But: Multiple ended sprints? Show one dialog per sprint sequentially? Or one dialog listing\n  all?\n\n  Flow 4: Sprint Name Consumption\n\n  Sprint name list = [\"Cobra Kai\", \"Miyagi-Do\", \"Eagle Fang\"]\n  - Track usage with sprint_name_used_count: usize\n  - When creating sprint: consume next name from list\n  - If sprint_name_used_count >= sprint_names.len(): no name available, user must manually name\n  OR fallback to prefix-<number>\n\n  Question: Can user explicitly override auto-name even when names available?\n\n  Flow 5: Sprint Details UI Structure\n\n  Press s → SprintDetails mode:\n  ┌─ Sprint Details ───────────────────────┐\n  │ > sprint-1/Cobra Kai      [Active]     │\n  │   sprint-2/Miyagi-Do      [Planning]   │\n  │   sprint-3                [Completed]  │\n  └────────────────────────────────────────┘\n\n  Press Enter on selected sprint → SprintDetail mode:\n  ┌─ Sprint: sprint-1/Cobra Kai ───────────┐\n  │ Status: Active                         │\n  │ Dates: 2025-10-12 → 2025-10-26         │\n  │                                        │\n  │ Cards (3):                             │\n  │   ☐ Implement search                   │\n  │   ☐ Add vim motions                    │\n  │   ☑ Fix ordering bug                   │\n  │                                        │\n  │ Actions:                               │\n  │ e: edit name | c: complete | x: cancel │\n  │ a: add cards | r: remove cards         │\n  │ s: set as active | ESC: back           │\n  └────────────────────────────────────────┘\n\n  Questions:\n  - Add cards (a): show list of all unassigned cards, select with j/k/space?\n  - Remove cards (r): show cards in sprint, select to remove?\n  - Set as active (s): updates active_sprint_id, affects t toggle?\n\n  Flow 6: Board Settings Panel\n\n  Edit project (e) → navigate to panel 3 (settings):\n  ┌─ Project Settings [3] ─────────────────┐\n  │ Branch Prefix: task-                   │\n  │                                        │\n  │ Sprint Duration: 14 days               │\n  │ Sprint Prefix: sprint                  │\n  │                                        │\n  │ Sprint Names:                          │\n  │ > Cobra Kai                            │\n  │   Miyagi-Do                            │\n  │   Eagle Fang                           │\n  │                                        │\n  │ n: add name | d: delete name           │\n  │ e: edit field                          │\n  └────────────────────────────────────────┘\n\n  For MVP: Keep sprint names simple:\n  - Store as Vec<String>\n  - Edit via external JSON? OR\n  - Simple dialog: \"Add sprint name:\" (one at a time)\n  - Delete selected name with d\n\n  My suggestion: For MVP, manually edit JSON. Add TUI editor in next iteration.\n\n  Flow 7: Card List Filtering\n\n  Unfiltered (default):\n  Tasks\n    ☐ Fix ordering bug (sprint-1)\n    ☐ Add search (sprint-2)\n    ☐ Implement vim motions\n\n  Filtered to active sprint (t pressed, active = sprint-1):\n  Tasks - sprint-1/Cobra Kai\n    ☐ Fix ordering bug\n    ☐ Add another task\n\n  Question: Toggle state per board or global? Probably per board.\n\n  Flow 8: Manual Sprint Completion\n\n  In SprintDetail mode, press c:\n  ┌─ Complete Sprint: sprint-1 ────────────┐\n  │ Select cards to rollover (incomplete): │\n  │                                        │\n  │ ☑ Fix ordering bug                     │\n  │ ☑ Implement search                     │\n  │ ☐ Add vim motions (Done)               │\n  │                                        │\n  │ Space: toggle | ENTER: complete        │\n  └────────────────────────────────────────┘\n\n  Selected cards → stay in this sprint or move to new sprint?\n\n  My assumption:\n  - Cards NOT selected = considered complete (status updated to Done automatically?)\n  - Cards selected = stay in completed sprint, user manually moves later OR\n  - Cards selected = auto-move to active sprint?\n\n  Need clarification here.\n\n  📐 Proposed Domain Model\n\n  #[derive(Debug, Clone, Copy, PartialEq, Eq, Serialize, Deserialize)]\n  pub enum SprintStatus {\n      Planning,\n      Active,\n      Completed,\n      Cancelled,\n  }\n\n  pub struct Sprint {\n      pub id: Uuid,\n      pub board_id: Uuid,\n      pub sprint_number: u32,\n      pub name: Option<String>,\n      pub prefix_override: Option<String>,\n      pub status: SprintStatus,\n      pub start_date: Option<DateTime<Utc>>,\n      pub end_date: Option<DateTime<Utc>>,\n      pub created_at: DateTime<Utc>,\n      pub updated_at: DateTime<Utc>,\n  }\n\n  // Board additions\n  pub sprint_duration_days: Option<u32>,\n  pub sprint_prefix: Option<String>,\n  pub sprint_names: Vec<String>,\n  pub sprint_name_used_count: usize,\n  pub next_sprint_number: u32,\n  pub active_sprint_id: Option<Uuid>,\n\n  // Card addition\n  pub sprint_id: Option<Uuid>,\n\n  🏗️ Implementation Phases\n\n  Phase 1: Board Settings Migration (smaller scope)\n\n  1. Add Settings panel to BoardFocus (1/2/3 navigation)\n  2. Move branch prefix setting to settings panel\n  3. Add sprint fields to Board domain\n  4. UI for editing sprint duration, prefix\n  5. Sprint names: JSON-only for MVP\n\n  Phase 2: Sprint Domain & Basic CRUD\n\n  1. Add Sprint struct, SprintStatus enum\n  2. Add sprints to App state\n  3. Add sprint_id to Card\n  4. Create sprint action (from SprintDetails UI)\n  5. List sprints (SprintDetails mode, press s)\n  6. View sprint (SprintDetail mode, Enter on sprint)\n  7. Edit sprint name (dialog)\n  8. Delete/cancel sprint\n\n  Phase 3: Card Assignment\n\n  1. Add cards to sprint (UI with card selection)\n  2. Remove cards from sprint\n  3. View cards in sprint detail\n  4. Show sprint name next to cards in main list\n\n  Phase 4: Sprint Activation & Toggle\n\n  1. Activate sprint (Planning → Active, set start/end dates)\n  2. Set active sprint (for filtering)\n  3. Toggle card filtering with t\n  4. Update card list rendering (filtered vs all)\n  5. Update header (show sprint name when filtered)\n\n  Phase 5: Sprint Lifecycle & Rollover\n\n  1. Check ended sprints on startup\n  2. Dialog per ended sprint\n  3. Auto-create new sprint with rollover\n  4. Manual complete sprint action\n  5. Choose cards to rollover in completion UI\n\n  ❓ Questions Before Final Plan\n\n  1. Start date: Set at creation or activation? (I assume activation)\n  2. Active sprint: One \"active\" per board for filtering, but multiple can have Active status?\n  3. Multiple ended sprints: One dialog each, shown sequentially?\n  4. Name consumption: Auto-consume next name, but allow manual override?\n  5. Sprint completion: What happens to cards user selects as \"incomplete\"? Stay in sprint? Move\n   to active sprint? User moves manually later?\n  6. Sprint names list: JSON editing only for MVP, or simple add/delete UI?\n\n  Please clarify these and I'll present the final implementation plan!\n\n  ---\nSprint Management Implementation Plan\n\nOverview\n\nAdd sprint functionality to kanban with MVP features: sprint CRUD, card assignment,\nfiltering, lifecycle management, and automatic rollover.\n\nPhase 1: Domain Model & Board Settings\n\nGoal: Add sprint data structures and move settings to Edit Project UI\n\n1.1 Domain Model\n\n- Add Sprint struct to kanban-domain/src/sprint.rs:\npub struct Sprint {\n    pub id: Uuid,\n    pub board_id: Uuid,\n    pub sprint_number: u32,\n    pub name: Option<String>,\n    pub prefix_override: Option<String>,\n    pub status: SprintStatus,\n    pub start_date: Option<DateTime<Utc>>,\n    pub end_date: Option<DateTime<Utc>>,\n    pub created_at: DateTime<Utc>,\n    pub updated_at: DateTime<Utc>,\n}\n- Add SprintStatus enum: Planning, Active, Completed, Cancelled\n- Export from kanban-domain/src/lib.rs\n\n1.2 Update Board Model\n\nAdd to Board struct:\n- sprint_duration_days: Option<u32>\n- sprint_prefix: Option<String>\n- sprint_names: Vec<String>\n- sprint_name_used_count: usize\n- next_sprint_number: u32\n- active_sprint_id: Option<Uuid>\n\nAdd serde defaults for deserialization.\n\n1.3 Update Card Model\n\nAdd to Card: sprint_id: Option<Uuid>\n\n1.4 Restructure Board Settings UI\n\n- Change BoardFocus enum: Name, Description, Settings\n- Move from BoardSettings mode → third panel in BoardDetail mode\n- Press 3 to navigate to settings panel\n- Move branch prefix setting to this panel\n- Add sprint duration, sprint prefix fields (editable with e)\n- Sprint names: JSON-only for MVP\n\n1.5 Remove Old Board Settings\n\n- Remove AppMode::BoardSettings\n- Remove AppMode::SetBranchPrefix\n- Consolidate into BoardDetail with 3 panels\n\nPhase 2: Sprint CRUD\n\nGoal: Create, list, view, edit, delete sprints\n\n2.1 App State\n\nAdd to App:\n- sprints: Vec<Sprint>\n- sprint_selection: SelectionState\n- active_sprint_index: Option<usize>\n- show_sprint_cards_only: bool (toggle state per board)\n\n2.2 App Modes\n\nAdd:\n- AppMode::SprintList (press s in normal mode, board selected)\n- AppMode::SprintDetail (Enter on sprint in list)\n- AppMode::CreateSprint (press n in SprintList)\n- AppMode::EditSprintName (press e in SprintDetail)\n\n2.3 Sprint List UI (s key)\n\n- Render list of sprints for active board\n- Show: sprint_number/name [Status]\n- j/k navigation, Enter to open detail\n- n: create new sprint (Planning status)\n- ESC: back to normal\n\n2.4 Sprint Detail UI (Enter on sprint)\n\n- Show sprint name, status, dates, card count\n- Actions:\n  - e: edit name (dialog)\n  - a: activate (Planning → Active, set dates)\n  - c: complete sprint\n  - x: cancel sprint\n  - d: delete sprint (only if Planning)\n  - s: set as active sprint (for filtering)\n  - +: add cards\n  - -: remove cards\n  - ESC: back to sprint list\n\n2.5 Create Sprint\n\n- Status: Planning\n- Name: auto-consume from sprint_names[sprint_name_used_count] if available\n- If no names: fallback to {prefix}-{sprint_number}\n- Increment next_sprint_number and sprint_name_used_count\n\nPhase 3: Card Assignment\n\nGoal: Assign cards to sprints\n\n3.1 Add Cards to Sprint (+ in SprintDetail)\n\n- Show list of cards where sprint_id == None\n- j/k navigation, Space to multi-select\n- Enter: assign selected cards to current sprint\n- Update card sprint_id and updated_at\n\n3.2 Remove Cards from Sprint (- in SprintDetail)\n\n- Show cards in current sprint\n- j/k navigation, Space to multi-select\n- Enter: unassign (set sprint_id = None)\n\n3.3 Display Cards in Sprint Detail\n\n- In SprintDetail view, show list of cards\n- Format: ☐ Card title [points]\n\nPhase 4: Card Filtering & Display\n\nGoal: Toggle between all cards and active sprint cards\n\n4.1 Toggle Filtering (t key in Normal mode)\n\n- Toggle show_sprint_cards_only boolean\n- Only when active board and active_sprint_id is set\n- Persist toggle state per board (store in Board? or App state?)\n\n4.2 Update Card List Rendering\n\n- When filtered: get_sorted_board_cards() filters by card.sprint_id == active_sprint_id\n- When unfiltered: show all cards\n\n4.3 Update Header\n\n- Filtered: \"Tasks - {sprint_name}\"                    \n- Unfiltered: \"Tasks\"\n\n4.4 Show Sprint Name on Cards (unfiltered view)        \n\n- When sprint_id.is_some(), append sprint name in gray \n- Format: ☐ Card title (sprint-1/Cobra Kai)            \n\nPhase 5: Sprint Lifecycle & Rollover                   \n\nGoal: Activate, complete, automatic rollover           \n\n5.1 Activate Sprint (a in SprintDetail, status = Planning)\n\n- Change status: Planning → Active\n- Set start_date = Utc::now()\n- Calculate end_date = start_date + sprint_duration_days\n- Only ONE sprint can be Active at a time (check and prevent if another active exists)\n\n5.2 Startup Check for Ended Sprints\n\n- On app start, find sprints where status == Active && end_date < Utc::now()\n- If any found, show dialog:\n┌─ Sprints Ended ────────────────┐\n│ ☑ sprint-1/Cobra Kai           │\n│ ☑ sprint-2/Miyagi-Do           │\n│                                │\n│ Start new sprints? (y/n)       │\n└────────────────────────────────┘\n- j/k navigation, Space to toggle checkboxes\n- y/Enter: create new sprints for selected\n- n/ESC: no action, user handles manually later\n\n5.3 Automatic Rollover (if \"yes\" to dialog)\n\n- For each selected sprint:\n  - Mark as Completed\n  - Get cards where sprint_id == ended_sprint.id && status != Done\n  - Create new sprint (status = Active, auto-name)\n  - Move incomplete cards to new sprint\n  - Set new sprint dates\n\n5.4 Manual Complete Sprint (c in SprintDetail)\n\n- Show list of cards in sprint with status != Done\n- Checkboxes for each card (default: all selected)\n- Space: toggle, Enter: complete\n- Selected cards: move to next Active sprint (or create new if none)\n- Unselected cards: stay in sprint, user moves manually later\n- Mark sprint as Completed\n\nPhase 6: Polish & Integration\n\nGoal: Help text, validation, error handling\n\n6.1 Help Text Updates\n\n- Add help for all new modes\n- Update keybindings in footer\n\n6.2 Validation\n\n- Prevent activating sprint if duration not set\n- Prevent multiple Active sprints\n- Validate dates\n\n6.3 Auto-save\n\n- Sprints auto-save to JSON along with boards/cards\n\nImplementation Order\n\n1. Phase 1 (domain + settings UI migration)\n2. Phase 2 (sprint CRUD, basic UI)\n3. Phase 3 (card assignment)\n4. Phase 4 (filtering, display)\n5. Phase 5 (lifecycle, rollover)\n6. Phase 6 (polish)\n\nKey Decisions Confirmed\n\n- ✅ One Active sprint at a time (for filtering)\n- ✅ Start dates set on activation, not creation\n- ✅ Sprint name auto-consumed from list, manual override possible\n- ✅ Rollover dialog shows all ended sprints with checkboxes\n- ✅ Manual completion: selected cards move to next sprint\n- ✅ Sprint names list: JSON editing for MVP\n- ✅ Settings moved to Edit Project UI panel 3\n\n2025-10-12 14:58\n---\n\nWe are starting a new section of this on a new day\n\nWhat I feel is missing at this point is a nice way to assign tasks to a sprint.\n\nI want to be able in the task list to select multiple tasks and then assign them to a sprint\n",
          "priority": "Medium",
          "status": "Done",
          "position": 17,
          "due_date": null,
          "points": 4,
          "card_number": 18,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-11T18:42:39.943129Z",
          "updated_at": "2025-10-12T16:48:54.024375Z",
          "completed_at": "2025-10-12T16:48:54.024375Z"
        },
        {
          "id": "f4c31d5d-7f78-451c-b7db-f26e4931fae4",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Link to pull request",
          "description": "If a pull request is open for a card. Open a link to that pull\n\nshow if a card has a pull request open (or in draft in the task list)\n\nExamples\n\nPR opem\n```\nA task name - [PR] (green)\n```\n\nDraft\n```\nA task name - [PR] (greyed out)\n```\n---\n\nI am getting the feeling that this would depend on having configuration for collaborative version control per board\n\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 18,
          "due_date": null,
          "points": 3,
          "card_number": 19,
          "sprint_id": null,
          "created_at": "2025-10-11T18:45:47.488818Z",
          "updated_at": "2025-10-11T19:01:45.403042Z",
          "completed_at": null
        },
        {
          "id": "8ecc1849-bde7-4f97-99f7-44b7d9158bbf",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Remove a card",
          "description": "Be able to drop a card \n",
          "priority": "Medium",
          "status": "Todo",
          "position": 19,
          "due_date": null,
          "points": 2,
          "card_number": 20,
          "sprint_id": null,
          "created_at": "2025-10-11T19:23:32.612472Z",
          "updated_at": "2025-10-11T19:25:31.337766Z",
          "completed_at": null
        },
        {
          "id": "6c1e0ca7-22bb-49e5-86bc-8d1e2a55c9ee",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Archive a card",
          "description": "Be able to archive a card.\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 20,
          "due_date": null,
          "points": 2,
          "card_number": 21,
          "sprint_id": null,
          "created_at": "2025-10-11T19:25:07.465576Z",
          "updated_at": "2025-10-11T21:19:20.961218Z",
          "completed_at": null
        },
        {
          "id": "27717d15-3e41-4558-8e6b-3bbdc7fe3762",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Hitting e on an item in the task list should open $EDITOR with that tasks description",
          "description": "It would feel natural to me if the card description was opened when hitting the e button on an element in the cards list\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 21,
          "due_date": null,
          "points": 3,
          "card_number": 22,
          "sprint_id": null,
          "created_at": "2025-10-11T19:50:58.400403Z",
          "updated_at": "2025-10-11T21:44:24.678181Z",
          "completed_at": null
        },
        {
          "id": "76411161-8bcf-47a3-b917-cadc706c6079",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "When inputting in the dialogues. Text is cut when going out of bounds for the iput box",
          "description": null,
          "priority": "Medium",
          "status": "Todo",
          "position": 22,
          "due_date": null,
          "points": 3,
          "card_number": 23,
          "sprint_id": null,
          "created_at": "2025-10-11T19:51:35.009507Z",
          "updated_at": "2025-10-11T21:44:48.544417Z",
          "completed_at": null
        },
        {
          "id": "1c2f3096-823b-4eb7-9345-b80a4c5d8693",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Add github ci",
          "description": "In the stash somewhere there is a draft of CI\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 23,
          "due_date": null,
          "points": 4,
          "card_number": 24,
          "sprint_id": null,
          "created_at": "2025-10-11T20:30:09.214394Z",
          "updated_at": "2025-10-11T21:45:19.144896Z",
          "completed_at": null
        },
        {
          "id": "e3482cf7-c53a-4ce8-8c33-11e2cca3d87a",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Add completed when time to task",
          "description": "Add the date and time for when a task was marked as completed\n",
          "priority": "Medium",
          "status": "Done",
          "position": 24,
          "due_date": null,
          "points": 1,
          "card_number": 25,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-11T20:53:06.269232Z",
          "updated_at": "2025-10-12T16:40:38.483152Z",
          "completed_at": "2025-10-12T16:40:38.483152Z"
        },
        {
          "id": "5e247e41-efdf-43cc-aa0f-daf25830fd1c",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "When titles are too long. they don't fit the tasks list",
          "description": "So for now we just cut them with ... at the in before they hit the wall\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 25,
          "due_date": null,
          "points": 2,
          "card_number": 26,
          "sprint_id": null,
          "created_at": "2025-10-11T20:54:41.898524Z",
          "updated_at": "2025-10-11T21:46:49.938657Z",
          "completed_at": null
        },
        {
          "id": "4cdf603d-2ba8-4bc0-9c19-a2a4531ccff6",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Refactor, hunt for abstractions",
          "description": "Identify patterns of repetition in the code\n\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 26,
          "due_date": null,
          "points": 4,
          "card_number": 27,
          "sprint_id": null,
          "created_at": "2025-10-11T21:42:14.741535Z",
          "updated_at": "2025-10-12T14:55:06.382978Z",
          "completed_at": null
        },
        {
          "id": "ed48cbd0-7488-4b61-afe5-71851ed565c0",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "When setting the priority, the card details are closed and the lists are shown",
          "description": "This is apparently wrong\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 27,
          "due_date": null,
          "points": 4,
          "card_number": 28,
          "sprint_id": null,
          "created_at": "2025-10-11T21:43:08.519830Z",
          "updated_at": "2025-10-12T14:58:29.087702Z",
          "completed_at": null
        },
        {
          "id": "00a80b5e-f7c8-47e7-ba51-312a16a1618e",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Search in cards list",
          "description": "Mvp, search by title use `/` to search\n\nLater for boards list also\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 28,
          "due_date": null,
          "points": 4,
          "card_number": 29,
          "sprint_id": null,
          "created_at": "2025-10-11T21:45:54.321945Z",
          "updated_at": "2025-10-11T21:47:04.856744Z",
          "completed_at": null
        },
        {
          "id": "72ffc5f8-df27-4dd5-bc13-36e5c105f367",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Vim Motions",
          "description": null,
          "priority": "Medium",
          "status": "Todo",
          "position": 29,
          "due_date": null,
          "points": 2,
          "card_number": 30,
          "sprint_id": null,
          "created_at": "2025-10-11T21:56:16.454189Z",
          "updated_at": "2025-10-11T22:25:21.168733Z",
          "completed_at": null
        },
        {
          "id": "6f66b041-2592-4e78-b348-cbc34c00c548",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Update status of a card - Board Columns",
          "description": "Specifically needed. in progress\n\nWe want to start working on board columns\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 30,
          "due_date": null,
          "points": 5,
          "card_number": 31,
          "sprint_id": null,
          "created_at": "2025-10-12T00:14:17.034422Z",
          "updated_at": "2025-10-12T15:09:11.118477Z",
          "completed_at": null
        },
        {
          "id": "0ae3776c-38cc-4b22-8e89-ed9ac767b512",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Add cli",
          "description": "I want to besides the tui add a cli interface to the application also\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 31,
          "due_date": null,
          "points": 4,
          "card_number": 32,
          "sprint_id": null,
          "created_at": "2025-10-12T08:23:41.175901Z",
          "updated_at": "2025-10-12T13:37:36.229199Z",
          "completed_at": null
        },
        {
          "id": "8e3a543e-86b0-405f-994e-515e013990b7",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "add ? binding",
          "description": "in different contexts it would be beneficial to press `?` to see a dialog detailing the different commands possible\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 32,
          "due_date": null,
          "points": 3,
          "card_number": 33,
          "sprint_id": null,
          "created_at": "2025-10-12T13:35:39.923005Z",
          "updated_at": "2025-10-12T13:37:27.456Z",
          "completed_at": null
        },
        {
          "id": "475bde99-0a3f-457c-9ea6-2fd51d1d7e73",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "when creating a task. set the cursor/selected task to the new task",
          "description": "it currently does something else\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 33,
          "due_date": null,
          "points": 1,
          "card_number": 34,
          "sprint_id": null,
          "created_at": "2025-10-12T13:37:00.520483Z",
          "updated_at": "2025-10-12T13:37:20.209400Z",
          "completed_at": null
        },
        {
          "id": "4e3ecb8a-476f-4f65-8060-5577eb32c192",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "make j/k work for changing panels",
          "description": "using 1/2/3 etc is cool and all but I would also like to step through the panels using hjkl\n\nin the board details view, sprint section we use a list to show sprints.\n\nI think we just use 0 index of lists to change panel up and list.length - 1 index to change panel down. \n\nSo for when a panel contains a list and we hit j/k step through the list until we reach the end or the beginning and then change the panel\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 34,
          "due_date": null,
          "points": 2,
          "card_number": 35,
          "sprint_id": null,
          "created_at": "2025-10-12T13:39:14.336658Z",
          "updated_at": "2025-10-12T13:42:20.921129Z",
          "completed_at": null
        },
        {
          "id": "cdaed89e-ddb8-4a99-9567-b1096f6aaca2",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "audit history - keep a log of changes",
          "description": "This feels like a task that can easily spin out of control\n\nWe want to keep a historic log for changes to each entity\n\nDo I want to keep the log in a seperate file? \n\nWe start by keeping it simple. Start by proposing\n\n```JSON\n{ boards: [ ... ], logs: [ { boards: { ... }, ... ] } }\n```\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 35,
          "due_date": null,
          "points": 5,
          "card_number": 36,
          "sprint_id": null,
          "created_at": "2025-10-12T14:44:43.936971Z",
          "updated_at": "2025-10-12T15:09:11.118474Z",
          "completed_at": null
        },
        {
          "id": "3b771805-ec2a-4b6a-bc3d-57b1528e3742",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "hitting 2 should activate the highlighted board",
          "description": "The current ui is a bit unintuitive when wanting to navigate to the task list.\n\nI first have to select the board (enter/space) and then I can change to the task list using 2.\n\nIt would probably feel more natural to just have the activation when hitting 2 and activating the currently highlighted board.\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 36,
          "due_date": null,
          "points": 4,
          "card_number": 37,
          "sprint_id": null,
          "created_at": "2025-10-12T14:49:41.587356Z",
          "updated_at": "2025-10-12T14:51:08.328546Z",
          "completed_at": null
        },
        {
          "id": "8099e29b-21d9-404c-a716-47c659773f69",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "branch name doesnt reflected the used version",
          "description": "if a branch name is copied and then the prefix is updated for the board. the card is no longer connected to the correct branch name.\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 37,
          "due_date": null,
          "points": 2,
          "card_number": 38,
          "sprint_id": null,
          "created_at": "2025-10-12T15:43:38.123195Z",
          "updated_at": "2025-10-12T15:44:21.664477Z",
          "completed_at": null
        },
        {
          "id": "8be94a1d-a915-46d1-a7f1-020da9307cd9",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Tags for cards",
          "description": "Be able to categorize cards using tag system\n\n- Bugs\n- Feature\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 38,
          "due_date": null,
          "points": 2,
          "card_number": 39,
          "sprint_id": null,
          "created_at": "2025-10-12T15:44:28.371016Z",
          "updated_at": "2025-10-12T15:45:04.057629Z",
          "completed_at": null
        },
        {
          "id": "ff2085d5-9304-423d-8169-6d3fb2a509d9",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Make card meta data editing like board settings edit",
          "description": "Replicate the board details editing in the card details metadata\n\nOpen in subset of the JSON and edit those field and then after save update only that subset\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 39,
          "due_date": null,
          "points": 3,
          "card_number": 40,
          "sprint_id": null,
          "created_at": "2025-10-12T15:45:29.530124Z",
          "updated_at": "2025-10-12T15:46:31.166006Z",
          "completed_at": null
        },
        {
          "id": "21ef5706-4393-458e-93c2-a8ca7792afa8",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Add some retrospective note on completed tasks",
          "description": "It would be cool if we could add some retrospective note when completing a task\n\nWe could pull in the github pr description or write thoughts on the task or both\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 40,
          "due_date": null,
          "points": 2,
          "card_number": 41,
          "sprint_id": null,
          "created_at": "2025-10-12T15:48:23.468340Z",
          "updated_at": "2025-10-12T16:48:08.217212Z",
          "completed_at": null
        },
        {
          "id": "5b43a7e3-b056-4370-882a-bdad4bb9e0ed",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Assign task to sprint if created in sprint task list",
          "description": null,
          "priority": "Medium",
          "status": "Todo",
          "position": 41,
          "due_date": null,
          "points": 2,
          "card_number": 42,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-12T16:45:24.828497Z",
          "updated_at": "2025-10-12T16:46:10.916807Z",
          "completed_at": null
        },
        {
          "id": "5d31ae81-75a7-47c7-a6d1-5a9b0f06a5b7",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Remove projects projects and kanban green text",
          "description": "in the projects panel there is a green text with `Projects` we can drop this as the panel header itself shows projects too.\n\nin the task list there is a green text of the current project. we can drop this and rely on the highlighted item in the projects list instead\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 42,
          "due_date": null,
          "points": 1,
          "card_number": 43,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-12T16:45:41.135171Z",
          "updated_at": "2025-10-12T16:51:11.859124Z",
          "completed_at": null
        }
      ],
      "sprints": [
        {
          "id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "board_id": "e119c091-e1fa-4596-9bc7-038ceab6adec",
          "sprint_number": 1,
          "name_index": 0,
          "prefix_override": null,
          "status": "Active",
          "start_date": "2025-10-12T13:49:57.439840Z",
          "end_date": "2025-10-19T13:49:57.439840Z",
          "created_at": "2025-10-12T13:46:50.902284Z",
          "updated_at": "2025-10-12T13:49:57.439845Z"
        }
      ]
    },
    {
      "board": {
        "id": "2bdd79a5-b26a-473c-b790-8b5117283b2f",
        "name": "test",
        "description": null,
        "branch_prefix": null,
        "next_card_number": 1,
        "task_sort_field": "Default",
        "task_sort_order": "Ascending",
        "sprint_duration_days": null,
        "sprint_prefix": null,
        "sprint_names": [],
        "sprint_name_used_count": 0,
        "next_sprint_number": 1,
        "active_sprint_id": null,
        "created_at": "2025-10-12T16:50:35.469369Z",
        "updated_at": "2025-10-12T16:50:35.469369Z"
      },
      "columns": [],
      "cards": [],
      "sprints": []
    }
  ]
}