{
  "boards": [
    {
      "board": {
        "id": "e119c091-e1fa-4596-9bc7-038ceab6adec",
        "name": "Kanban",
        "description": "Management of the **Kanban** project\n",
        "branch_prefix": "KAN",
        "next_card_number": 85,
        "task_sort_field": "Default",
        "task_sort_order": "Ascending",
        "sprint_duration_days": 7,
        "sprint_prefix": "MVP",
        "sprint_names": [
          "an-eventful-october",
          "an-experience-to-remember"
        ],
        "sprint_name_used_count": 2,
        "next_sprint_number": 7,
        "active_sprint_id": "737b04e6-52e2-4a40-bbaa-e2c9bcc84249",
        "task_list_view": "ColumnView",
        "created_at": "2025-10-10T08:47:44.779097Z",
        "updated_at": "2025-10-22T19:49:01.680525Z"
      },
      "columns": [
        {
          "id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "board_id": "e119c091-e1fa-4596-9bc7-038ceab6adec",
          "name": "TODO",
          "position": 0,
          "wip_limit": null,
          "created_at": "2025-10-10T08:47:57.834219Z",
          "updated_at": "2025-10-16T20:33:34.236660Z"
        },
        {
          "id": "db3aaee8-0f13-4afa-b000-592bac0bf364",
          "board_id": "e119c091-e1fa-4596-9bc7-038ceab6adec",
          "name": "Doing",
          "position": 1,
          "wip_limit": null,
          "created_at": "2025-10-16T20:32:48.444384Z",
          "updated_at": "2025-10-16T20:33:34.236660Z"
        },
        {
          "id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "board_id": "e119c091-e1fa-4596-9bc7-038ceab6adec",
          "name": "Complete",
          "position": 2,
          "wip_limit": null,
          "created_at": "2025-10-16T20:32:54.509367Z",
          "updated_at": "2025-10-16T20:33:32.447433Z"
        }
      ],
      "cards": [
        {
          "id": "243615fe-fbcd-4d80-a88d-8173ec4b9573",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "Fix the CI",
          "description": "2025-10-20 17:35:49\n---\n\nThe ci woes continue\n\nThe current progress is that of \n\n---\n\n  New Idempotent Release Pipeline\n\n  Two new minimal scripts:\n  - aggregate-changesets.sh - Finds highest priority bump type (major > minor > patch)\n  - update-changelog.sh - Merges changesets into CHANGELOG.md with version header\n\n  Updated workflows:\n\n  1. aggregate-changesets.yml (on develop PR close):\n    - Aggregates all changesets into CHANGELOG.md\n    - Single version bump per release cycle\n    - Cleans up changesets\n    - Commits to develop\n  2. release.yml (on master PR close):\n    - Compares Cargo.toml version vs last git tag\n    - If version changed → publish & tag\n    - If version unchanged → skip (idempotent!)\n    - No changeset checking, no pushing back to master\n\n  Benefits:\n  - ✅ Idempotent: Version is source of truth, safe to re-run\n  - ✅ Maintainable: Simple version comparison logic\n  - ✅ Single version bump: One bump per release cycle\n  - ✅ Changelog preserved: Full history in CHANGELOG.md\n  - ✅ Zero race conditions: No pushing to trigger branch\n\n---\n\nMoving cards to and from columns also seem broken\n",
          "priority": "Medium",
          "status": "Done",
          "position": 24,
          "due_date": null,
          "points": 1,
          "card_number": 0,
          "sprint_id": null,
          "created_at": "2025-10-10T08:47:57.834239Z",
          "updated_at": "2025-10-21T21:20:21.085162Z",
          "completed_at": "2025-10-21T21:20:21.085162Z"
        },
        {
          "id": "143615fe-fbcd-4d80-a88d-8173ec4b9573",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "Unify import and export",
          "description": "The application is exporting boards using two different formats.\n\n```JSON\n{ board: { ... } }\n```\n\nand\n\n```JSON\n{ boards: [{ ... }] }\n```\n\nLet us make import and export only expect the latter.\n",
          "priority": "Medium",
          "status": "Done",
          "position": 2,
          "due_date": null,
          "points": 1,
          "card_number": 4,
          "sprint_id": null,
          "created_at": "2025-10-10T08:47:57.834239Z",
          "updated_at": "2025-10-18T21:08:32.067931Z",
          "completed_at": "2025-10-16T21:02:45.523148Z"
        },
        {
          "id": "959a092f-61de-41de-ac4a-729d6e1fcadf",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "Rename tasks of exports to cards",
          "description": "To better align with the kanban domain let us change the export field `tasks` into `cards`\n",
          "priority": "Medium",
          "status": "Done",
          "position": 3,
          "due_date": null,
          "points": 1,
          "card_number": 5,
          "sprint_id": null,
          "created_at": "2025-10-10T09:08:28.861766Z",
          "updated_at": "2025-10-16T21:02:46.170907Z",
          "completed_at": "2025-10-16T21:02:46.170907Z"
        },
        {
          "id": "292e3f49-089b-40fb-8ea7-c693603904b2",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "Add git branches to card meta data",
          "description": "We want to be able to create git branches and tie them to specific tasks so that we can trace the history.\n\nBe able to specify a prefix for use in the project\n\n- Set prefix in Board settings\n- Assign prefix + autoincremented number to card\n- From a card. Copy branch name\n- From a card. Copy `git checkout -b prefix+id`\n\nShould the id be autoincrement or uuid?\n\nReadability says it should be autoincremented. So we go with that for now.\n\n- If no prefix fallback to a default.\n- Customize default. Requires application configuration file feature?\n\n╭────────────────────────────────────────────────────────────────╮\n│ Git Branch Integration Implementation Plan                     │\n│                                                                │\n│ Core Design Decisions                                          │\n│                                                                │\n│ - Branch ID: Auto-incremented u32 per board (decided:          │\n│ readability over UUIDs)                                        │\n│ - Prefix Hierarchy: Board prefix → App config default → \"task\" │\n│  fallback                                                      │\n│ - ID Assignment: Lazy (on first request) to avoid assigning    │\n│ IDs to cards that never need branches                          │\n│ - Branch Format: {prefix}-{id} (e.g., feature-42, task-17)     │\n│                                                                │\n│ ---                                                            │\n│ 1. Domain Layer (kanban-domain)                                │\n│                                                                │\n│ Board model (board.rs):                                        │\n│ - Add branch_prefix: Option<String> field                      │\n│ - Add next_card_id: u32 field (default: 1)                   │\n│ - Add update_branch_prefix(&mut self, prefix: Option<String>)  │\n│ method                                                         │\n│ - Add allocate_card_id(&mut self) -> u32 method              │\n│                                                                │\n│ Card model (card.rs):                                          │\n│ - Add card_id: Option<u32> field                             │\n│ - Add ensure_card_id(&mut self, board: &mut Board) method    │\n│ - Add branch_name(&self, board: &Board, default_prefix: &str)  │\n│ -> Option<String> method                                       │\n│ - Add git_checkout_command(&self, board: &Board,               │\n│ default_prefix: &str) -> Option<String> method                 │\n│ - Add prefix validation (no spaces, git-safe characters)       │\n│                                                                │\n│ ---                                                            │\n│ 2. Application Configuration (kanban-core)                     │\n│                                                                │\n│ Create new config.rs module:                                   │\n│ - Define AppConfig struct with default_branch_prefix:          │\n│ Option<String>                                                 │\n│ - Use config crate or simple TOML parsing                      │\n│ - Config file location: ~/.config/kanban/config.toml           │\n│ - Load config on app startup in kanban-cli                     │\n│ - Thread through to TUI via App struct                         │\n│                                                                │\n│ ---                                                            │\n│ 3. Clipboard Integration (kanban-tui)                          │\n│                                                                │\n│ Add dependencies to kanban-tui/Cargo.toml:                     │\n│ - arboard = \"3.4\" (cross-platform clipboard)                   │\n│                                                                │\n│ Create new clipboard.rs module:                                │\n│ - copy_to_clipboard(text: &str) -> io::Result<()>              │\n│ - Handle errors gracefully (e.g., headless environments)       │\n│                                                                │\n│ ---                                                            │\n│ 4. TUI Layer (kanban-tui)                                      │\n│                                                                │\n│ App struct (app.rs):                                           │\n│ - Add app_config: AppConfig field                              │\n│ - Add clipboard operations to card detail mode                 │\n│                                                                │\n│ Board settings (new mode AppMode::BoardSettings):              │\n│ - Add focus state for navigating board settings                │\n│ - Edit branch prefix with external editor or inline input      │\n│ - Show current prefix, effective prefix (with fallback chain)  │\n│                                                                │\n│ Card detail view (ui.rs):                                      │\n│ - Show branch ID (if assigned)                                 │\n│ - Show computed branch name                                    │\n│ - Show git checkout command                                    │\n│                                                                │\n│ Key bindings (in CardDetail mode):                             │\n│ - b - Assign branch ID (if not already assigned)               │\n│ - y - Copy branch name to clipboard                            │\n│ - Y - Copy git checkout -b {branch} to clipboard               │\n│ - Add to help text                                             │\n│                                                                │\n│ New AppMode variants:                                          │\n│ - BoardSettings - for editing board-level settings             │\n│ - SetBranchPrefix - dialog for setting prefix                  │\n│                                                                │\n│ ---                                                            │\n│ 5. Persistence                                                 │\n│                                                                │\n│ Update serialization/deserialization:                          │\n│ - Board export/import already uses serde                       │\n│ - New fields automatically included                            │\n│ - Migration: existing boards get branch_prefix: None,          │\n│ next_card_id: 1                                              │\n│ - Existing cards get card_id: None                           │\n│                                                                │\n│ ---                                                            │\n│ 6. Testing Strategy                                            │\n│                                                                │\n│ Unit tests:                                                    │\n│ - Branch ID allocation (sequential, no gaps)                   │\n│ - Branch name generation with different prefix scenarios       │\n│ - Prefix validation (reject invalid git characters)            │\n│ - Clipboard operations (mock if needed)                        │\n│                                                                │\n│ Integration tests:                                             │\n│ - Round-trip serialization with new fields                     │\n│ - Multiple cards getting sequential IDs                        │\n│                                                                │\n│ ---                                                            │\n│ 7. Implementation Order                                        │\n│                                                                │\n│ 1. Add AppConfig in kanban-core                                │\n│ 2. Update Board domain model with prefix + next_card_id      │\n│ 3. Update Card domain model with card_id + methods           │\n│ 4. Add clipboard module to kanban-tui                          │\n│ 5. Update App struct to hold config                            │\n│ 6. Add board settings mode in TUI                              │\n│ 7. Add card detail branch operations                           │\n│ 8. Update help text and key bindings                           │\n│ 9. Add tests                                                   │\n│ 10. Update CLAUDE.md with new features                         │\n│                                                                │\n│ ---                                                            │\n│ 8. Edge Cases & Validation                                     │\n│                                                                │\n│ - Validate prefix: alphanumeric + hyphens only, no             │\n│ leading/trailing hyphens                                       │\n│ - Max branch name length: git supports ~255 chars, warn if     │\n│ prefix + ID exceeds reasonable length                          │\n│ - Clipboard unavailable: show friendly error, fallback to      │\n│ displaying text                                                │\n│ - Board without prefix: use app config default or \"task\"       │\n│ - Cards created before feature: assign IDs on demand           │\n│                                                                │\n│ ---                                                            │\n│ Example Usage Flow                                             │\n│                                                                │\n│ 1. User opens board settings (s in projects view)              │\n│ 2. Sets prefix to \"feat\"                                       │\n│ 3. Navigates to card, presses b to assign branch ID → card     │\n│ gets card_id=1                                               │\n│ 4. Board's next_card_id increments to 2                      │\n│ 5. User presses y → copies \"feat-1\" to clipboard               │\n│ 6. User presses Y → copies \"git checkout -b feat-1\" to         │\n│ clipboard                                                      │\n│ 7. Next card gets card_id=2, branch name \"feat-2\"            │\n│                                                                │\n│ ---                                                            │\n│ Dependencies to add:                                           │\n│ - arboard = \"3.4\" (clipboard)                                  │\n│ - config = \"0.14\" (optional, for TOML config parsing)          │\n│ - OR use simple std::fs::read_to_string + toml = \"0.8\" for     │\n│ lightweight config     \n",
          "priority": "Medium",
          "status": "Done",
          "position": 4,
          "due_date": null,
          "points": 5,
          "card_number": 1,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-10T21:58:56.145240Z",
          "updated_at": "2025-10-16T21:02:46.691481Z",
          "completed_at": "2025-10-16T21:02:46.691481Z"
        },
        {
          "id": "f1a80abd-338c-4593-92d6-20c2db7dc093",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Links to cards",
          "description": "Be able to have references to other cards.\n\n[like this](DEV-0001) Should be able to follow that link and open the card in Task Description interface.\n\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 34,
          "due_date": null,
          "points": 4,
          "card_number": 2,
          "sprint_id": "737b04e6-52e2-4a40-bbaa-e2c9bcc84249",
          "created_at": "2025-10-10T22:03:42.988557Z",
          "updated_at": "2025-10-22T04:16:48.304273Z",
          "completed_at": null
        },
        {
          "id": "e96684a5-4645-443e-8e2c-6bb646e248c6",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Card dependencies",
          "description": "Introduce two features\n\n# Block\n\n- Add blocked by card\n- Add create blocker. Creating the new card that would be the blocker.\n\n# Grouping of cards under one card\n\nI would like to keep things flat but I would like card meta data where I can group cards by a top level card.\n\nThe interface would present the grouping as nested to begin with and we see how it behaves?\n\nExample\n\n```\nImplement Card Grouping ...\n```\n\nWhich would when hit enter or space on expand into\n\n```\nImplement Card Grouping\n  Create ui\n  Add metadata\n```\n\n# Duplicate cards\n\nWhen two cards propose changes that are two sides of the same coin. Be able to add them as siblings. \n\nBut when two cards propose changes that are the same side of the same coin, we want to merge them together. Creating a new card by editing the description and title in a git conflict type way\n\nThe merging will ofcourse be handled by opening EDITOR and injecting the content into their respective section.\n\nExample\n---\n\nTitle\n\n```\n<<<<<<< KAN-0001\nCard Background\n=======\nCard Background Color\n>>>>>>> KAN-0002\n```\n\nDescription\n\n```\nWe want to introduce a new feature that\n<<<<<<< KAN-0001\nMakes card background purple\n=======\nMakes card background green\n>>>>>>> KAN-0002\n```\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 4,
          "due_date": null,
          "points": 4,
          "card_number": 6,
          "sprint_id": "737b04e6-52e2-4a40-bbaa-e2c9bcc84249",
          "created_at": "2025-10-10T22:05:04.607714Z",
          "updated_at": "2025-10-12T17:21:31.495335Z",
          "completed_at": null
        },
        {
          "id": "90f8121a-045f-47fd-b8fe-bb0e5b7662b1",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "Add column definitions",
          "description": "# At the board level. Be able to define columns\n\nDefault columns when creating a new board\n---\n- TODO\n- Doing\n- Complete\n\nFeatures\n---\n- Be able to change the name of columns\n- Be able to change order of columns\n- Be able to add new columns\n- Be able to remove columns\n- Be able to add tasks to column\n- Using 'c' is equivalent to moving a card to the last column. If there is only one column in a board, we can only set complete manually like the current implementation does.\n\nUI\n---\n- hitting `c` in Board Details opens up Columns. In columns we see one panel listing the columns in order.\n- In the \n\n### Task list\n\n- Be able to view tasks in column view grouped by columns\n- Be able to view tasks in list view grouped by columns\n- Be able to view the task list without columns (current behavior)\n- Extend the task list to have column task list\n- Extend the task list to have list grouped by columns\n- Choose which view is active in the task list panel by opening a list dialogue with the choices with `v`. The current view is saved to the board and loaded on startup.\n\nDupe of `KAN-31/update-status-of-a-card-board-columns`\n\nImplementation\n---\nImplementation Plan: Column Definitions at Board Level                                                                               │ │\n                                                                                                                                     │ │\nOverview                                                                                                                             │ │\n                                                                                                                                     │ │\nAdd full column management capabilities to the kanban board, allowing users to define, edit, reorder, and manage columns at the      │ │\nboard level. This includes default columns on board creation, a dedicated column management UI, and integration with task completion │ │\n workflows.                                                                                                                          │ │\n                                                                                                                                     │ │\nArchitecture Changes                                                                                                                 │ │\n                                                                                                                                     │ │\n1. Domain Layer (kanban-domain)                                                                                                      │ │\n                                                                                                                                     │ │\nFile: crates/kanban-domain/src/column.rs                                                                                             │ │\n- Add update_name(&mut self, name: String) method                                                                                    │ │\n- Add validation for column names (non-empty, unique within board)                                                                   │ │\n                                                                                                                                     │ │\nFile: crates/kanban-domain/src/board.rs                                                                                              │ │\n- Add default_column_definitions: Vec<String> field (default: [\"TODO\", \"Doing\", \"Complete\"])                                         │ │\n- Add task_list_view: TaskListView enum field (default: TaskListView::Flat)                                                          │ │\n- Add methods for column management at board level                                                                                   │ │\n                                                                                                                                     │ │\nNew: crates/kanban-domain/src/task_list_view.rs                                                                                      │ │\n- Define TaskListView enum: Flat, GroupedByColumn, ColumnView                                                                        │ │\n                                                                                                                                     │ │\n2. Application State (kanban-tui/src/app.rs)                                                                                         │ │\n                                                                                                                                     │ │\nAdd new AppMode variants:                                                                                                            │ │\n- ColumnManagement - Main column management view                                                                                     │ │\n- CreateColumn - Dialog for creating new column                                                                                      │ │\n- RenameColumn - Dialog for renaming column                                                                                          │ │\n- DeleteColumnConfirm - Confirmation dialog for column deletion                                                                      │ │\n- SelectTaskListView - Popup for selecting task list view type                                                                       │ │\n                                                                                                                                     │ │\nAdd new Focus enum:                                                                                                                  │ │\n- ColumnFocus with variants: ColumnList                                                                                              │ │\n                                                                                                                                     │ │\nAdd to App struct:                                                                                                                   │ │\n- column_selection: SelectionState - For navigating columns                                                                          │ │\n- active_column_index: Option<usize> - Currently selected column                                                                     │ │\n- task_list_view_selection: SelectionState - For view selection popup                                                                │ │\n                                                                                                                                     │ │\n3. UI Layer (kanban-tui/src/ui.rs)                                                                                                   │ │\n                                                                                                                                     │ │\nAdd rendering functions:                                                                                                             │ │\n- render_column_management_view() - Main column management interface                                                                 │ │\n- render_create_column_popup() - Column creation dialog                                                                              │ │\n- render_rename_column_popup() - Column rename dialog                                                                                │ │\n- render_delete_column_confirm_popup() - Deletion confirmation                                                                       │ │\n- render_select_task_list_view_popup() - View selection popup                                                                        │ │\n- Update render_tasks_panel() to support three view modes                                                                            │ │\n                                                                                                                                     │ │\n4. Handlers                                                                                                                          │ │\n                                                                                                                                     │ │\nNew: crates/kanban-tui/src/handlers/column_handlers.rs                                                                               │ │\n- handle_column_management_key() - Navigate and manage columns                                                                       │ │\n- handle_create_column_key() - Initiate column creation                                                                              │ │\n- handle_rename_column_key() - Initiate column renaming                                                                              │ │\n- handle_delete_column_key() - Delete column with confirmation                                                                       │ │\n- handle_move_column_up() - Reorder columns (decrease position)                                                                      │ │\n- handle_move_column_down() - Reorder columns (increase position)                                                                    │ │\n- handle_toggle_task_list_view() - Switch between view modes                                                                         │ │\n- create_column() - Logic to add column to board                                                                                     │ │\n- rename_column() - Logic to update column name                                                                                      │ │\n- delete_column() - Logic to remove column (move cards to first column)                                                              │ │\n- reorder_columns() - Update position fields                                                                                         │ │\n                                                                                                                                     │ │\nUpdate: crates/kanban-tui/src/handlers/detail_view_handlers.rs                                                                       │ │\n- Add KeyCode::Char('5') handler for BoardFocus::Columns in BoardDetail                                                              │ │\n- Add BoardFocus::Columns to handle_board_detail_key()                                                                               │ │\n                                                                                                                                     │ │\nUpdate: crates/kanban-tui/src/handlers/card_handlers.rs                                                                              │ │\n- Modify handle_toggle_card_completion() to move card to last column if columns exist                                                │ │\n- Add fallback to current behavior if only one column exists                                                                         │ │\n                                                                                                                                     │ │\n5. Export/Import (kanban-tui/src/export/)                                                                                            │ │\n                                                                                                                                     │ │\nUpdate: models.rs and exporter.rs / importer.rs                                                                                      │ │\n- Ensure columns are properly serialized/deserialized                                                                                │ │\n- Handle migration from boards without column definitions                                                                            │ │\n                                                                                                                                     │ │\n6. Board Initialization                                                                                                              │ │\n                                                                                                                                     │ │\nUpdate: crates/kanban-tui/src/handlers/board_handlers.rs                                                                             │ │\n- When creating board with create_board(), automatically create default columns:                                                     │ │\n  - \"TODO\" (position 0)                                                                                                              │ │\n  - \"Doing\" (position 1)                                                                                                             │ │\n  - \"Complete\" (position 2)                                                                                                          │ │\n                                                                                                                                     │ │\nKey Bindings                                                                                                                         │ │\n                                                                                                                                     │ │\nBoard Detail View                                                                                                                    │ │\n                                                                                                                                     │ │\n- 5 - Open Column Management (new BoardFocus::Columns)                                                                               │ │\n- e - Edit columns (when focused on Columns panel)                                                                                   │ │\n                                                                                                                                     │ │\nColumn Management View                                                                                                               │ │\n                                                                                                                                     │ │\n- ESC - Return to Board Detail                                                                                                       │ │\n- n - Create new column                                                                                                              │ │\n- r - Rename selected column                                                                                                         │ │\n- d - Delete selected column (with confirmation)                                                                                     │ │\n- j/k or ↓/↑ - Navigate columns                                                                                                      │ │\n- J or Ctrl+Down - Move column down in order                                                                                         │ │\n- K or Ctrl+Up - Move column up in order                                                                                             │ │\n                                                                                                                                     │ │\nTask List View                                                                                                                       │ │\n                                                                                                                                     │ │\n- v - Open view selection dialog (Flat / Grouped by Column / Column View)                                                            │ │\n- View preference saved per board                                                                                                    │ │\n                                                                                                                                     │ │\nImplementation Sequence                                                                                                              │ │\n                                                                                                                                     │ │\n1. Domain models - Update Board, Column, add TaskListView enum                                                                       │ │\n2. Board initialization - Auto-create default columns on board creation                                                              │ │\n3. App state - Add new modes, focus types, selections                                                                                │ │\n4. Column handlers - Implement all column management logic                                                                           │ │\n5. UI rendering - Add column management view and popups                                                                              │ │\n6. Task list views - Implement three view modes (Flat, Grouped, Column)                                                              │ │\n7. Card completion - Update to move to last column                                                                                   │ │\n8. Export/Import - Update serialization to handle new fields                                                                         │ │\n9. Testing - Verify column CRUD, reordering, view switching, card movement                                                           │ │\n                                                                                                                                     │ │\nSuggestions for Future Enhancements                                                                                                  │ │\n                                                                                                                                     │ │\n- WIP limits per column (already in Column model, just needs UI)                                                                     │ │\n- Customizable column colors                                                                                                         │ │\n- Archive columns instead of delete                                                                                                  │ │\n- Column templates for new boards                                                                                                    │ │\n\nMove Card\n---\n\n1. Manual Card Column Movement (H/L keys):\n   - H (Shift+h) - Moves selected card to the previous (left) column\n   - L (Shift+l) - Moves selected card to the next (right) column\n   - Focus tracking: The card selection stays on the moved card after movement\n   - Edge case handling: Warns if already at first/last column\n 2. Updated Card Completion Behavior (c key):\n   - When pressing c on a card:\n       - If the board has multiple columns: Moves card to the last column AND marks it as Done\n     - If the board has only 1 column: Just toggles the status (fallback behavior)\n   - Works for both single card completion and multi-select completion\n   - Cards moved to the last column are automatically marked as complete\n 3. UI Updates:\n   - Footer help text now shows: H/L: move card\n   - All functionality is ready to use\n\n How It Works:\n\n The implementation intelligently:\n - Sorts columns by position to determine left/right\n - Calculates the new position in the target column (appends to end)\n - Updates the card's column_id and position\n - Re-sorts the card list and finds the moved card's new index\n - Updates the selection to track the moved card\n\n The code compiles successfully and is ready for testing! 🎉\n \n Three interfaces\n ---\n Implement task list view modes rendering:                                                                                            │ │\n\n1. Refactor render_main function to check view mode:                                                                                 │ │\n  - For Flat and Grouped views: Keep current 2-panel layout (Projects 30% | Tasks 70%)                                               │ │\n  - For ColumnView/Kanban: Hide projects panel, use full width for kanban board                                                      │ │\n  - Check board.task_list_view to determine layout                                                                                   │ │\n2. Refactor render_tasks_panel function to route based on view:                                                                      │ │\n  - Match on board.task_list_view enum                                                                                               │ │\n  - Call appropriate rendering function:                                                                                             │ │\n      - Flat → existing flat list logic                                                                                              │ │\n    - GroupedByColumn → new grouped rendering                                                                                        │ │\n    - ColumnView → new kanban rendering                                                                                              │ │\n3. Implement Grouped by Column view (render_tasks_grouped_by_column):                                                                │ │\n  - Get sorted columns for the board                                                                                                 │ │\n  - For each column:                                                                                                                 │ │\n      - Render column name as a header (styled/bold, e.g., \"TODO (3 tasks)\")                                                         │ │\n    - Filter cards by column_id                                                                                                      │ │\n    - Render cards under that header                                                                                                 │ │\n  - Handle card selection across all groups (track global index)                                                                     │ │\n4. Implement Column/Kanban view (render_tasks_kanban_view):                                                                          │ │\n  - Takes full area (no projects panel)                                                                                              │ │\n  - Split area into N vertical panels (one per column)                                                                               │ │\n  - Calculate equal-width constraints dynamically based on column count                                                              │ │\n  - For each column panel:                                                                                                           │ │\n      - Render as bordered panel with column name as title                                                                           │ │\n    - Filter cards by column_id                                                                                                      │ │\n    - Render cards in that panel                                                                                                     │ │\n  - Handle card selection (track which card across all columns in order)                                                             │ │\n  - Navigation: j/k moves through all cards left-to-right, top-to-bottom                                                             │ │\n5. Update card selection tracking:                                                                                                   │ │\n  - Keep card_selection as simple index into flat sorted list                                                                        │ │\n  - All views use same underlying sorted card list                                                                                   │ │\n  - Just render differently based on view mode                                                                                       │ │\n6. Handle edge cases:                                                                                                                │ │\n  - Empty columns in grouped/kanban view (show placeholder text)                                                                     │ │\n  - Selection persistence when switching views                                                                                       │ │\n  - Proper focus indicators in all modes                                                                                             │ │\n  - Projects panel focus: disabled in kanban mode (only Cards focus active)                                                          │ │\n─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n\n2025-10-18 12:24:25\n---\n\nOpening the view selection dialogue should not be possible unless a board has been activated.\n\n\n",
          "priority": "Critical",
          "status": "Done",
          "position": 29,
          "due_date": null,
          "points": 2,
          "card_number": 7,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-10T22:11:25.809290Z",
          "updated_at": "2025-10-21T21:47:36.557991Z",
          "completed_at": "2025-10-21T21:47:36.557987Z"
        },
        {
          "id": "86c1b649-03bc-4da8-87c3-e20a2c56a640",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Test the application with another editor",
          "description": "Need to try the application to see how it behaves with different editors\n\n- VSCode\n- vim\n- vi\n- emacs\n\nWindows\n\n- notepad\n- notepad++\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 6,
          "due_date": null,
          "points": 1,
          "card_number": 8,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-10T22:13:04.048521Z",
          "updated_at": "2025-10-18T21:08:40.905346Z",
          "completed_at": null
        },
        {
          "id": "eceed2ce-de5e-4166-95e7-7fb9c7e65b20",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "Change priority",
          "description": "- Be able to change the priority of a task\n\n",
          "priority": "Critical",
          "status": "Done",
          "position": 0,
          "due_date": null,
          "points": 1,
          "card_number": 9,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-10T22:14:31.293267Z",
          "updated_at": "2025-10-16T20:47:08.170397Z",
          "completed_at": "2025-10-16T20:47:08.170395Z"
        },
        {
          "id": "7cd165b0-6671-46d6-b837-4e73ada26333",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "Add or update priorities",
          "description": "On the board level. \n\nBe able to configure priorities and change their names. \n\nWe should start with only medium?\n",
          "priority": "Medium",
          "status": "Done",
          "position": 5,
          "due_date": null,
          "points": 1,
          "card_number": 10,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-10T22:15:09.199792Z",
          "updated_at": "2025-10-16T21:02:48.075303Z",
          "completed_at": "2025-10-16T21:02:48.075303Z"
        },
        {
          "id": "454144d2-27ac-4abf-8632-407908fa8f80",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Be able to scroll in the card description",
          "description": "Should be pretty self explantory. For cards with a longer description.\n\nWe want to be able to scroll so see more.\n\nPriority low as we can open `$EDITOR`\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 30,
          "due_date": null,
          "points": 1,
          "card_number": 11,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-10T22:53:19.579898Z",
          "updated_at": "2025-10-21T21:20:18.287983Z",
          "completed_at": null
        },
        {
          "id": "d48f9085-57ff-42c5-9f42-3cbb3cafde93",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Publish on nixpkgs",
          "description": "# Steps to Add Your Project to Nixpkgs\n\n## 1. Add Yourself as a Maintainer\n\nFirst, you'll need to add yourself to the maintainer list in maintainers/maintainer-list.nix with a separate commit titled \"maintainers: add <your-handle>\".\n\n## 2. Create the Package Expression\n\nSince your Kanban is a Rust project, you'll use buildRustPackage from rustPlatform nixpkgs/doc/languages-frameworks/rust.section.md at master · NixOS/nixpkgs\n\n[default.nix](./default.nix) \n\n## 3. Determine Package Location\n\nDecide which pkgs/ subfolder your expression should live in, then add your expression under a directory like pkgs/applications/misc/kanban/default.nix or similar\n\n## 4. Add to Package Index\n\nAdd an entry in pkgs/top-level/all-packages.nix so nixpkgs can find your package \n\n## 5. Fork and Test\n\nFork the nixpkgs repository, make your changes in a local branch, then build from the root of nixpkgs with nix-build -A kanban Nixpkgs/Contributing - NixOS Wiki\n\n## 6. Handle the Hash Values\n\nFor the cargoHash, you can initially use an empty string or fake hash, and Nix will tell you the correct hash when you try to build nixpkgs/doc/languages-frameworks/rust.section.md at master · NixOS/nixpkgs\n\n## 7. Submit a Pull Request\n\nOnce your package builds successfully, format your code with a Nix formatter like alejandra, then open a PR on GitHub with the title format \"kanban: init at <version>\" \n\n## 8. Wait for Review\n\nBe patient - it's normal for PRs to sit for weeks. If you need help, you can reach out on NixOS Discourse or the Matrix channels\n\n## Important Considerations\n\nRead the commit conventions specific to pkgs and include relevant information in your commit messages so others can understand why changes were made \n\nThe maintainers field is for you as the Nix expression maintainer, not the project maintainer. By submitting this package, you're taking responsibility for ongoing maintenance like version bumps \n\n\n",
          "priority": "Critical",
          "status": "Todo",
          "position": 10,
          "due_date": null,
          "points": 5,
          "card_number": 12,
          "sprint_id": null,
          "created_at": "2025-10-10T22:56:04.200355Z",
          "updated_at": "2025-10-18T20:55:59.907534Z",
          "completed_at": null
        },
        {
          "id": "6a0cbe1e-a05e-4aca-bd53-f0057215d671",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "Add order tasks lists by",
          "description": "Order tasks by\n\n- Points\n- Priority\n- Date created\n- Date due\n- Date updated\n- Status\n\nMVP\n---\n\nI think in the tasks panel. hit o (for order or organize) and then are presented with a dialogue where can choose one of the above options.\n\nThe dialogue should use the same selection mechanism as the projects and tasks lists do.\n\nAfter one of the options have been selected. The task list should be ordered according to the chosen option.\n\nFor now we leave out Date due from selection as we have not added this feature yet.\n\nOrder can be descending or ascending. a for ascending and d for descending after selecting an item. Taking suggestions on UX here..\n\n---\n\nFor the future. Keep in mind that I would also like to order the projects panel in the same way as the tasks panel but along a shorter list of options\n\n- Name\n- Date created\n- Date updated\n",
          "priority": "Medium",
          "status": "Done",
          "position": 6,
          "due_date": null,
          "points": 2,
          "card_number": 13,
          "sprint_id": null,
          "created_at": "2025-10-10T23:01:18.553586Z",
          "updated_at": "2025-10-16T21:02:49.028474Z",
          "completed_at": "2025-10-16T21:02:49.028474Z"
        },
        {
          "id": "9e8f918f-3fde-4847-aca8-0ab7646256a8",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Record demo",
          "description": "Using VHS record a demo so that we can post a gif of the tui to our github.\n\n```\n Complete Demo Script: Building a Web API Project\n\n  Scene 1: Launch & Create Board (0-15s)\n\n  $ cargo run\n  [TUI loads]\n  Press 'n'\n  Type: \"Web API Project\"\n  Press Enter\n  Narration: \"Creating a new project for our web API development\"\n\n  Scene 2: Add Cards with Different Priorities (15-50s)\n\n  Press '2' (switch to Tasks panel)\n  Press 'n'\n  Type: \"Setup development environment\"\n  Press Enter\n\n  Press 'n'\n  Type: \"Design database schema\"\n  Press Enter\n\n  Press 'n'\n  Type: \"Implement authentication API\"\n  Press Enter\n\n  Press 'n'\n  Type: \"Write integration tests\"\n  Press Enter\n  Narration: \"Adding tasks to our backlog\"\n\n  Scene 3: Edit Card Details - Full Metadata (50-90s)\n\n  Press 'k' (move up to first card)\n  Press Enter (open card detail)\n\n  [Show Title panel highlighted]\n  Press 'e'\n  [External editor opens]\n  Type: \"Setup development environment\\nInstall Rust, PostgreSQL, Docker\"\n  Save & exit\n\n  Press '2' (switch to Metadata panel)\n  Press 'e'\n  Type: \"3\" (for 3 story points - Yellow badge)\n  Press Enter\n\n  Press 's' (change status)\n  Type: \"InProgress\"\n  Press Enter\n\n  Press 'p' (change priority)\n  Type: \"High\"\n  Press Enter\n\n  Press '3' (switch to Description panel)\n  Press 'e'\n  [External editor opens]\n  Type: \"Dependencies:\\n- Rust 1.70+\\n- PostgreSQL 15\\n- Docker & docker-compose\\n\\nSetup steps:\\n1. Install Rust toolchain\\n2.\n  Configure database\\n3. Run initial migrations\"\n  Save & exit\n\n  Press Escape (back to main view)\n  Narration: \"Setting story points, priority, status, and detailed description\"\n\n  Scene 4: Mark Card Complete & Copy Branch Name (90-110s)\n\n  Press 'c' (toggle completion)\n  [Card shows checkmark ✓]\n\n  Press 'j' (move down)\n  Press Enter (open second card)\n  Press 'b' (copy branch name to clipboard)\n  [Shows: \"Copied branch name to clipboard\"]\n\n  Press 'y' (copy card ID)\n  [Shows: \"Copied card ID to clipboard\"]\n\n  Press Escape\n  Narration: \"Marking tasks complete and copying branch names for git workflow\"\n\n  Scene 5: Board Settings with Branch Prefix (110-130s)\n\n  Press '1' (switch to Projects)\n  Press 's' (open board settings)\n  Press 'p' (set branch prefix)\n  Type: \"feat\"\n  Press Enter\n  [Shows: \"Branch prefix set to: feat\"]\n  Press Escape\n  Narration: \"Configuring git branch prefixes for consistent naming\"\n\n  Scene 6: Edit Board Details (130-150s)\n\n  Press 'e' (edit board)\n  [BoardDetail view opens]\n  Press '2' (Description panel)\n  Press 'e'\n  [External editor]\n  Type: \"RESTful API for user management\\n\\nTech Stack:\\n- Rust + Actix-web\\n- PostgreSQL\\n- JWT authentication\"\n  Save & exit\n  Press Escape\n  Narration: \"Adding project documentation\"\n\n  Scene 7: Export Board (150-165s)\n\n  Press 'x' (export current board)\n  Type: \"web-api-project.json\"\n  Press Enter\n  [Shows: \"Board exported successfully\"]\n  Narration: \"Exporting project data to JSON\"\n\n  Scene 8: Complete More Tasks (165-185s)\n\n  Press '2' (Tasks panel)\n  Press 'j' (move down to third card)\n  Press Enter\n  Press '2' (Metadata)\n  Press 'e'\n  Type: \"5\" (5 story points - Red badge for critical)\n  Press Enter\n  Press 's'\n  Type: \"Blocked\"\n  Press Enter\n  Press Escape\n\n  Press 'j' (fourth card)\n  Press 'c' (mark complete)\n  Narration: \"Managing task progress - marking some blocked, others complete\"\n\n  Scene 9: Import Demo (185-205s)\n\n  Press 'i' (import)\n  [File list shows: web-api-project.json, example.json]\n  Press 'j'\n  Press Enter\n  [Shows: \"1 board(s) imported successfully\"]\n  Narration: \"Importing previously exported projects\"\n\n  Scene 10: Final Overview & Quit (205-215s)\n\n  Press '1' (Projects)\n  [Show list of boards]\n  Press '2' (Tasks)\n  [Show cards with different colors for story points, completion marks]\n\n  Press 'q'\n  [Auto-save message]\n  [Exit to shell]\n  Narration: \"All changes are auto-saved on exit\"\n\n  ---\n  Key Features Showcased:\n\n  ✅ Board creation (n)✅ Card creation (n)✅ External editor integration (title & description with e)✅ Story points with color coding\n  (1-5: e in Metadata)✅ Status management (s: Todo/InProgress/Blocked/Done)✅ Priority levels (p: Low/Medium/High/Critical)✅ Task\n  completion (c)✅ Branch name copying (b)✅ Card ID copying (y)✅ Board settings (s)✅ Branch prefix configuration (p)✅ Board details\n  editing (e from Projects)✅ Export single board (x)✅ Import boards (i)✅ Auto-save on quit✅ Panel navigation (1/2/3)✅ Vim-style\n  navigation (j/k)\n\n  Total runtime: ~3:35 minutes\n  ```\n",
          "priority": "Critical",
          "status": "Todo",
          "position": 12,
          "due_date": null,
          "points": 5,
          "card_number": 14,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-11T18:27:29.674825Z",
          "updated_at": "2025-10-14T20:42:41.917758Z",
          "completed_at": null
        },
        {
          "id": "1e257c13-f9ee-40e4-86b5-704a9649ea4e",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Progressive saving / Detect changes to current json",
          "description": "If for whatever reason two instances of Kanban are editing the same JSON.\n\nImplement a procedure to listen for changes \n\nProgressive saving and not all at the end?\n\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 13,
          "due_date": null,
          "points": 3,
          "card_number": 15,
          "sprint_id": "737b04e6-52e2-4a40-bbaa-e2c9bcc84249",
          "created_at": "2025-10-11T18:29:10.434614Z",
          "updated_at": "2025-10-11T22:26:03.008952Z",
          "completed_at": null
        },
        {
          "id": "9273b022-f7f8-4975-b9c5-7a57c55eba30",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "add -v flag",
          "description": "It would be nice to be able to view the version of the program\n\nAlso add the version to the `--help` output\n",
          "priority": "Medium",
          "status": "Done",
          "position": 7,
          "due_date": null,
          "points": 1,
          "card_number": 3,
          "sprint_id": null,
          "created_at": "2025-10-11T18:36:43.972262Z",
          "updated_at": "2025-10-16T21:02:50.357039Z",
          "completed_at": "2025-10-16T21:02:50.357039Z"
        },
        {
          "id": "a189ef1a-903c-4c43-924e-2194562237f6",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "drop the Header in the UI",
          "description": "The \"Kanban Board\" header of the interface can go away.\n",
          "priority": "Medium",
          "status": "Done",
          "position": 8,
          "due_date": null,
          "points": 1,
          "card_number": 16,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-11T18:38:07.855746Z",
          "updated_at": "2025-10-16T22:13:07.759257Z",
          "completed_at": "2025-10-16T21:02:51.185668Z"
        },
        {
          "id": "ed0ead2b-6da9-4889-83b7-e4c60ab11032",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "Give cards ID from the beginning",
          "description": "No need to explicitly generate IDS for cards.\n\nWe just give them IDs immediately\n",
          "priority": "High",
          "status": "Done",
          "position": 9,
          "due_date": null,
          "points": 3,
          "card_number": 17,
          "sprint_id": null,
          "created_at": "2025-10-11T18:39:14.248330Z",
          "updated_at": "2025-10-16T22:12:30.986301Z",
          "completed_at": "2025-10-16T21:02:51.760550Z"
        },
        {
          "id": "1c0b1752-53f1-4240-be75-0706662156df",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "Add sprints",
          "description": "Be able to group cards by sprints. \nSet sprint duration and automatic starting of new sprints\n\nMVP\n\nBoard level settings defines sprint duration.\n\nIf duration is set, sprint init is possible.\n\nAdd Sprint, set start date, assign cards to it.\n\nWhen end date is passed. Start up a new sprint and uncompleted cards over.\n\nSprint will have sprint names the same way tasks do. `prefix-<auto-increment>/sprint-name`\n\nPrefix will be set by sprint settings.\n\nSprint names are derived from user supplied list or explicitly set per sprint (sprint details)\n\nIf a list of sprint names are supplied new sprint will consume each element in order\n\n---\n\nThere should be a UI panel for sprints. On selected Board hit 's' to see sprint details\n\nDiscussion\n---\n\nLooking at this feature comprehensively, here are the potential gaps and clarifications \n  needed:\n\n  🔴 Critical Issues\n\n  1. Keybinding conflict: 's' is already used for board settings. Need a different key for\n  sprint panel (maybe 't' for sPrinTs, or nested under settings?)\n  2. Sprint rollover trigger: When end date passes, what triggers the new sprint creation?\n    - On app startup check?\n    - On any board action?\n    - Background timer (would need tokio task)?\n    - Manual user action only?\n  3. Active sprint ambiguity:\n    - Can only one sprint be \"active\" at a time?\n    - Can you create future sprints in advance?\n    - What's the status model? (Planning, Active, Completed, Cancelled?)\n\n  🟡 Domain Model Gaps\n\n  4. Sprint entity needs:\n  struct Sprint {\n      id: Uuid,\n      board_id: Uuid,\n      sprint_number: u32,\n      name: String,  // format: prefix-<number>/sprint-name\n      start_date: DateTime<Utc>,\n      end_date: DateTime<Utc>,\n      status: SprintStatus,  // Active, Completed, Planned?\n      created_at: DateTime<Utc>,\n      updated_at: DateTime<Utc>,\n  }\n  5. Board additions:\n    - sprint_duration_days: Option<u32>\n    - sprint_prefix: Option<String>\n    - sprint_names: Vec<String>  // consumed in order\n    - next_sprint_number: u32\n    - current_sprint_id: Option<Uuid>  // which sprint is active?\n  6. Card additions:\n    - sprint_id: Option<Uuid>  // which sprint is this card in?\n\n  🟡 Unclear Behaviors\n\n  7. Sprint name list:\n    - Once consumed, is name removed from list or just marked as used?\n    - What happens when list is empty? Fall back to just sprint number?\n    - Can user replenish the list?\n  8. Card assignment:\n    - How do users assign cards to sprints? (UI interaction)\n    - Can cards exist without a sprint (backlog)?\n    - What defines \"uncompleted\" for rollover? (status != Done?)\n  9. Sprint settings UI:\n    - Where do users configure duration, prefix, name list?\n    - Part of board settings menu?\n    - Separate sprint settings panel?\n  10. Sprint completion:\n    - Is there a manual \"complete sprint early\" action?\n    - Or only automatic when end date passes?\n\n  🟢 Architecture Questions\n\n  11. UI Navigation:\n    - Is sprint panel a new Focus mode (like Boards/Cards)?\n    - Or a separate view that replaces card list?\n    - How to switch between sprint view and card view?\n  12. Sprint panel content:\n    - List all sprints for board?\n    - Show only current/active sprint?\n    - Show sprint stats (cards total, completed, remaining)?\n    - Burndown visualization?\n  13. Card filtering:\n    - Should main card list optionally filter by sprint?\n    - Show sprint name/info on cards in list?\n    - Visual indication of which cards are in which sprint?\n  14. Time zone handling:\n    - All dates in UTC internally?\n    - Display in local time?\n    - Sprint rollover happens at midnight in which timezone?\n\n  📋 Implementation Order Concerns\n\n  15. Data migration:\n    - Existing boards need default values for new sprint fields\n    - Existing cards get sprint_id: None (backlog)\n  16. MVP boundaries:\n    - MVP: Basic CRUD for sprints, card assignment, viewing\n    - Future: Burndown, velocity, sprint reports, analytics\n    - Which features are MVP vs future?\n\n  ❓ Questions for You\n\n  Before I can plan implementation:\n\n  1. Keybinding: What key should open sprint panel? (s is taken)\n  2. Rollover: Manual or automatic? If automatic, when checked?\n  3. Sprint status: Can multiple sprints exist? What are the states?\n  4. Card backlog: Can cards exist without sprint assignment?\n  5. MVP scope: Sprint stats/burndown in MVP or future?\n  6. Sprint panel: Separate focus mode or replaces card list?\n\n  Should I proceed with assumptions and note them in the plan, or do you want to clarify these\n  first?\n\n> 1. We move board settings into the edit project ui. \n> 2. alert the user on app start up with a dialogue that start new sprint (y/n). \n> 3. multiple sprints should be allowed in parallel to allow for focused work on distinct parts of a project. yes we want to be able to plan sprints. picking tasks from the card list. The card list will be filtered to the active sprint. Planning, Active, Completed, Cancelled - yes. \n> 6. I wonder if we would need the bi directional relationship between sprint and cards? \n> 7. marked as used. for now. no list leaves the user to have to manually input a name. until a name is available the sprint name is `prefix+<auto-increment>` when a name is available it is like specified before. Yes the users supplies the list and it can be topped off whenever. \n> 8. When a sprint is initially created it is marked as in planning. then we in the sprint details interface can choose from a list of non completed tasks to include in the sprint. Yes cards can exist without a sprint as the plain list they are currently. uncompleted is only if the user makes the explicit choice not to start a new sprint after the rollover date. in such case manual creation of the subsequent sprint must occur. The user defines uncompleted. \n> 9 having a board selected. we press e to open edit project. in there we will have moved the current s, project settings. in the project settings panel we configure. duration, name list and prefix. We will replace the s with sprint details where the sprint itself can provide per sprint overrides for name list and prefix but not duration. Yes there is manual complete action. in the sprint details UI. \n> 11. The cards for the sprint can be toggled to replace the task list. for now we will use the key `t` to toggle between active sprint and the main card list. \n> 12. Tasks list will be toggled to show sprint tasks or not. Sprint details ui will handle all the rest. show list of sprints, select active sprint. stats and burndown we leave for the next iteration. \n> 12 For now, if sprint tasks are toggled just show sprint name next to the Tasks header, like Tasks - <sprint-name>. in unfiltered task list show the sprint name next to the task name, greyed out. \n> 14. All dates are in UTC internally. Display in local time. rollover in UTC. \n> 15. Yes.\n> 16. MVP: Basic CRUD for sprints, card assignment, viewing and all specified. think hard and keep planning with me\n\n---\n\nExcellent clarifications! Let me think through the complete user flows and identify remaining\n  questions:\n\n  🤔 Critical Flows to Clarify\n\n  Flow 1: Sprint Lifecycle Timing\n\n  User creates sprint:\n  - Status starts as Planning\n  - Start date: set at creation OR when activating (Planning → Active)?\n  - End date: calculated when? (start_date + duration)\n\n  My assumption: Start date set when activating, not at creation. Makes sense for planning\n  sprints in advance.\n\n  Flow 2: Active Sprint Semantics\n\n  You said \"multiple sprints allowed in parallel\" but also mentioned active_sprint_id\n  (singular). I think I understand now:\n  - Multiple sprints can have status Active (parallel work streams)\n  - But ONE sprint is \"selected active\" for filtering with t key\n  - active_sprint_id = currently selected sprint for filtering\n  - Need action to \"switch active sprint\" in sprint details UI\n\n  Confirm?\n\n  Flow 3: Sprint Rollover Details\n\n  On startup dialog: \"Sprint X ended. Start new sprint? (y/n)\"\n  - If YES: Create new sprint with status Active (not Planning), auto-rollover cards where\n  status != Done\n  - If NO: Those cards stay in ended sprint, user must manually move later\n\n  But: Multiple ended sprints? Show one dialog per sprint sequentially? Or one dialog listing\n  all?\n\n  Flow 4: Sprint Name Consumption\n\n  Sprint name list = [\"Cobra Kai\", \"Miyagi-Do\", \"Eagle Fang\"]\n  - Track usage with sprint_name_used_count: usize\n  - When creating sprint: consume next name from list\n  - If sprint_name_used_count >= sprint_names.len(): no name available, user must manually name\n  OR fallback to prefix-<number>\n\n  Question: Can user explicitly override auto-name even when names available?\n\n  Flow 5: Sprint Details UI Structure\n\n  Press s → SprintDetails mode:\n  ┌─ Sprint Details ───────────────────────┐\n  │ > sprint-1/Cobra Kai      [Active]     │\n  │   sprint-2/Miyagi-Do      [Planning]   │\n  │   sprint-3                [Completed]  │\n  └────────────────────────────────────────┘\n\n  Press Enter on selected sprint → SprintDetail mode:\n  ┌─ Sprint: sprint-1/Cobra Kai ───────────┐\n  │ Status: Active                         │\n  │ Dates: 2025-10-12 → 2025-10-26         │\n  │                                        │\n  │ Cards (3):                             │\n  │   ☐ Implement search                   │\n  │   ☐ Add vim motions                    │\n  │   ☑ Fix ordering bug                   │\n  │                                        │\n  │ Actions:                               │\n  │ e: edit name | c: complete | x: cancel │\n  │ a: add cards | r: remove cards         │\n  │ s: set as active | ESC: back           │\n  └────────────────────────────────────────┘\n\n  Questions:\n  - Add cards (a): show list of all unassigned cards, select with j/k/space?\n  - Remove cards (r): show cards in sprint, select to remove?\n  - Set as active (s): updates active_sprint_id, affects t toggle?\n\n  Flow 6: Board Settings Panel\n\n  Edit project (e) → navigate to panel 3 (settings):\n  ┌─ Project Settings [3] ─────────────────┐\n  │ Branch Prefix: task-                   │\n  │                                        │\n  │ Sprint Duration: 14 days               │\n  │ Sprint Prefix: sprint                  │\n  │                                        │\n  │ Sprint Names:                          │\n  │ > Cobra Kai                            │\n  │   Miyagi-Do                            │\n  │   Eagle Fang                           │\n  │                                        │\n  │ n: add name | d: delete name           │\n  │ e: edit field                          │\n  └────────────────────────────────────────┘\n\n  For MVP: Keep sprint names simple:\n  - Store as Vec<String>\n  - Edit via external JSON? OR\n  - Simple dialog: \"Add sprint name:\" (one at a time)\n  - Delete selected name with d\n\n  My suggestion: For MVP, manually edit JSON. Add TUI editor in next iteration.\n\n  Flow 7: Card List Filtering\n\n  Unfiltered (default):\n  Tasks\n    ☐ Fix ordering bug (sprint-1)\n    ☐ Add search (sprint-2)\n    ☐ Implement vim motions\n\n  Filtered to active sprint (t pressed, active = sprint-1):\n  Tasks - sprint-1/Cobra Kai\n    ☐ Fix ordering bug\n    ☐ Add another task\n\n  Question: Toggle state per board or global? Probably per board.\n\n  Flow 8: Manual Sprint Completion\n\n  In SprintDetail mode, press c:\n  ┌─ Complete Sprint: sprint-1 ────────────┐\n  │ Select cards to rollover (incomplete): │\n  │                                        │\n  │ ☑ Fix ordering bug                     │\n  │ ☑ Implement search                     │\n  │ ☐ Add vim motions (Done)               │\n  │                                        │\n  │ Space: toggle | ENTER: complete        │\n  └────────────────────────────────────────┘\n\n  Selected cards → stay in this sprint or move to new sprint?\n\n  My assumption:\n  - Cards NOT selected = considered complete (status updated to Done automatically?)\n  - Cards selected = stay in completed sprint, user manually moves later OR\n  - Cards selected = auto-move to active sprint?\n\n  Need clarification here.\n\n  📐 Proposed Domain Model\n\n  #[derive(Debug, Clone, Copy, PartialEq, Eq, Serialize, Deserialize)]\n  pub enum SprintStatus {\n      Planning,\n      Active,\n      Completed,\n      Cancelled,\n  }\n\n  pub struct Sprint {\n      pub id: Uuid,\n      pub board_id: Uuid,\n      pub sprint_number: u32,\n      pub name: Option<String>,\n      pub prefix_override: Option<String>,\n      pub status: SprintStatus,\n      pub start_date: Option<DateTime<Utc>>,\n      pub end_date: Option<DateTime<Utc>>,\n      pub created_at: DateTime<Utc>,\n      pub updated_at: DateTime<Utc>,\n  }\n\n  // Board additions\n  pub sprint_duration_days: Option<u32>,\n  pub sprint_prefix: Option<String>,\n  pub sprint_names: Vec<String>,\n  pub sprint_name_used_count: usize,\n  pub next_sprint_number: u32,\n  pub active_sprint_id: Option<Uuid>,\n\n  // Card addition\n  pub sprint_id: Option<Uuid>,\n\n  🏗️ Implementation Phases\n\n  Phase 1: Board Settings Migration (smaller scope)\n\n  1. Add Settings panel to BoardFocus (1/2/3 navigation)\n  2. Move branch prefix setting to settings panel\n  3. Add sprint fields to Board domain\n  4. UI for editing sprint duration, prefix\n  5. Sprint names: JSON-only for MVP\n\n  Phase 2: Sprint Domain & Basic CRUD\n\n  1. Add Sprint struct, SprintStatus enum\n  2. Add sprints to App state\n  3. Add sprint_id to Card\n  4. Create sprint action (from SprintDetails UI)\n  5. List sprints (SprintDetails mode, press s)\n  6. View sprint (SprintDetail mode, Enter on sprint)\n  7. Edit sprint name (dialog)\n  8. Delete/cancel sprint\n\n  Phase 3: Card Assignment\n\n  1. Add cards to sprint (UI with card selection)\n  2. Remove cards from sprint\n  3. View cards in sprint detail\n  4. Show sprint name next to cards in main list\n\n  Phase 4: Sprint Activation & Toggle\n\n  1. Activate sprint (Planning → Active, set start/end dates)\n  2. Set active sprint (for filtering)\n  3. Toggle card filtering with t\n  4. Update card list rendering (filtered vs all)\n  5. Update header (show sprint name when filtered)\n\n  Phase 5: Sprint Lifecycle & Rollover\n\n  1. Check ended sprints on startup\n  2. Dialog per ended sprint\n  3. Auto-create new sprint with rollover\n  4. Manual complete sprint action\n  5. Choose cards to rollover in completion UI\n\n  ❓ Questions Before Final Plan\n\n  1. Start date: Set at creation or activation? (I assume activation)\n  2. Active sprint: One \"active\" per board for filtering, but multiple can have Active status?\n  3. Multiple ended sprints: One dialog each, shown sequentially?\n  4. Name consumption: Auto-consume next name, but allow manual override?\n  5. Sprint completion: What happens to cards user selects as \"incomplete\"? Stay in sprint? Move\n   to active sprint? User moves manually later?\n  6. Sprint names list: JSON editing only for MVP, or simple add/delete UI?\n\n  Please clarify these and I'll present the final implementation plan!\n\n  ---\nSprint Management Implementation Plan\n\nOverview\n\nAdd sprint functionality to kanban with MVP features: sprint CRUD, card assignment,\nfiltering, lifecycle management, and automatic rollover.\n\nPhase 1: Domain Model & Board Settings\n\nGoal: Add sprint data structures and move settings to Edit Project UI\n\n1.1 Domain Model\n\n- Add Sprint struct to kanban-domain/src/sprint.rs:\npub struct Sprint {\n    pub id: Uuid,\n    pub board_id: Uuid,\n    pub sprint_number: u32,\n    pub name: Option<String>,\n    pub prefix_override: Option<String>,\n    pub status: SprintStatus,\n    pub start_date: Option<DateTime<Utc>>,\n    pub end_date: Option<DateTime<Utc>>,\n    pub created_at: DateTime<Utc>,\n    pub updated_at: DateTime<Utc>,\n}\n- Add SprintStatus enum: Planning, Active, Completed, Cancelled\n- Export from kanban-domain/src/lib.rs\n\n1.2 Update Board Model\n\nAdd to Board struct:\n- sprint_duration_days: Option<u32>\n- sprint_prefix: Option<String>\n- sprint_names: Vec<String>\n- sprint_name_used_count: usize\n- next_sprint_number: u32\n- active_sprint_id: Option<Uuid>\n\nAdd serde defaults for deserialization.\n\n1.3 Update Card Model\n\nAdd to Card: sprint_id: Option<Uuid>\n\n1.4 Restructure Board Settings UI\n\n- Change BoardFocus enum: Name, Description, Settings\n- Move from BoardSettings mode → third panel in BoardDetail mode\n- Press 3 to navigate to settings panel\n- Move branch prefix setting to this panel\n- Add sprint duration, sprint prefix fields (editable with e)\n- Sprint names: JSON-only for MVP\n\n1.5 Remove Old Board Settings\n\n- Remove AppMode::BoardSettings\n- Remove AppMode::SetBranchPrefix\n- Consolidate into BoardDetail with 3 panels\n\nPhase 2: Sprint CRUD\n\nGoal: Create, list, view, edit, delete sprints\n\n2.1 App State\n\nAdd to App:\n- sprints: Vec<Sprint>\n- sprint_selection: SelectionState\n- active_sprint_index: Option<usize>\n- show_sprint_cards_only: bool (toggle state per board)\n\n2.2 App Modes\n\nAdd:\n- AppMode::SprintList (press s in normal mode, board selected)\n- AppMode::SprintDetail (Enter on sprint in list)\n- AppMode::CreateSprint (press n in SprintList)\n- AppMode::EditSprintName (press e in SprintDetail)\n\n2.3 Sprint List UI (s key)\n\n- Render list of sprints for active board\n- Show: sprint_number/name [Status]\n- j/k navigation, Enter to open detail\n- n: create new sprint (Planning status)\n- ESC: back to normal\n\n2.4 Sprint Detail UI (Enter on sprint)\n\n- Show sprint name, status, dates, card count\n- Actions:\n  - e: edit name (dialog)\n  - a: activate (Planning → Active, set dates)\n  - c: complete sprint\n  - x: cancel sprint\n  - d: delete sprint (only if Planning)\n  - s: set as active sprint (for filtering)\n  - +: add cards\n  - -: remove cards\n  - ESC: back to sprint list\n\n2.5 Create Sprint\n\n- Status: Planning\n- Name: auto-consume from sprint_names[sprint_name_used_count] if available\n- If no names: fallback to {prefix}-{sprint_number}\n- Increment next_sprint_number and sprint_name_used_count\n\nPhase 3: Card Assignment\n\nGoal: Assign cards to sprints\n\n3.1 Add Cards to Sprint (+ in SprintDetail)\n\n- Show list of cards where sprint_id == None\n- j/k navigation, Space to multi-select\n- Enter: assign selected cards to current sprint\n- Update card sprint_id and updated_at\n\n3.2 Remove Cards from Sprint (- in SprintDetail)\n\n- Show cards in current sprint\n- j/k navigation, Space to multi-select\n- Enter: unassign (set sprint_id = None)\n\n3.3 Display Cards in Sprint Detail\n\n- In SprintDetail view, show list of cards\n- Format: ☐ Card title [points]\n\nPhase 4: Card Filtering & Display\n\nGoal: Toggle between all cards and active sprint cards\n\n4.1 Toggle Filtering (t key in Normal mode)\n\n- Toggle show_sprint_cards_only boolean\n- Only when active board and active_sprint_id is set\n- Persist toggle state per board (store in Board? or App state?)\n\n4.2 Update Card List Rendering\n\n- When filtered: get_sorted_board_cards() filters by card.sprint_id == active_sprint_id\n- When unfiltered: show all cards\n\n4.3 Update Header\n\n- Filtered: \"Tasks - {sprint_name}\"                    \n- Unfiltered: \"Tasks\"\n\n4.4 Show Sprint Name on Cards (unfiltered view)        \n\n- When sprint_id.is_some(), append sprint name in gray \n- Format: ☐ Card title (sprint-1/Cobra Kai)            \n\nPhase 5: Sprint Lifecycle & Rollover                   \n\nGoal: Activate, complete, automatic rollover           \n\n5.1 Activate Sprint (a in SprintDetail, status = Planning)\n\n- Change status: Planning → Active\n- Set start_date = Utc::now()\n- Calculate end_date = start_date + sprint_duration_days\n- Only ONE sprint can be Active at a time (check and prevent if another active exists)\n\n5.2 Startup Check for Ended Sprints\n\n- On app start, find sprints where status == Active && end_date < Utc::now()\n- If any found, show dialog:\n┌─ Sprints Ended ────────────────┐\n│ ☑ sprint-1/Cobra Kai           │\n│ ☑ sprint-2/Miyagi-Do           │\n│                                │\n│ Start new sprints? (y/n)       │\n└────────────────────────────────┘\n- j/k navigation, Space to toggle checkboxes\n- y/Enter: create new sprints for selected\n- n/ESC: no action, user handles manually later\n\n5.3 Automatic Rollover (if \"yes\" to dialog)\n\n- For each selected sprint:\n  - Mark as Completed\n  - Get cards where sprint_id == ended_sprint.id && status != Done\n  - Create new sprint (status = Active, auto-name)\n  - Move incomplete cards to new sprint\n  - Set new sprint dates\n\n5.4 Manual Complete Sprint (c in SprintDetail)\n\n- Show list of cards in sprint with status != Done\n- Checkboxes for each card (default: all selected)\n- Space: toggle, Enter: complete\n- Selected cards: move to next Active sprint (or create new if none)\n- Unselected cards: stay in sprint, user moves manually later\n- Mark sprint as Completed\n\nPhase 6: Polish & Integration\n\nGoal: Help text, validation, error handling\n\n6.1 Help Text Updates\n\n- Add help for all new modes\n- Update keybindings in footer\n\n6.2 Validation\n\n- Prevent activating sprint if duration not set\n- Prevent multiple Active sprints\n- Validate dates\n\n6.3 Auto-save\n\n- Sprints auto-save to JSON along with boards/cards\n\nImplementation Order\n\n1. Phase 1 (domain + settings UI migration)\n2. Phase 2 (sprint CRUD, basic UI)\n3. Phase 3 (card assignment)\n4. Phase 4 (filtering, display)\n5. Phase 5 (lifecycle, rollover)\n6. Phase 6 (polish)\n\nKey Decisions Confirmed\n\n- ✅ One Active sprint at a time (for filtering)\n- ✅ Start dates set on activation, not creation\n- ✅ Sprint name auto-consumed from list, manual override possible\n- ✅ Rollover dialog shows all ended sprints with checkboxes\n- ✅ Manual completion: selected cards move to next sprint\n- ✅ Sprint names list: JSON editing for MVP\n- ✅ Settings moved to Edit Project UI panel 3\n\n2025-10-12 14:58\n---\n\nWe are starting a new section of this on a new day\n\nWhat I feel is missing at this point is a nice way to assign tasks to a sprint.\n\nI want to be able in the task list to select multiple tasks and then assign them to a sprint\n",
          "priority": "Medium",
          "status": "Done",
          "position": 10,
          "due_date": null,
          "points": 4,
          "card_number": 18,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-11T18:42:39.943129Z",
          "updated_at": "2025-10-16T21:02:52.370276Z",
          "completed_at": "2025-10-16T21:02:52.370276Z"
        },
        {
          "id": "f4c31d5d-7f78-451c-b7db-f26e4931fae4",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "Link to pull request",
          "description": "If a pull request is open for a card. Open a link to that pull\n\nshow if a card has a pull request open (or in draft in the task list)\n\nExamples\n\nPR opem\n```\nA task name - [PR] (green)\n```\n\nDraft\n```\nA task name - [PR] (greyed out)\n```\n---\n\nI am getting the feeling that this would depend on having configuration for collaborative version control per board\n\n",
          "priority": "Medium",
          "status": "Done",
          "position": 11,
          "due_date": null,
          "points": 3,
          "card_number": 19,
          "sprint_id": null,
          "created_at": "2025-10-11T18:45:47.488818Z",
          "updated_at": "2025-10-16T21:02:53.000521Z",
          "completed_at": "2025-10-16T21:02:53.000521Z"
        },
        {
          "id": "8ecc1849-bde7-4f97-99f7-44b7d9158bbf",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Remove a card",
          "description": "Be able to drop a card \n",
          "priority": "Low",
          "status": "Todo",
          "position": 19,
          "due_date": null,
          "points": 2,
          "card_number": 20,
          "sprint_id": "737b04e6-52e2-4a40-bbaa-e2c9bcc84249",
          "created_at": "2025-10-11T19:23:32.612472Z",
          "updated_at": "2025-10-20T15:49:10.460375Z",
          "completed_at": null
        },
        {
          "id": "6c1e0ca7-22bb-49e5-86bc-8d1e2a55c9ee",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "Archive a card",
          "description": "Be able to archive a card.\n",
          "priority": "Low",
          "status": "Done",
          "position": 21,
          "due_date": null,
          "points": 2,
          "card_number": 21,
          "sprint_id": "737b04e6-52e2-4a40-bbaa-e2c9bcc84249",
          "created_at": "2025-10-11T19:25:07.465576Z",
          "updated_at": "2025-10-17T06:21:18.677707Z",
          "completed_at": "2025-10-17T06:21:18.677703Z"
        },
        {
          "id": "27717d15-3e41-4558-8e6b-3bbdc7fe3762",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "Hitting e on an item in the task list should open $EDITOR with that tasks description",
          "description": "It would feel natural to me if the card description was opened when hitting the e button on an element in the cards list\n",
          "priority": "Medium",
          "status": "Done",
          "position": 22,
          "due_date": null,
          "points": 3,
          "card_number": 22,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-11T19:50:58.400403Z",
          "updated_at": "2025-10-17T06:21:22.542389Z",
          "completed_at": "2025-10-17T06:21:22.542373Z"
        },
        {
          "id": "76411161-8bcf-47a3-b917-cadc706c6079",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "When inputting in the dialogues. Text is cut when going out of bounds for the iput box",
          "description": null,
          "priority": "Low",
          "status": "Done",
          "position": 23,
          "due_date": null,
          "points": 3,
          "card_number": 23,
          "sprint_id": "737b04e6-52e2-4a40-bbaa-e2c9bcc84249",
          "created_at": "2025-10-11T19:51:35.009507Z",
          "updated_at": "2025-10-17T06:21:24.897772Z",
          "completed_at": "2025-10-17T06:21:24.897757Z"
        },
        {
          "id": "1c2f3096-823b-4eb7-9345-b80a4c5d8693",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "Add github ci",
          "description": "In the stash somewhere there is a draft of CI\n\nWe have partly done this. Now to expand on what else needs to be done\n\n- [x] publish to crates.io on merge to master\n\nIssue\n---\n\nIt doesnt work to post minor. prob not major either. But patch works!\n\n### Error\n\n```sh\nbuilding '/nix/store/m7ja8jdxv0pnl6i7x6ybfb60abq6jsdx-bump-version.drv'...\nBumping version: 0.1.2 → 0.2.0 (type: minor)\n    Updating crates.io index\nerror: failed to select a version for the requirement `kanban-core = \"^0.1.0\"`\ncandidate versions found which didn't match: 0.2.0\nlocation searched: /home/runner/work/kanban/kanban/crates/kanban-core\nrequired by package `kanban-domain v0.2.0 (/home/runner/work/kanban/kanban/crates/kanban-domain)`\nError: Process completed with exit code 101.\n```\n\n2025-10-15 21:11:16\n---\n\nThere is also the question of wether my versioning is skipping to much. Maybe I should switch to the release branch model where releases are progressively built from feature branches accumulated during the spring\n\nIt doesnt feel so natural to bump the version for every feature branch. I wonder what would be the best strategy..\n",
          "priority": "Medium",
          "status": "Done",
          "position": 24,
          "due_date": null,
          "points": 4,
          "card_number": 24,
          "sprint_id": null,
          "created_at": "2025-10-11T20:30:09.214394Z",
          "updated_at": "2025-10-17T06:21:26.408217Z",
          "completed_at": "2025-10-17T06:21:26.408214Z"
        },
        {
          "id": "e3482cf7-c53a-4ce8-8c33-11e2cca3d87a",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "Add completed when time to task",
          "description": "Add the date and time for when a task was marked as completed\n",
          "priority": "Medium",
          "status": "Done",
          "position": 12,
          "due_date": null,
          "points": 1,
          "card_number": 25,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-11T20:53:06.269232Z",
          "updated_at": "2025-10-17T06:21:36.538347Z",
          "completed_at": "2025-10-16T21:02:54.150999Z"
        },
        {
          "id": "5e247e41-efdf-43cc-aa0f-daf25830fd1c",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "When titles are too long. they don't fit the tasks list",
          "description": "So for now we just cut them with ... at the in before they hit the wall\n",
          "priority": "Low",
          "status": "Todo",
          "position": 25,
          "due_date": null,
          "points": 2,
          "card_number": 26,
          "sprint_id": "737b04e6-52e2-4a40-bbaa-e2c9bcc84249",
          "created_at": "2025-10-11T20:54:41.898524Z",
          "updated_at": "2025-10-14T20:43:35.410628Z",
          "completed_at": null
        },
        {
          "id": "4cdf603d-2ba8-4bc0-9c19-a2a4531ccff6",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "Refactor, hunt for abstractions",
          "description": "Identify patterns of repetition in the code\n\nPhase 1: Refactoring Plan: Extract Reusable Components\n---\n\nCritical Issues Identified\n\n1. app.rs (1,818 lines) - BLOATED\n\n- Giant handle_key_event method (876 lines!)\n- 20x repetitions of board access pattern\n- 16x duplicate dialog handling\n- Export logic duplicated 3 times\n- Card filtering duplicated throughout\n\n2. ui.rs (1,227 lines) - MASSIVE DUPLICATION\n\n- 14 similar popup render functions\n- 97x Style::default() calls (no theming)\n- 18x Block::default() (no builder pattern)\n- Repetitive list/selection rendering\n\n---\nRefactoring Strategy (8 Phases)\n\nPhase 1: Extract Event Handlers (~600 lines → 8 files)\n\nCreate crates/kanban-tui/src/handlers/:\n- mod.rs - Re-exports\n- board_handlers.rs - Board-related keys (create/rename/edit/export)\n- card_handlers.rs - Card keys (create/toggle/assign/priority)\n- sprint_handlers.rs - Sprint keys (create/activate/complete)\n- navigation_handlers.rs - Movement (j/k/1/2/Enter/Esc)\n- dialog_handlers.rs - All dialog input modes\n- popup_handlers.rs - Import/order/assign selection\n\nPhase 2: Extract Business Logic Helpers (~150 lines)\n\nCreate crates/kanban-tui/src/helpers/:\n- board_helpers.rs - get_active_board(), get_board_cards(), etc.\n- card_helpers.rs - get_sorted_cards(), filter_cards(), etc.\n- sprint_helpers.rs - get_board_sprints(), etc.\n\nPhase 3: Extract Export/Import Logic (~300 lines)\n\nCreate crates/kanban-tui/src/export/:\n- serialization.rs - BoardExport, AllBoardsExport structs\n- export.rs - Export functions\n- import.rs - Import functions\n\nPhase 4: Extract Styling System (~200 lines)\n\nCreate crates/kanban-tui/src/theme/:\n- colors.rs - Color constants (focused, selected, status colors)\n- styles.rs - Pre-built styles (focused_border, selected_item, etc.)\n- builders.rs - BlockBuilder, ListItemBuilder\n\nPhase 5: Extract UI Components (~400 lines)\n\nCreate crates/kanban-tui/src/components/:\n- popup.rs - Generic popup rendering (DRY up 14 functions)\n- list.rs - Generic list rendering with selection\n- detail_view.rs - Detail view patterns\n- input_field.rs - Input field widget\n\nPhase 6: Extract String Utilities (~100 lines)\n\nCreate crates/kanban-core/src/utils/:\n- string.rs - to_kebab_case, truncate, validation\n\nPhase 7: Extract Command Pattern (~200 lines)\n\nCreate crates/kanban-tui/src/commands/:\n- mod.rs - Command trait\n- board_commands.rs - CreateBoard, RenameBoard, etc.\n- card_commands.rs - CreateCard, ToggleCard, etc.\n\nPhase 8: Refactor Main Files\n\n- app.rs: 1818 → ~600 lines\n- ui.rs: 1227 → ~400 lines\n- card.rs: 309 → ~200 lines\n\n---\nExpected Results\n\n- ~2,000 lines extracted into 25+ focused modules\n- Each module < 150 lines\n- Eliminate 80% of code duplication\n- Cleaner separation of concerns\n- Easier testing and maintenance\n\nPhase 2: Extract Business Logic & Apply SOLID Principles\n---\n\nCurrent Problems\n\napp.rs (866 lines) has mixed concerns:\n- UI state management (TUI-specific)\n- Business logic (filtering, sorting, queries)\n- Export/import serialization (duplicated 3x)\n- No separation = can't reuse in CLI/API\n\nSOLID Analysis\n\nViolations Found:\n\n1. SRP: app.rs does UI state + business logic + persistence\n2. OCP: Hard to extend filtering/sorting without modifying code\n3. DIP: App depends on concrete implementations, not abstractions\n4. ISP: No focused interfaces for different operations\n\nArchitecture Plan\n\nNew Module Structure\n\ncrates/kanban-tui/src/\n├── services/\n│   ├── mod.rs\n│   ├── query.rs          - Read-only queries (boards, cards, sprints)\n│   ├── filter.rs         - Card filtering logic (sprint, assignment)\n│   ├── sort.rs           - Card sorting logic (priority, points, date)\n│   └── validation.rs     - Business rule validation\n├── export/\n│   ├── mod.rs\n│   ├── models.rs         - Serialization DTOs (BoardExport, etc.)\n│   ├── exporter.rs       - Export to JSON\n│   └── importer.rs       - Import from JSON\n├── app.rs                - UI state ONLY (selection, focus, mode)\n└── handlers/             - Event handlers (✅ done in Phase 1)                                                                                                                                      │\n\nPotential New Crate (Future):\n\ncrates/kanban-service/    - Shared business logic for all interfaces\n├── query_service.rs      - Cross-entity queries\n├── command_service.rs    - CRUD operations\n└── validation.rs         - Domain validation rules\n\nSOLID Principles Applied\n\n1. Single Responsibility Principle (SRP)\n\nBefore:\nimpl App {\n    // UI state\n    pub board_selection: SelectionState\n\n    // Business logic\n    pub fn get_sorted_board_cards() { ... }\n\n    // Export logic\n    pub fn export_board_with_filename() { ... }\n}\n\nAfter:\n// UI state only\nimpl App {\n    pub board_selection: SelectionState\n}\n\n// Business logic service\npub struct CardQuery<'a> {\n    cards: &'a [Card],\n    columns: &'a [Column],\n}\n\n// Export service\npub struct BoardExporter { ... }\n\n2. Open/Closed Principle (OCP)\n\nExtensible filtering without modifying existing code:\n\npub trait CardFilter {\n    fn matches(&self, card: &Card) -> bool;\n}\n\npub struct SprintFilter { sprint_id: Uuid }\npub struct AssignmentFilter { hide_assigned: bool }\npub struct CompositeFilter { filters: Vec<Box<dyn CardFilter>> }\n\n3. Liskov Substitution Principle (LSP)\n\nConsistent query interfaces:\n\npub trait Query<T> {\n    fn find_by_id(&self, id: Uuid) -> Option<&T>;\n    fn find_all(&self) -> Vec<&T>;\n}\n\nimpl Query<Board> for BoardQuery<'_> { ... }\nimpl Query<Card> for CardQuery<'_> { ... }\n\n4. Interface Segregation Principle (ISP)\n\nSmall, focused traits:\n\npub trait CardReader {\n    fn get_board_cards(&self, board_id: Uuid) -> Vec<&Card>;\n}\n\npub trait CardSorter {\n    fn sort_cards(&self, cards: &mut [&Card]);\n}\n\n// Not one giant \"CardService\" with 20 methods\n\n5. Dependency Inversion Principle (DIP)\n\nDepend on abstractions:\n\n// High-level App depends on trait\nimpl App {\n    fn render_cards(&self, query: &impl CardReader) {\n        let cards = query.get_board_cards(board_id);\n    }\n}\n\n// Low-level implementation\npub struct CardQuery<'a> { ... }\nimpl CardReader for CardQuery<'_> { ... }\n\nImplementation Steps\n\nStep 1: Extract Query Service (~200 lines)\n\n- services/query.rs\n- CardQuery, BoardQuery, SprintQuery\n- Pure read operations, no mutations\n- Reusable across TUI/CLI/API\n\nStep 2: Extract Filter Service (~150 lines)\n\n- services/filter.rs\n- CardFilter trait\n- SprintFilter, AssignmentFilter, CompositeFilter\n- Composable, testable filters\n\nStep 3: Extract Sort Service (~100 lines)\n\n- services/sort.rs\n- CardSorter trait\n- Implementations for each SortField\n- Strategy pattern for sorting\n\nStep 4: Extract Export/Import (~300 lines)\n\n- export/models.rs - DTOs\n- export/exporter.rs - Serialization\n- export/importer.rs - Deserialization\n- Eliminate 3x duplication\n\nStep 5: Refactor app.rs (~200 line reduction)\n\n- Keep only UI state\n- Delegate to services\n- app.rs: 866 → ~650 lines\n\nBenefits\n\nReusability\n\n✅ CLI can use same services without TUI dependency                                                                                                                                                  │\n✅ Future API can use same business logic                                                                                                                                                            │\n✅ Services testable in isolation                                                                                                                                                                    │\n\nMaintainability\n\n✅ Clear boundaries between layers                                                                                                                                                                   │\n✅ Easy to find and modify business rules                                                                                                                                                            │\n✅ No duplication (DRY)                                                                                                                                                                              │\n\nExtensibility\n\n✅ Add new filters without touching existing code                                                                                                                                                    │\n✅ Add new sort strategies easily                                                                                                                                                                    │\n✅ Plug in different export formats                                                                                                                                                                  │\n\nTest Strategy\n\nEach service gets unit tests:\n#[test]\nfn test_sprint_filter() {\n    let filter = SprintFilter::new(sprint_id);\n    assert!(filter.matches(&card_in_sprint));\n    assert!(!filter.matches(&card_not_in_sprint));\n}\n\nMigration Path\n\n1. Extract services (new code, no breaking changes)\n2. Update app.rs to use services\n3. Remove old inline implementations\n4. Run tests at each step\n5. Commit atomically (9-12 focused commits)\n\n---\nTotal Reduction: ~400 lines extracted + 200 lines eliminated\nResult: app.rs 866 → ~650 lines, business logic reusable\n\nPhase 2 completed\n---\n\nWe are looking good in the progress of this refactoring.\n",
          "priority": "Medium",
          "status": "Done",
          "position": 13,
          "due_date": null,
          "points": 4,
          "card_number": 27,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-11T21:42:14.741535Z",
          "updated_at": "2025-10-16T21:02:54.835376Z",
          "completed_at": "2025-10-16T21:02:54.835376Z"
        },
        {
          "id": "ed48cbd0-7488-4b61-afe5-71851ed565c0",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "When setting the priority, the card details are closed and the lists are shown",
          "description": "This is apparently wrong\n\nWould like to keep the card details in the background\n\nThe same also goes for changing the points. So hitting `p` or `e` on the second (`2`) panel in card details\n",
          "priority": "Low",
          "status": "Todo",
          "position": 27,
          "due_date": null,
          "points": 4,
          "card_number": 28,
          "sprint_id": null,
          "created_at": "2025-10-11T21:43:08.519830Z",
          "updated_at": "2025-10-14T20:45:09.710385Z",
          "completed_at": null
        },
        {
          "id": "00a80b5e-f7c8-47e7-ba51-312a16a1618e",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Search in cards list",
          "description": "Mvp, use `/` to search\nsearch by title\nsearch by branch name\n\nLater for boards list also\n\n",
          "priority": "Critical",
          "status": "Todo",
          "position": 31,
          "due_date": null,
          "points": 4,
          "card_number": 29,
          "sprint_id": "737b04e6-52e2-4a40-bbaa-e2c9bcc84249",
          "created_at": "2025-10-11T21:45:54.321945Z",
          "updated_at": "2025-10-21T21:20:26.310248Z",
          "completed_at": null
        },
        {
          "id": "72ffc5f8-df27-4dd5-bc13-36e5c105f367",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Vim Motions",
          "description": null,
          "priority": "Medium",
          "status": "Todo",
          "position": 29,
          "due_date": null,
          "points": 2,
          "card_number": 30,
          "sprint_id": null,
          "created_at": "2025-10-11T21:56:16.454189Z",
          "updated_at": "2025-10-11T22:25:21.168733Z",
          "completed_at": null
        },
        {
          "id": "6f66b041-2592-4e78-b348-cbc34c00c548",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "Update status of a card - Board Columns",
          "description": "Specifically needed. in progress\n\nWe want to start working on board columns\n\nDupe of task `KAN-7/add-column-definitions`\n",
          "priority": "Medium",
          "status": "Done",
          "position": 14,
          "due_date": null,
          "points": 5,
          "card_number": 31,
          "sprint_id": null,
          "created_at": "2025-10-12T00:14:17.034422Z",
          "updated_at": "2025-10-16T21:02:55.771078Z",
          "completed_at": "2025-10-16T21:02:55.771078Z"
        },
        {
          "id": "0ae3776c-38cc-4b22-8e89-ed9ac767b512",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Add cli",
          "description": "I want to besides the tui add a cli interface to the application also\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 32,
          "due_date": null,
          "points": 4,
          "card_number": 32,
          "sprint_id": "737b04e6-52e2-4a40-bbaa-e2c9bcc84249",
          "created_at": "2025-10-12T08:23:41.175901Z",
          "updated_at": "2025-10-21T21:20:29.595146Z",
          "completed_at": null
        },
        {
          "id": "8e3a543e-86b0-405f-994e-515e013990b7",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "add ? binding",
          "description": "in different contexts it would be beneficial to press `?` to see a dialog detailing the different commands possible\n",
          "priority": "High",
          "status": "Todo",
          "position": 32,
          "due_date": null,
          "points": 3,
          "card_number": 33,
          "sprint_id": "737b04e6-52e2-4a40-bbaa-e2c9bcc84249",
          "created_at": "2025-10-12T13:35:39.923005Z",
          "updated_at": "2025-10-15T19:06:35.603043Z",
          "completed_at": null
        },
        {
          "id": "475bde99-0a3f-457c-9ea6-2fd51d1d7e73",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "when creating a task. set the cursor/selected task to the new task",
          "description": "it currently does something else\n",
          "priority": "High",
          "status": "Done",
          "position": 1,
          "due_date": null,
          "points": 1,
          "card_number": 34,
          "sprint_id": "737b04e6-52e2-4a40-bbaa-e2c9bcc84249",
          "created_at": "2025-10-12T13:37:00.520483Z",
          "updated_at": "2025-10-16T21:02:44.891687Z",
          "completed_at": "2025-10-16T21:02:44.891687Z"
        },
        {
          "id": "4e3ecb8a-476f-4f65-8060-5577eb32c192",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "make j/k work for changing panels",
          "description": "using 1/2/3 etc is cool and all but I would also like to step through the panels using hjkl\n\nin the board details view, sprint section we use a list to show sprints.\n\nI think we just use 0 index of lists to change panel up and list.length - 1 index to change panel down. \n\nSo for when a panel contains a list and we hit j/k step through the list until we reach the end or the beginning and then change the panel\n\n2025-10-22 06:11:39\n---\n\nWorks for main view but not for task details or board settings?\n",
          "priority": "Medium",
          "status": "Done",
          "position": 32,
          "due_date": null,
          "points": 2,
          "card_number": 35,
          "sprint_id": "737b04e6-52e2-4a40-bbaa-e2c9bcc84249",
          "created_at": "2025-10-12T13:39:14.336658Z",
          "updated_at": "2025-10-22T08:05:32.816090Z",
          "completed_at": "2025-10-22T08:05:32.816088Z"
        },
        {
          "id": "cdaed89e-ddb8-4a99-9567-b1096f6aaca2",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "audit history - keep a log of changes",
          "description": "This feels like a task that can easily spin out of control\n\nWe want to keep a historic log for changes to each entity\n\nDo I want to keep the log in a seperate file? \n\nWe start by keeping it simple. Start by proposing\n\n```JSON\n{ boards: [ ... ], logs: [ { boards: { ... }, ... ] } }\n```\n",
          "priority": "Low",
          "status": "Todo",
          "position": 35,
          "due_date": null,
          "points": 5,
          "card_number": 36,
          "sprint_id": null,
          "created_at": "2025-10-12T14:44:43.936971Z",
          "updated_at": "2025-10-14T20:45:27.235943Z",
          "completed_at": null
        },
        {
          "id": "3b771805-ec2a-4b6a-bc3d-57b1528e3742",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "hitting 2 should activate the highlighted board",
          "description": "The current ui is a bit unintuitive when wanting to navigate to the task list.\n\nI first have to select the board (enter/space) and then I can change to the task list using 2.\n\nIt would probably feel more natural to just have the activation when hitting 2 and activating the currently highlighted board.\n",
          "priority": "Low",
          "status": "Todo",
          "position": 36,
          "due_date": null,
          "points": 4,
          "card_number": 37,
          "sprint_id": null,
          "created_at": "2025-10-12T14:49:41.587356Z",
          "updated_at": "2025-10-14T20:40:40.083334Z",
          "completed_at": null
        },
        {
          "id": "8099e29b-21d9-404c-a716-47c659773f69",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "branch name doesnt reflected the used version",
          "description": "if a branch name is copied and then the prefix is updated for the board. the card is no longer connected to the correct branch name.\n\na log of branch names. prob the same goes for sprint names. so that we can always refer back to things that don't exist anymore\n",
          "priority": "Low",
          "status": "Todo",
          "position": 37,
          "due_date": null,
          "points": 2,
          "card_number": 38,
          "sprint_id": null,
          "created_at": "2025-10-12T15:43:38.123195Z",
          "updated_at": "2025-10-16T22:13:21.555943Z",
          "completed_at": null
        },
        {
          "id": "8be94a1d-a915-46d1-a7f1-020da9307cd9",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Tags for cards",
          "description": "On board level. Be able to define a set of tags..\n\nThen\n\nBe able to categorize (assign) cards using tag system\nBe able to filter task list by tags\n\nExamples of tags\n\n- Bugs\n- Feature\n- UI\n- Architecture\n\nActually. Maybe tags should be a entity on the same level as these and not tightly couple into board.\n\nWould allow for tag reuse across boards? but in such case would require in board. a reference to what tags are chosen.\n\n```JSON\n{\n  \"boards\": [\n    {\n      \"board\": { \"id\": \"...\", \"name\": \"My Board\", ... },\n      \"columns\": [ { \"id\": \"...\", \"name\": \"Todo\", ... } ],\n      \"cards\": [ { \"id\": \"...\", \"title\": \"My Task\", ... } ],\n      \"sprints\": [ { \"id\": \"...\", \"sprint_number\": 1, \"status\": \"Active\", ... } ]\n    }\n  ]\n}\n```\n\nE.g. \n```JSON\n{\n  \"boards\": [\n    {\n      \"board\": { \"id\": \"...\", \"name\": \"My Board\", ... },\n      \"columns\": [ { \"id\": \"...\", \"name\": \"Todo\", ... } ],\n      \"cards\": [ { \"id\": \"...\", \"title\": \"My Task\", ... } ],\n      \"sprints\": [ { \"id\": \"...\", \"sprint_number\": 1, \"status\": \"Active\", ... } ]\n      \"tags\": [ { \"id\": \"...\", \"name\": \"Feature\", ... } ],\n    }\n  ]\n}\n```\n\n",
          "priority": "Critical",
          "status": "Todo",
          "position": 38,
          "due_date": null,
          "points": 2,
          "card_number": 39,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-12T15:44:28.371016Z",
          "updated_at": "2025-10-20T15:48:49.737680Z",
          "completed_at": null
        },
        {
          "id": "ff2085d5-9304-423d-8169-6d3fb2a509d9",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Make card meta data editing like board settings edit",
          "description": "Replicate the board details editing in the card details metadata\n\nOpen in subset of the JSON and edit those field and then after save update only that subset\n",
          "priority": "Critical",
          "status": "Todo",
          "position": 37,
          "due_date": null,
          "points": 3,
          "card_number": 40,
          "sprint_id": "737b04e6-52e2-4a40-bbaa-e2c9bcc84249",
          "created_at": "2025-10-12T15:45:29.530124Z",
          "updated_at": "2025-10-16T22:40:13.981273Z",
          "completed_at": null
        },
        {
          "id": "21ef5706-4393-458e-93c2-a8ca7792afa8",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Add some retrospective note on completed tasks",
          "description": "It would be cool if we could add some retrospective note when completing a task\n\nWe could pull in the github pr description or write thoughts on the task or both\n",
          "priority": "Low",
          "status": "Todo",
          "position": 40,
          "due_date": null,
          "points": 2,
          "card_number": 41,
          "sprint_id": null,
          "created_at": "2025-10-12T15:48:23.468340Z",
          "updated_at": "2025-10-14T20:46:35.361196Z",
          "completed_at": null
        },
        {
          "id": "5b43a7e3-b056-4370-882a-bdad4bb9e0ed",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Assign task to sprint if created in sprint task list",
          "description": null,
          "priority": "Low",
          "status": "Todo",
          "position": 41,
          "due_date": null,
          "points": 2,
          "card_number": 42,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-12T16:45:24.828497Z",
          "updated_at": "2025-10-21T21:11:49.067711Z",
          "completed_at": null
        },
        {
          "id": "5d31ae81-75a7-47c7-a6d1-5a9b0f06a5b7",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "Remove projects projects and kanban green text",
          "description": "in the projects panel there is a green text with `Projects` we can drop this as the panel header itself shows projects too.\n\nin the task list there is a green text of the current project. we can drop this and rely on the highlighted item in the projects list instead\n",
          "priority": "Medium",
          "status": "Done",
          "position": 15,
          "due_date": null,
          "points": 1,
          "card_number": 43,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-12T16:45:41.135171Z",
          "updated_at": "2025-10-16T21:02:56.921732Z",
          "completed_at": "2025-10-16T21:02:56.921732Z"
        },
        {
          "id": "17d374eb-62fc-463b-9612-8d36b069c7c7",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "publish to crates.io",
          "description": null,
          "priority": "Medium",
          "status": "Done",
          "position": 33,
          "due_date": null,
          "points": 5,
          "card_number": 45,
          "sprint_id": null,
          "created_at": "2025-10-12T21:11:47.061988Z",
          "updated_at": "2025-10-22T15:41:26.230595Z",
          "completed_at": "2025-10-14T07:02:39.332363Z"
        },
        {
          "id": "014b6fcc-5451-4ef1-8b01-fbdad9117179",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "show branch name in task list",
          "description": "need to figure out where to fit the branch name... instead of the sprint name? hm\nwe can do the filtering by sprint anyway so make show the branch name instead as we can show the sprint as the header of the task list\n\nmvp\n\nfiltered by sprint task list show the sprint name next to each task. this is unncessary and it also shows the sprint name in white and not grey.\n\n- can we replace the sprint name in the filtered by sprint task list with the branch name and show it in grey as in the main task list\n",
          "priority": "Low",
          "status": "Todo",
          "position": 44,
          "due_date": null,
          "points": 1,
          "card_number": 46,
          "sprint_id": null,
          "created_at": "2025-10-14T20:35:32.904299Z",
          "updated_at": "2025-10-14T22:27:15.908246Z",
          "completed_at": null
        },
        {
          "id": "5418bcd1-4b9a-4be9-aa12-6b43254def2b",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Syntax highlighting for card description",
          "description": "Can we use something like treesitter to give meaningful MD syntax highlighting to card description\n",
          "priority": "Low",
          "status": "Todo",
          "position": 45,
          "due_date": null,
          "points": 2,
          "card_number": 47,
          "sprint_id": "737b04e6-52e2-4a40-bbaa-e2c9bcc84249",
          "created_at": "2025-10-14T20:39:56.710360Z",
          "updated_at": "2025-10-14T20:52:06.221534Z",
          "completed_at": null
        },
        {
          "id": "36847d94-e522-49b2-9794-685d38fc2544",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "make sprint names their own sequence",
          "description": "I would like the sprint branch names (e.g. `MVP-27`) to have their own sequence and if two sprints have the same prefix the should follow each others sequence\n",
          "priority": "Low",
          "status": "Todo",
          "position": 46,
          "due_date": null,
          "points": 2,
          "card_number": 48,
          "sprint_id": null,
          "created_at": "2025-10-14T20:50:11.268754Z",
          "updated_at": "2025-10-22T04:13:22.976951Z",
          "completed_at": null
        },
        {
          "id": "71f10e4f-d2bf-4be3-9150-87bfb16b1807",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "hitting `q` in dialogue quits the program",
          "description": "this interupts typing q from the dialog box.\n\nPlease disable quitting the program when a text input in a dialogue is selected\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 47,
          "due_date": null,
          "points": 3,
          "card_number": 49,
          "sprint_id": "737b04e6-52e2-4a40-bbaa-e2c9bcc84249",
          "created_at": "2025-10-14T20:50:42.305840Z",
          "updated_at": "2025-10-15T18:59:52.039020Z",
          "completed_at": null
        },
        {
          "id": "4b875d66-a9a2-48b9-83e6-3b879ade8b4e",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "cards without priority should be order following low priority",
          "description": "When ordering cards by priority (or anything) set the undefined item last\n",
          "priority": "Low",
          "status": "Todo",
          "position": 31,
          "due_date": null,
          "points": 1,
          "card_number": 50,
          "sprint_id": null,
          "created_at": "2025-10-14T20:52:00.077779Z",
          "updated_at": "2025-10-18T19:38:30.984461Z",
          "completed_at": null
        },
        {
          "id": "a1576713-adde-4b20-9e28-ecb08226f8a7",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "move in source test functions so spec files",
          "description": "Any tests that are defined next to source code should be moved into their own files\n",
          "priority": "Low",
          "status": "Todo",
          "position": 49,
          "due_date": null,
          "points": 1,
          "card_number": 51,
          "sprint_id": null,
          "created_at": "2025-10-14T21:25:48.820829Z",
          "updated_at": "2025-10-14T21:26:19.463651Z",
          "completed_at": null
        },
        {
          "id": "5a1655e1-3ee3-4987-b352-3334686418b9",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "sprint details UI",
          "description": "currently the sprint details ui is blank. there is nothing there\n\nWe add details to that view\n\n- Sprint name\n- Number days left out of how many (6/7 days) where 6 is the current day and 7 is the final day\n- tasks taken, points total\n- next sprint. Assign tasks to next Sprint\n- close sprint. start next sprint. show task rollover, be able to select tasks for exclusion. or have the behaviour configurable to the opposite. Show tasks for exclusion and be able to select tasks for rollover. Configurable in board level\n\nThis should be the mvp\n\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 50,
          "due_date": null,
          "points": 4,
          "card_number": 52,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-14T21:33:04.011953Z",
          "updated_at": "2025-10-17T06:14:51.908241Z",
          "completed_at": null
        },
        {
          "id": "63f4e1ea-388d-4352-a592-2c8b085aebd3",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "pressing t then T always leads to an empty tasks list that doesnt make snse they should be mutually exclusive",
          "description": null,
          "priority": "Medium",
          "status": "Todo",
          "position": 51,
          "due_date": null,
          "points": 1,
          "card_number": 53,
          "sprint_id": null,
          "created_at": "2025-10-14T22:06:38.146481Z",
          "updated_at": "2025-10-14T22:50:42.125969Z",
          "completed_at": null
        },
        {
          "id": "1b503514-c96a-4ee7-83c4-4c4cd45b51a0",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "days left on sprint",
          "description": "in both the filtered task list and the sprint details. \n\nmake an output showing how many days there are left until the sprint ends\n\nif less than a day. show `hh:mm:ss`\n\nAfter finish show `+hh:mm:ss`\n",
          "priority": "Low",
          "status": "Done",
          "position": 23,
          "due_date": null,
          "points": 1,
          "card_number": 54,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-15T16:36:21.133233Z",
          "updated_at": "2025-10-18T20:17:44.271667Z",
          "completed_at": "2025-10-18T20:17:44.271652Z"
        },
        {
          "id": "0ce90167-1169-40fa-915e-54ca0ff6ed2f",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Scroll in cards list",
          "description": "When the task list has grown too big for the current window. we dont show the overflow. we just cut it out\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 32,
          "due_date": null,
          "points": 3,
          "card_number": 55,
          "sprint_id": null,
          "created_at": "2025-10-15T16:41:59.784803Z",
          "updated_at": "2025-10-18T19:39:16.635110Z",
          "completed_at": null
        },
        {
          "id": "44079721-1755-4ef4-9713-adb3453f0343",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "`v` only works for one column",
          "description": "Something is off with the selected card. it is not selecting the right car when using `v`, `e` or `space | enter`\n\nThis feature is looking rather fully fledged.\n\nLets go and try to complete it as soov as we can.\n\nWhats currently on my mind is what is the state of of develop.\n\nWe should probably add a develop / in review / merged column and see how that behaves and if we can move all the cards that are currently on develop into it.\n",
          "priority": "High",
          "status": "Done",
          "position": 16,
          "due_date": null,
          "points": 4,
          "card_number": 57,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-16T22:12:16.643878Z",
          "updated_at": "2025-10-17T06:13:05.136314Z",
          "completed_at": "2025-10-16T22:25:04.233204Z"
        },
        {
          "id": "41ec637a-35f3-47a6-bf82-2bfb38f9b2d3",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "moving card to last column doesnt set complete",
          "description": null,
          "priority": "Medium",
          "status": "Done",
          "position": 17,
          "due_date": null,
          "points": null,
          "card_number": 58,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-16T22:25:18.533969Z",
          "updated_at": "2025-10-16T22:25:41.421736Z",
          "completed_at": "2025-10-16T22:25:41.421733Z"
        },
        {
          "id": "93426618-f32a-44ee-bb3f-5020b76ad795",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "hitting c to complete a card doesnt move it to the last column",
          "description": "The behaviour of moving cards between columns isnt quite working. I have one card stuck in in doing and I cant move it with either `h`/`l` or `c`.\n\nIt doesnt seem to me to be working to move cards freely back and forth between the columns. something is off...\n\nso I select the second column with `2` and then hit `e` to edit that cards description. It edits another card..\n\n2025-10-20 17:39:14\n---\n\nSomewhere along the lines we lost the ability to move cards with `H` / `L`\n\nToggle complete also does not move said card into the last column\n\nFix this \n\n2025-10-21 23:14:58\n---\n\nI think it only doesnt happen in kanban view!\n\nkanban/crates/kanban-tui/src/handlers/card_handlers.rs, the handle_move_card_left() and handle_move_card_right()\n\nhandlers have a critical bug:\n\nIn kanban view (ColumnView), the code only updates column selection but never calls refresh_view():\n\nif self.is_kanban_view() {\n    if let Some(current_col_idx) = self.column_selection.get() {\n        if current_col_idx > 0 {\n            self.column_selection.set(Some(current_col_idx - 1));\n        }\n    }\n} else {\n    self.refresh_view();  // <-- This is only in the else branch!\n    self.select_card_by_id(card_id);\n}\n\nThis means:\n- The card's column_id and position ARE updated in memory\n- But the UI is NOT re-rendered to show the change\n- The kanban view doesn't redraw with the card in its new location\n\nIn flat/grouped views, it works because refresh_view() IS called.\n\nThere may also be a secondary issue: the handlers depend on get_selected_card_in_context() returning a card, which relies on the view\nstrategy having a selected card. If card selection isn't being maintained properly, the handlers wouldn't execute at all.\n\nPlan to Fix\n\nHere's what needs to be done:\n\n1. Add refresh_view() call to the kanban view branch in handle_move_card_left() (line ~349)\n2. Add refresh_view() call to the kanban view branch in handle_move_card_right() (line ~405)\n3. Add select_card_by_id() call after refresh in both handlers to maintain card selection\n4. Verify that card selection is being properly initialized when switching views\n5. Test the fix to ensure cards move and stay selected in all view modes\n\n> TLDR; it does happen it just doesnt update\n\n---\n\nRemains to be tested how this all behaves in a one column board\n",
          "priority": "Medium",
          "status": "Done",
          "position": 28,
          "due_date": null,
          "points": 3,
          "card_number": 59,
          "sprint_id": null,
          "created_at": "2025-10-16T22:26:00.559077Z",
          "updated_at": "2025-10-21T21:23:54.138052Z",
          "completed_at": "2025-10-21T21:23:31.703244Z"
        },
        {
          "id": "2c8d9c7d-44c8-49d5-a3e8-027356e694a6",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "moving cards out of complete column doesnt unmark the card as complete",
          "description": "Moving cards out from the last column doesnt seem to unmark them as complete\nMoving cards into the last column doesnt seem to mark them as complete\n\nEntering into the selected card doesnt work. When use `e` on whatever card it opens up a different one\n\nUntil we get the selecting of proper cards fixed we won't have any good board. It will be messy and things wil end up in wrong places\n\nI think the last thing I did was to try move a card around the columns. \n\nIt moved the wrong card. I tried to move that one back, nothing happened.\n\nMoving cards back don't work?\n\n---\n\nJust a card that I picked out. We have `column_id` now so we can drop `status`.\n\n```JSON\n{\n  \"id\": \"0ce90167-1169-40fa-915e-54ca0ff6ed2f\",\n  \"column_id\": \"289b85d8-a199-49fa-9d77-5ad892d87ef8\",\n  \"title\": \"Scroll in cards list\",\n  \"description\": \"When the task list has grown too big for the current window. we dont show the overflow. we just cut it out\\n\",\n  \"priority\": \"Medium\",\n  \"status\": \"Todo\",\n  \"position\": 19,\n  \"due_date\": null,\n  \"points\": 3,\n  \"card_number\": 55,\n  \"sprint_id\": null,\n  \"created_at\": \"2025-10-15T16:41:59.784803Z\",\n  \"updated_at\": \"2025-10-17T06:13:13.740612Z\",\n  \"completed_at\": null\n}\n```\n\n\n",
          "priority": "Medium",
          "status": "Done",
          "position": 20,
          "due_date": null,
          "points": null,
          "card_number": 60,
          "sprint_id": null,
          "created_at": "2025-10-16T22:37:13.346713Z",
          "updated_at": "2025-10-17T06:21:06.702579Z",
          "completed_at": "2025-10-17T06:21:06.702575Z"
        },
        {
          "id": "10a07993-862e-4dfa-ae9f-73a65145bd6c",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "ci improvements",
          "description": "these cards are also tangentially part of the changes made for this one\n\n- KAN-59/hitting-c-to-complete-a-card-doesnt-move-it-to-the-last-column\n- MVP-7/add-column-definitions\n\n---\n\nWe should really get card relations going\n",
          "priority": "High",
          "status": "Done",
          "position": 30,
          "due_date": null,
          "points": 3,
          "card_number": 62,
          "sprint_id": null,
          "created_at": "2025-10-18T20:50:38.307753Z",
          "updated_at": "2025-10-21T21:11:29.959218Z",
          "completed_at": "2025-10-21T21:11:29.959218Z"
        },
        {
          "id": "6366fa7d-4e1b-4ba8-92fa-f38855af37eb",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "ci-side-tracked",
          "description": null,
          "priority": "Medium",
          "status": "Done",
          "position": 28,
          "due_date": null,
          "points": 3,
          "card_number": 63,
          "sprint_id": null,
          "created_at": "2025-10-18T23:13:25.559834Z",
          "updated_at": "2025-10-21T21:11:29.582640Z",
          "completed_at": "2025-10-21T21:11:29.582640Z"
        },
        {
          "id": "38f49d18-e53a-4df6-b1d2-13bb7044b5d0",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "create task in the focused column",
          "description": null,
          "priority": "Low",
          "status": "Done",
          "position": 30,
          "due_date": null,
          "points": 1,
          "card_number": 64,
          "sprint_id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "created_at": "2025-10-18T23:13:45.804096Z",
          "updated_at": "2025-10-22T03:26:12.371265Z",
          "completed_at": "2025-10-22T03:26:12.371263Z"
        },
        {
          "id": "6eea863d-df28-4ab0-9ff5-3878c448a99a",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "ci split 2",
          "description": null,
          "priority": "Medium",
          "status": "Done",
          "position": 29,
          "due_date": null,
          "points": 3,
          "card_number": 65,
          "sprint_id": null,
          "created_at": "2025-10-19T00:07:27.116385Z",
          "updated_at": "2025-10-21T21:11:29.062052Z",
          "completed_at": "2025-10-21T21:11:29.062050Z"
        },
        {
          "id": "68a45e0c-b223-4e06-a5a7-d367979f5967",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Create new card from card",
          "description": "Be able to create a new card based on current card description.\n\nOpen card details with the currently selected cards data copied into a new card\n\nNeed some indicator in ui that a new card is being created \n\nif no changes are made in to the new card. do nothing. create no new card\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 29,
          "due_date": null,
          "points": null,
          "card_number": 66,
          "sprint_id": null,
          "created_at": "2025-10-20T15:37:09.068407Z",
          "updated_at": "2025-10-21T21:20:07.570340Z",
          "completed_at": null
        },
        {
          "id": "2defd1a8-9c55-4ef9-801f-9522a9c72a4a",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Archive a card",
          "description": "Be able to archive a card.\n\nIn the domain model we add.\n\n```JSON\n{\n  \"id\": \"2defd1a8-9c55-4ef9-801f-9522a9c72a4a\",\n  \"column_id\": \"591afb61-7289-46bf-ba07-21758afd44fe\",\n  \"title\": \"Archive a card\",\n  \"description\": \"Be able to archive a card.\\n\\nIn the domain model we add.\\n\\n\\n\",\n  \"priority\": \"Medium\",\n  \"status\": \"Todo\",\n  \"position\": 30,\n  \"due_date\": null,\n  \"points\": 2,\n  \"card_number\": 67,\n  \"sprint_id\": \"737b04e6-52e2-4a40-bbaa-e2c9bcc84249\",\n  \"created_at\": \"2025-10-20T15:49:39.413116Z\",\n  \"updated_at\": \"2025-10-20T15:52:36.784687Z\",\n  \"completed_at\": null\n}\n```\n\nto\n\n```JSON\n{\n  \"id\": \"2defd1a8-9c55-4ef9-801f-9522a9c72a4a\",\n  \"column_id\": \"591afb61-7289-46bf-ba07-21758afd44fe\",\n  \"title\": \"Archive a card\",\n  \"description\": \"Be able to archive a card.\\n\\nIn the domain model we add.\\n\\n\\n\",\n  \"priority\": \"Medium\",\n  \"status\": \"Todo\",\n  \"position\": 30,\n  \"due_date\": null,\n  \"points\": 2,\n  \"card_number\": 67,\n  \"sprint_id\": \"737b04e6-52e2-4a40-bbaa-e2c9bcc84249\",\n  \"created_at\": \"2025-10-20T15:49:39.413116Z\",\n  \"updated_at\": \"2025-10-20T15:52:36.784687Z\",\n  \"completed_at\": null,\n  \"archived_at\": null | \"2025-10-20T15:52:36.784687Z\"\n}\n```\n\n`\"archived_at\": null | \"2025-10-20T15:52:36.784687Z\"`\n\nwe add the `archived_at` key that will either have a date or a null value.\n\nNull if the card was never archived or the date for when the card was archived\n\nif the card has an `archived_at` value we should exclude it from the main tasks lists\n\nwe shoeuld probably also be able to compose an archived_at list\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 32,
          "due_date": null,
          "points": 2,
          "card_number": 67,
          "sprint_id": "737b04e6-52e2-4a40-bbaa-e2c9bcc84249",
          "created_at": "2025-10-20T15:49:39.413116Z",
          "updated_at": "2025-10-22T13:27:01.200660Z",
          "completed_at": null
        },
        {
          "id": "44270526-19aa-4d58-b895-75f1bb7fb1be",
          "column_id": "289b85d8-a199-49fa-9d77-5ad892d87ef8",
          "title": "treesitter for syntax highlighting",
          "description": "\n```ts\nconst a = 'test';\n```\nSyntect + Markdown: Overview\n\nSyntect can't parse markdown directly, but it\nintegrates beautifully with markdown parsers to highlight code\nblocks within markdown.\n\nHow it works:\n1. Parse markdown using a crate like pulldown-cmark or comrak\n2. When the parser encounters a code block, extract it\n3. Pass it to syntect with the language hint (e.g., rust, python)\n4. Syntect returns highlighted tokens\n5. Render styled text in ratatui\n\nRecommended Stack\n\nFor your kanban task details:\nmarkdown text → pulldown-cmark (parser) → syntect (highlighter) →\nratatui (renderer)\n\nThis gives you:\n- ✅ Full markdown support (bold, italic, links, lists, etc.)\n- ✅ Syntax-highlighted code blocks (any language)\n- ✅ Simple, composable architecture\n- ✅ No semantic tree-sitter needed\n\nArchitecture Approach\n\nCreate a module in kanban-tui called markdown_renderer:\n1. Parse markdown with pulldown-cmark\n2. For each event, check if it's a code block\n3. If yes → use syntect to highlight\n4. Convert to ratatui Spans/Line for terminal rendering\n\nThis is exactly what tools like mdcat and bat do, so it's\nbattle-tested.\n\nPractical Example Flow\n\nCard description: \"Here's the fix:\\n\\n```rust\\nfn add(a: i32) { a\n+ 1 }\\n```\"\n    ↓\nParse markdown (Event::Start(CodeBlock(\"rust\")), Event::Text(\"fn\nadd...\"))\n    ↓\nFor code blocks: syntect highlights with rust grammar\n    ↓\nRender in ratatui with colors/styles\n\nWould you like me to plan out the implementation for integrating\nthis into the kanban TUI?\n\nMerged\n---\n\nThis ticket was merged without any syntax highlighting for code blocks. I accept this as an ok compromise for now and merge to make incremental progress\n",
          "priority": "Medium",
          "status": "Done",
          "position": 31,
          "due_date": null,
          "points": 4,
          "card_number": 68,
          "sprint_id": "737b04e6-52e2-4a40-bbaa-e2c9bcc84249",
          "created_at": "2025-10-21T21:24:51.757355Z",
          "updated_at": "2025-10-22T04:09:38.951784Z",
          "completed_at": "2025-10-22T04:09:38.951780Z"
        },
        {
          "id": "00f1e6ee-435a-4f4a-b0d8-29e61e1b184b",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "changeset script to add timestamp of changeset creation and card name",
          "description": null,
          "priority": "Medium",
          "status": "Todo",
          "position": 34,
          "due_date": null,
          "points": null,
          "card_number": 77,
          "sprint_id": null,
          "created_at": "2025-10-21T22:01:25.695703Z",
          "updated_at": "2025-10-21T22:01:44.972588Z",
          "completed_at": null
        },
        {
          "id": "b98a6b72-f3b0-464d-a904-37dcd2fb0eb9",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "extend test coverage",
          "description": "Our test coverage is currently lacking.\n\nLet us try to hit more lines\n\nkan 64 we started\n---\n```sh\n═══════════════════════════════════════════════════════════════════════════════\n                     FEATURE IMPLEMENTATION COMPLETE ✅\n═══════════════════════════════════════════════════════════════════════════════\n\n⏺ 🎉 Complete Feature Implementation Summary\n\n  I've successfully implemented the card creation feature with comprehensive tests and\n  following all CONTRIBUTING.md guidelines:\n\n  ✅ 4 Atomic Commits Created\n\n  Feature Implementation (3 commits):\n  1. Helper method for getting focused column ID\n  2. Card creation in focused columns (Grouped & Kanban views)\n  3. Auto-complete cards in last column (when >2 columns)\n\n  Testing (1 commit):\n  4. 7 comprehensive integration tests covering all scenarios\n\n  ✅ Test Coverage\n\n  - 7 new integration tests - all passing ✓\n  - 32 total tests - all passing ✓\n  - Tests cover:\n    - Default first column creation\n    - Focused column creation (GroupedView & KanbanView)\n    - Auto-complete with 3+ columns\n    - No auto-complete with 2 or fewer columns\n    - Multiple cards in same column\n    - Edge cases\n\n  ✅ Code Quality\n\n  - Follows semantic commit format\n  - Each commit is independent and buildable\n  - No warnings or errors\n  - PR #62 has comprehensive description with What/Why/How sections\n  - All existing functionality preserved\n  ```\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 35,
          "due_date": null,
          "points": null,
          "card_number": 78,
          "sprint_id": null,
          "created_at": "2025-10-22T03:24:52.753403Z",
          "updated_at": "2025-10-22T03:28:07.723338Z",
          "completed_at": null
        },
        {
          "id": "3baa4c7a-1b7f-47da-9b7f-2ba593e9d9b7",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "Assignee for cards",
          "description": "Be able to add assignee to card\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 36,
          "due_date": null,
          "points": null,
          "card_number": 79,
          "sprint_id": null,
          "created_at": "2025-10-22T04:09:49.994777Z",
          "updated_at": "2025-10-22T04:10:18.385495Z",
          "completed_at": null
        },
        {
          "id": "a7b6cf8e-fa26-4625-ad97-18ed6095bca3",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "j / k doesnt work on empty columns",
          "description": null,
          "priority": "Medium",
          "status": "Todo",
          "position": 36,
          "due_date": null,
          "points": null,
          "card_number": 81,
          "sprint_id": null,
          "created_at": "2025-10-22T15:41:13.773865Z",
          "updated_at": "2025-10-22T15:41:13.773865Z",
          "completed_at": null
        },
        {
          "id": "10551177-bbc3-4096-89e7-0c40f324e0b4",
          "column_id": "db3aaee8-0f13-4afa-b000-592bac0bf364",
          "title": "when sprint completes, dont remove card -> sprint reference",
          "description": "When a sprint is completed\n\nDont clear the reference to said sprint when it has been marked as completed.\n\nWe would rather like to filter out cards from completed sprints from any card lists\n\n2025-10-22 17:52:51\n---\n\nI would also like to make the first addition to the sprint details interface\n\nI would like a panel showing tasks\n\nfor completed sprints the panel should be column split into two panels \n\nleft panel would show a card list with non completed cards\n\nright panel would show a card list with completed cards\n\nat the bottom of each of these column we would sum up the points for the cards in the list\n\n2025-10-22 21:45:54\n---\n\nTo the sprint details ui we also add editing of the sprint settings json. such as setting the sprint override prefix\n\nIn the sprint details we add starting date and ending date aswell as days left, tasks left.\n",
          "priority": "High",
          "status": "Todo",
          "position": 0,
          "due_date": null,
          "points": 4,
          "card_number": 82,
          "sprint_id": "737b04e6-52e2-4a40-bbaa-e2c9bcc84249",
          "created_at": "2025-10-22T15:46:45.372862Z",
          "updated_at": "2025-10-22T19:46:14.220549Z",
          "completed_at": null
        },
        {
          "id": "522289ef-1126-4076-a192-85a4ea40570b",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "editing task settings by json",
          "description": "In task details I would like to edit the meta data panel by json interface like we do in the board details\n\nthe current `e` binding that opens a dialog to set the points with will move to `p` and `e` will instead open up $EDITOR with the json for the task metadata\n",
          "priority": "Medium",
          "status": "Todo",
          "position": 36,
          "due_date": null,
          "points": null,
          "card_number": 83,
          "sprint_id": null,
          "created_at": "2025-10-22T19:37:16.156456Z",
          "updated_at": "2025-10-22T19:38:36.169588Z",
          "completed_at": null
        },
        {
          "id": "9d7ee9b3-205a-4fab-997d-5b944805c2c9",
          "column_id": "591afb61-7289-46bf-ba07-21758afd44fe",
          "title": "a sprint can only be completed after the duration is over",
          "description": null,
          "priority": "Medium",
          "status": "Todo",
          "position": 37,
          "due_date": null,
          "points": null,
          "card_number": 84,
          "sprint_id": null,
          "created_at": "2025-10-22T19:49:01.680522Z",
          "updated_at": "2025-10-22T19:49:01.680522Z",
          "completed_at": null
        }
      ],
      "sprints": [
        {
          "id": "5fffb1a7-facb-4461-b0f1-13ec3e4d3f3a",
          "board_id": "e119c091-e1fa-4596-9bc7-038ceab6adec",
          "sprint_number": 1,
          "name_index": 0,
          "prefix_override": null,
          "status": "Completed",
          "start_date": "2025-10-12T13:49:57.439840Z",
          "end_date": "2025-10-19T13:49:57.439840Z",
          "created_at": "2025-10-12T13:46:50.902284Z",
          "updated_at": "2025-10-22T08:06:37.993876Z"
        },
        {
          "id": "737b04e6-52e2-4a40-bbaa-e2c9bcc84249",
          "board_id": "e119c091-e1fa-4596-9bc7-038ceab6adec",
          "sprint_number": 6,
          "name_index": 1,
          "prefix_override": null,
          "status": "Active",
          "start_date": "2025-10-22T19:35:38.478143Z",
          "end_date": "2025-10-29T19:35:38.478143Z",
          "created_at": "2025-10-12T17:32:56.610133Z",
          "updated_at": "2025-10-22T19:35:38.478149Z"
        }
      ]
    }
  ]
}