name: Publish to crates.io

on:
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  publish:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: master
          fetch-depth: 0

      - name: Check for changesets
        id: check
        run: |
          CHANGESETS=$(ls .changeset/*.md 2>/dev/null | grep -v "README.md" || true)
          if [ -z "$CHANGESETS" ]; then
            echo "No changesets found, skipping publish"
            echo "has_changesets=false" >> $GITHUB_OUTPUT
          else
            echo "has_changesets=true" >> $GITHUB_OUTPUT
          fi

      - uses: cachix/install-nix-action@v27
        if: steps.check.outputs.has_changesets == 'true'
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Setup SSH deploy key
        if: steps.check.outputs.has_changesets == 'true'
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Configure Git
        if: steps.check.outputs.has_changesets == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin git@github.com:fulsomenko/kanban.git

      - name: Validate release build
        if: steps.check.outputs.has_changesets == 'true'
        run: |
          nix develop --command bash scripts/validate-release.sh

      - name: Bump version and update changelog
        if: steps.check.outputs.has_changesets == 'true'
        run: |
          nix run .#bump-version -- ${{ github.event.pull_request.number }}

      - name: Get new version
        if: steps.check.outputs.has_changesets == 'true'
        id: version
        run: echo "version=$(grep -m1 'version = ' Cargo.toml | cut -d'"' -f2)" >> $GITHUB_OUTPUT

      - name: Commit and push version bump
        if: steps.check.outputs.has_changesets == 'true'
        run: |
          git add .
          git commit -m "chore: bump version to ${{ steps.version.outputs.version }} [skip ci]"
          GIT_SSH_COMMAND="ssh -i ~/.ssh/deploy_key -o IdentitiesOnly=yes -o StrictHostKeyChecking=no" git push origin master

      - name: Tag version
        if: steps.check.outputs.has_changesets == 'true'
        run: |
          git tag "v${{ steps.version.outputs.version }}"
          GIT_SSH_COMMAND="ssh -i ~/.ssh/deploy_key -o IdentitiesOnly=yes -o StrictHostKeyChecking=no" git push origin "v${{ steps.version.outputs.version }}"

      - name: Dry-run publish validation
        if: steps.check.outputs.has_changesets == 'true'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          echo "ðŸ“¦ Running dry-run publish validation..."
          for crate in crates/kanban-core crates/kanban-domain crates/kanban-tui crates/kanban-cli; do
            echo "Validating $crate..."
            nix develop --command cargo publish --dry-run --manifest-path "$crate/Cargo.toml"
          done
          echo "âœ… All crates passed dry-run validation"

      - name: Publish to crates.io
        if: steps.check.outputs.has_changesets == 'true'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          echo "ðŸš€ Publishing crates to crates.io..."
          nix run .#publish-crates
          echo "âœ… All crates published successfully"

      - name: Create GitHub Release
        if: steps.check.outputs.has_changesets == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.version }}
          generate_release_notes: true
